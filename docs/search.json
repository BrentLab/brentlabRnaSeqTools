[{"path":"https://brentlab.github.io/brentlabRnaSeqTools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Chase Mateusiak Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Analysis_Tally.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"QC: Replicate Agreement Analysis and tally","text":"TODO possible database updated submitting","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Analysis_Tally.html","id":"setup-the-environment","dir":"Articles","previous_headings":"","what":"Setup the environment","title":"QC: Replicate Agreement Analysis and tally","text":"","code":"library(brentlabRnaSeqTools) library(rtracklayer) library(tidyverse) library(caret)  # set variables ----  KN99_GFF_PATH = Sys.getenv(\"kn99_gff\") DB_USERNAME = Sys.getenv(\"db_username\") DB_PASSWORD = Sys.getenv(\"db_password\")  DESEQ_OUTPUT_LIST = list(   ninetyMin_grant = \"/mnt/htcf_scratch/chasem/rnaseq_pipeline/experiments/90minDataFreeze/20211215/grant_only_20211215_output.rds\",   ninetyMin_2016GrantWithDoubles = \"/mnt/htcf_scratch/chasem/rnaseq_pipeline/experiments/90minDataFreeze/20211215/grant_doubles_20211215_output.rds\",  ninetyMin_all = \"/mnt/htcf_scratch/chasem/rnaseq_pipeline/experiments/90minDataFreeze/20211215/90min_all_20211215_output.rds\" )  # controls whether dds objects are written UPDATE_DB = FALSE  # Pull the database ---- blrs = brentlabRnaSeqSetFromDatabase('kn99',DB_USERNAME, DB_PASSWORD)  # filter down to just the protein coding genes. Note that this works because the # nctr-rna annotations were all added to the end of the annotation file. blrs = blrs[1:6967,]  # Add gene level data (optional) ----  # this adds all of the data regarding each locus as a GRange object to the # gene data slot of the brentlabRnaSeqSet object. Useful if you are going to # use other Bioconductor packages, or brentlabRnaSeqTools::createIgvBrowserShot()  kn99_gff = rtracklayer::import(KN99_GFF_PATH)  kn99_genes = kn99_gff[kn99_gff$ID %in% rownames(blrs)]  rowRanges(blrs) = kn99_genes[order(match(kn99_genes$ID,rownames(blrs)))]"},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Analysis_Tally.html","id":"grant-set","dir":"Articles","previous_headings":"","what":"2016 grant set","title":"QC: Replicate Agreement Analysis and tally","text":"data set defined single locus KOs 90minuteInduction conditions genotypes grant_df (data object loaded part brentlabRnaSeqTools – take look interested)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Analysis_Tally.html","id":"create-the-set","dir":"Articles","previous_headings":"2016 grant set","what":"Create the set","title":"QC: Replicate Agreement Analysis and tally","text":"","code":"# get deseq output object blrs_90min_grant_qc_passing = readRDS(DESEQ_OUTPUT_LIST$ninetyMin_grant)"},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Analysis_Tally.html","id":"set-unwanted-parameters-and-replicate-groups","dir":"Articles","previous_headings":"2016 grant set > RLE transform","what":"set unwanted parameters and replicate groups","title":"QC: Replicate Agreement Analysis and tally","text":"","code":"# define unwanted design indicies ----  unwanted_indicies = which(startsWith(colnames(design(   blrs_90min_grant_qc_passing)), \"library\"))  # set replicate groups ----  replicate_split =    as_tibble(colData(blrs_90min_grant_qc_passing)) %>%   group_by(genotype1) %>%   group_split()  replicate_names =    lapply(replicate_split,           function(x)             as.character(unique(pull(x,genotype1))))  replicate_sample_list =    lapply(replicate_split, function(x)      as.vector(pull(x,fastqFileName)))  names(replicate_sample_list) = replicate_names"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Analysis_Tally.html","id":"get-unwated-parameter-effect-removed-quants","dir":"Articles","previous_headings":"2016 grant set > RLE transform","what":"get unwated parameter effect removed quants","title":"QC: Replicate Agreement Analysis and tally","text":"","code":"removed_effect_log_norm = removeParameterEffects(blrs_90min_grant_qc_passing,                                                   unwanted_indicies)  removed_effect_rle_by_replicate_group =    rleByReplicateGroup(replicate_sample_list,                       removed_effect_log_norm,                        log2_transformed_flag = TRUE)  removed_effect_rle_summary =    as_tibble(bind_rows(lapply(removed_effect_rle_by_replicate_group,                               rleSummary)),              rownames = \"fastqFileName\") %>%    left_join(as_tibble(colData(blrs_90min_grant_qc_passing)),              by='fastqFileName') log_norm_rle = calculateRLE(counts(blrs_90min_grant_qc_passing),                              log2_transformed_flag = FALSE)  log_norm_rle_by_replicate_group =    rleByReplicateGroup(replicate_sample_list,                       log_norm_rle,                        log2_transformed_flag = TRUE)  log_norm_rle_summary =    as_tibble(bind_rows(lapply(log_norm_rle_by_replicate_group,                               rleSummary)), rownames = \"fastqFileName\") %>%    left_join(as_tibble(colData(blrs_90min_grant_qc_passing)),              by='fastqFileName')"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Analysis_Tally.html","id":"update-the-database","dir":"Articles","previous_headings":"2016 grant set > RLE transform","what":"Update the database","title":"QC: Replicate Agreement Analysis and tally","text":"","code":"if(UPDATE_DB){     update_df = removed_effect_rle_summary %>%    select(replicateAgreementNumber, rle_iqr, rle_median_deviation) %>%    dplyr::rename(ninetyMin_iqr = rle_iqr,                   ninetyMin_median_dev = rle_median_deviation)     res = patchTable(   database_info$kn99$urls$replicateAgreement,   Sys.getenv(\"kn99_token\"),   update_df,   \"replicateAgreementNumber\")  }  # check status ---- ## failures should only be those without enough replicates to calculate RLE x = map(res, ~as.numeric(.$status_code)) x[unlist(x) != 200]"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Analysis_Tally.html","id":"grant-set-with-doubles","dir":"Articles","previous_headings":"","what":"2016 Grant Set with Doubles","title":"QC: Replicate Agreement Analysis and tally","text":"data set defined double corresponding single locus KOs 90minuteInduction conditions genotypes grant_df (data object loaded part brentlabRnaSeqTools – take look interested)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Analysis_Tally.html","id":"create-the-set-1","dir":"Articles","previous_headings":"2016 Grant Set with Doubles","what":"Create the set","title":"QC: Replicate Agreement Analysis and tally","text":"","code":"# Read in the processed data (post DESeq) blrs_grant_with_doubles_passing = readRDS(DESEQ_OUTPUT_LIST$ninetyMin_2016GrantWithDoubles)"},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Analysis_Tally.html","id":"set-unwanted-parameters-and-replicate-groups-1","dir":"Articles","previous_headings":"2016 Grant Set with Doubles > RLE transform","what":"set unwanted parameters and replicate groups","title":"QC: Replicate Agreement Analysis and tally","text":"","code":"# define unwanted design indicies ----  unwanted_indicies = which(startsWith(colnames(design(   blrs_grant_with_doubles_passing)), \"library\"))  # set replicate groups ----  replicate_split =    as_tibble(colData(blrs_grant_with_doubles_passing)) %>%   group_by(genotype) %>%   group_split()  replicate_names =    lapply(replicate_split,           function(x)             as.character(unique(pull(x,genotype))))  replicate_sample_list =    lapply(replicate_split, function(x)      as.vector(pull(x,fastqFileName)))  names(replicate_sample_list) = replicate_names"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Analysis_Tally.html","id":"get-unwated-parameter-effect-removed-quants-1","dir":"Articles","previous_headings":"2016 Grant Set with Doubles > RLE transform","what":"get unwated parameter effect removed quants","title":"QC: Replicate Agreement Analysis and tally","text":"","code":"removed_effect_log_norm = removeParameterEffects(blrs_grant_with_doubles_passing,                                                   unwanted_indicies)  removed_effect_rle_by_replicate_group =    rleByReplicateGroup(replicate_sample_list,                       as_tibble(removed_effect_log_norm),                        log2_transformed_flag = TRUE)  removed_effect_rle_summary =    as_tibble(bind_rows(lapply(removed_effect_rle_by_replicate_group,                               rleSummary)),              rownames = \"fastqFileName\") %>%    left_join(as_tibble(colData(blrs_grant_with_doubles_passing)),              by='fastqFileName') log_norm_rle = calculateRLE(counts(blrs_grant_with_doubles_passing),                              log2_transformed_flag = FALSE)  log_norm_rle_by_replicate_group =    rleByReplicateGroup(replicate_sample_list,                       as_tibble(log_norm_rle),                        log2_transformed_flag = TRUE)  log_norm_rle_summary =    as_tibble(bind_rows(lapply(log_norm_rle_by_replicate_group,                               rleSummary)), rownames = \"fastqFileName\") %>%    left_join(as_tibble(colData(blrs_grant_with_doubles_passing)),              by='fastqFileName')"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Analysis_Tally.html","id":"update-the-database-1","dir":"Articles","previous_headings":"2016 Grant Set with Doubles > RLE transform","what":"Update the database","title":"QC: Replicate Agreement Analysis and tally","text":"","code":"if(UPDATE_DB){     update_df = removed_effect_rle_summary %>%    select(replicateAgreementNumber, rle_iqr, rle_median_deviation) %>%    dplyr::rename(ninetyMin_grantDoubles_iqr = rle_iqr,                   ninetyMin_grantDoubles_median_dev = rle_median_deviation)     res = patchTable(   database_info$kn99$urls$replicateAgreement,   Sys.getenv(\"kn99_token\"),   update_df,   \"replicateAgreementNumber\")  }  # check status ---- ## failures should only be those without enough replicates to calculate RLE x = map(res, ~as.numeric(.$status_code)) x[unlist(x) != 200]"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Analysis_Tally.html","id":"all","dir":"Articles","previous_headings":"","what":"All","title":"QC: Replicate Agreement Analysis and tally","text":"samples 90minte induction conditions database. single double deletions included.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Analysis_Tally.html","id":"create-set-and-quality-filter","dir":"Articles","previous_headings":"All","what":"Create set and quality filter","title":"QC: Replicate Agreement Analysis and tally","text":"","code":"# Read in the processed data (post DESeq) blrs_90min_all_fltr = readRDS(DESEQ_OUTPUT_LIST$ninetyMin_all)"},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Analysis_Tally.html","id":"set-unwanted-parameters-and-replicate-groups-2","dir":"Articles","previous_headings":"All > RLE transform","what":"set unwanted parameters and replicate groups","title":"QC: Replicate Agreement Analysis and tally","text":"","code":"# define unwanted design indicies ----  unwanted_indicies = which(startsWith(colnames(design(   blrs_90min_all_fltr)), \"library\"))  # set replicate groups ----  replicate_split =    as_tibble(colData(blrs_90min_all_fltr)) %>%   group_by(genotype) %>%   group_split()  replicate_names =    lapply(replicate_split,           function(x)             as.character(unique(pull(x,genotype))))  replicate_sample_list =    lapply(replicate_split, function(x)      as.vector(pull(x,fastqFileName)))  names(replicate_sample_list) = replicate_names"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Analysis_Tally.html","id":"get-unwated-parameter-effect-removed-quants-2","dir":"Articles","previous_headings":"All > RLE transform","what":"get unwated parameter effect removed quants","title":"QC: Replicate Agreement Analysis and tally","text":"","code":"removed_effect_log_norm = removeParameterEffects(blrs_90min_all_fltr,                                                   unwanted_indicies)  removed_effect_rle_by_replicate_group =    rleByReplicateGroup(replicate_sample_list,                       as_tibble(removed_effect_log_norm),                        log2_transformed_flag = TRUE)  removed_effect_rle_summary =    as_tibble(bind_rows(lapply(removed_effect_rle_by_replicate_group,                               rleSummary)),              rownames = \"fastqFileName\") %>%    left_join(as_tibble(colData(blrs_90min_all_fltr)),              by='fastqFileName') log_norm_rle = calculateRLE(counts(blrs_90min_all_fltr),                              log2_transformed_flag = FALSE)  log_norm_rle_by_replicate_group =    rleByReplicateGroup(replicate_sample_list,                       as_tibble(log_norm_rle),                        log2_transformed_flag = TRUE)  log_norm_rle_summary =    as_tibble(bind_rows(lapply(log_norm_rle_by_replicate_group,                               rleSummary)), rownames = \"fastqFileName\") %>%    left_join(as_tibble(colData(blrs_90min_all_fltr)),              by='fastqFileName')"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Analysis_Tally.html","id":"update-the-database-2","dir":"Articles","previous_headings":"All > RLE transform","what":"update the database","title":"QC: Replicate Agreement Analysis and tally","text":"","code":"UPDATE_DB = TRUE if(UPDATE_DB){     update_df = removed_effect_rle_summary %>%    select(replicateAgreementNumber, rle_iqr, rle_median_deviation) %>%    dplyr::rename(ninetyMin_all_iqr = rle_iqr,                   ninetyMin_all_median_dev = rle_median_deviation)     res = patchTable(   database_info$kn99$urls$replicateAgreement,   Sys.getenv(\"kn99_token\"),   update_df,   \"replicateAgreementNumber\")  }  # check status ---- ## failures should only be those without enough replicates to calculate RLE x = map(res, ~as.numeric(.$status_code)) x[unlist(x) != 200]"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"QC: Replicate Agreement Object Creation","text":"illustrates construct data object Sample Agreement QC step – RLE – data sets. case, added design (last step set), need write object file send cluster. suggest mounting cluster writing mounted directory. See vignette Running DESeq HTCF instructions running DESeq HTCF. can see defined sets entering ?createExperimentSet. experiment set interested exist option set_names, ’ll need use extractColData(blrs) blrs object play around come set filters define new set. See github repository, “R/ExperimentSetFunctions.R” examples","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"setup-the-environment","dir":"Articles","previous_headings":"","what":"Setup the environment","title":"QC: Replicate Agreement Object Creation","text":"","code":"library(brentlabRnaSeqTools) library(rtracklayer) library(tidyverse) library(caret)  # set variables   KN99_GFF_PATH = Sys.getenv(\"kn99_gff\") DB_USERNAME = Sys.getenv(\"db_username\") DB_PASSWORD = Sys.getenv(\"db_password\")  # note: I mount to the cluster and output directly to it DDS_OUTPUT_DIR = Sys.getenv(\"OUTPUT_DIR\") TODAY = format(lubridate::today(),\"%Y%m%d\")  # controls whether dds objects are written WRITE_OUT = TRUE"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"pull-the-database","dir":"Articles","previous_headings":"","what":"Pull the database","title":"QC: Replicate Agreement Object Creation","text":"","code":"blrs = brentlabRnaSeqSetFromDatabase('kn99',DB_USERNAME, DB_PASSWORD)  # filter down to just the protein coding genes. Note that this works because the # nctr-rna annotations were all added to the end of the annotation file. blrs = blrs[1:6967,]"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"add-gene-level-data-optional","dir":"Articles","previous_headings":"","what":"Add gene level data (optional)","title":"QC: Replicate Agreement Object Creation","text":"","code":"# this adds all of the data regarding each locus as a GRange object to the # gene data slot of the brentlabRnaSeqSet object. Useful if you are going to # use other Bioconductor packages, or brentlabRnaSeqTools::createIgvBrowserShot()  kn99_gff = rtracklayer::import(KN99_GFF_PATH)  kn99_genes = kn99_gff[kn99_gff$ID %in% rownames(blrs)]  rowRanges(blrs) = kn99_genes[order(match(kn99_genes$ID,rownames(blrs)))]"},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"grant-set","dir":"Articles","previous_headings":"","what":"2016 grant set","title":"QC: Replicate Agreement Object Creation","text":"data set defined single locus KOs 90minuteInduction conditions genotypes grant_df (data object loaded part brentlabRnaSeqTools – take look interested)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"create-the-set-and-quality-filter","dir":"Articles","previous_headings":"2016 grant set","what":"Create the set and quality filter","title":"QC: Replicate Agreement Object Creation","text":"","code":"blrs_90min_grant = createExperimentSet(blrs, 'ninetyMin_2016Grant')  # note that this filters out those samples which failed QC1,  # but but does not filter on RLE unless the argument rle_iqr_threshold  # is set to a numeric value blrs_90min_grant_fltr = qaFilter(blrs_90min_grant)  # remove WT which fall on dates with no perturbed samples blrs_90min_grant_fltr =    filterWtByExperimentalLibdate_90min(blrs_90min_grant_fltr)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"add-the-design","dir":"Articles","previous_headings":"2016 grant set","what":"Add the design","title":"QC: Replicate Agreement Object Creation","text":"","code":"blrs_90min_grant_fltr = estimateSizeFactorsByProtocol(blrs_90min_grant_fltr)  min_libdate = min(as.Date(colData(blrs_90min_grant_fltr)$libraryDate))  colData(blrs_90min_grant_fltr)$libraryDate =    colData(blrs_90min_grant_fltr)$libraryDate %>%   relevel(ref = as.character(min_libdate)) %>%   droplevels()  colData(blrs_90min_grant_fltr)$libraryProtocol =    colData(blrs_90min_grant_fltr)$libraryProtocol %>%   factor() %>%   relevel(ref = \"SolexaPrep\") %>%   droplevels()  colData(blrs_90min_grant_fltr)$genotype1 =    colData(blrs_90min_grant_fltr)$genotype1 %>%   relevel(ref = \"CNAG_00000\") %>%   droplevels()  mm = model.matrix(~libraryProtocol+libraryDate+genotype1,                    extractColData(blrs_90min_grant_fltr))  min_new_protocol = min(as.Date((unique(pull(filter(   extractColData(blrs_90min_grant_fltr),    libraryProtocol == 'E7420L'),    libraryDate)))))  mm = mm[,-which(colnames(mm) == paste0('libraryDate',min_new_protocol))]"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"inspect-the-model-matrix-for-linear-dependencies","dir":"Articles","previous_headings":"2016 grant set > Add the design","what":"inspect the model matrix for linear dependencies","title":"QC: Replicate Agreement Object Creation","text":"","code":"lin_dep_report = caret::findLinearCombos(mm)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"add-the-design-to-the-object","dir":"Articles","previous_headings":"2016 grant set > Add the design","what":"add the design to the object","title":"QC: Replicate Agreement Object Creation","text":"","code":"design(blrs_90min_grant_fltr) = mm rm(mm)  if(WRITE_OUT){      outpath = file.path(DDS_OUTPUT_DIR,                       \"90minDataFreeze\",                       TODAY,                       \"grant_only_input.rds\")      dds = DESeq2::DESeqDataSetFromMatrix(     colData = extractColData(blrs_90min_grant_fltr),     countData = counts(blrs_90min_grant_fltr),     design = design(blrs_90min_grant_fltr))      sizeFactors(dds) = sizeFactors(blrs_90min_grant_fltr)      write_rds(dds, outpath) }"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"grant-set-with-doubles","dir":"Articles","previous_headings":"","what":"2016 Grant Set with Doubles","title":"QC: Replicate Agreement Object Creation","text":"double KO samples either KO loci grant_df, plus single KO samples corresponding one double KO perturbed loci WT.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"create-set-and-quality-filter","dir":"Articles","previous_headings":"2016 Grant Set with Doubles","what":"Create set and quality filter","title":"QC: Replicate Agreement Object Creation","text":"","code":"blrs_grant_with_doubles = createExperimentSet(blrs, 'ninetyMin_2016GrantWithDoubles')  # note that this filters out those samples which failed QC1,  # but but does not filter on RLE unless the argument rle_iqr_threshold  # is set to a numeric value blrs_grant_with_doubles_fltr = qaFilter(blrs_grant_with_doubles)  # remove WT which fall on dates with no perturbed samples blrs_grant_with_doubles_fltr =    filterWtByExperimentalLibdate_90min(blrs_grant_with_doubles_fltr)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"add-the-design-1","dir":"Articles","previous_headings":"2016 Grant Set with Doubles","what":"Add the design","title":"QC: Replicate Agreement Object Creation","text":"","code":"blrs_grant_with_doubles_fltr = estimateSizeFactorsByProtocol(blrs_grant_with_doubles_fltr)  min_libdate = min(as.Date(colData(blrs_grant_with_doubles_fltr)$libraryDate))  colData(blrs_grant_with_doubles_fltr)$libraryDate =    colData(blrs_grant_with_doubles_fltr)$libraryDate %>%   relevel(ref = as.character(min_libdate)) %>%   droplevels()  # add a 'genotype' column which is a concatenation of genotype1 and genotype2 colData(blrs_grant_with_doubles_fltr)$genotype =    paste(colData(blrs_grant_with_doubles_fltr)$genotype1,         colData(blrs_grant_with_doubles_fltr)$genotype2,         sep = \"_\") %>%   str_remove('_$') %>%   factor() %>%   relevel(ref = \"CNAG_00000\") %>%   droplevels()  colData(blrs_grant_with_doubles_fltr)$libraryProtocol =    colData(blrs_grant_with_doubles_fltr)$libraryProtocol %>%   factor() %>%   relevel(ref = \"SolexaPrep\") %>%   droplevels()  mm = model.matrix(~libraryProtocol+libraryDate+genotype,                    extractColData(blrs_grant_with_doubles_fltr))  min_new_protocol = min(   as.Date(     (unique(       pull(         filter(extractColData(blrs_grant_with_doubles_fltr),                 libraryProtocol == 'E7420L'), libraryDate)))))  mm = mm[,-which(colnames(mm) == paste0('libraryDate',min_new_protocol))]"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"inspect-the-model-matrix-for-linear-dependencies-1","dir":"Articles","previous_headings":"2016 Grant Set with Doubles > Add the design","what":"inspect the model matrix for linear dependencies","title":"QC: Replicate Agreement Object Creation","text":"","code":"lin_dep_report = caret::findLinearCombos(mm) lin_dep_report"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"add-the-design-to-the-object-1","dir":"Articles","previous_headings":"2016 Grant Set with Doubles > Add the design","what":"add the design to the object","title":"QC: Replicate Agreement Object Creation","text":"","code":"design(blrs_grant_with_doubles_fltr) = mm rm(mm)  if(WRITE_OUT){      outpath = file.path(DDS_OUTPUT_DIR,                       \"90minDataFreeze\",                       TODAY,                       \"grant_doubles_input.rds\")      dds = DESeq2::DESeqDataSetFromMatrix(     colData = extractColData(blrs_grant_with_doubles_fltr),     countData = counts(blrs_grant_with_doubles_fltr),     design = design(blrs_grant_with_doubles_fltr))      sizeFactors(dds) = sizeFactors(blrs_grant_with_doubles_fltr)      write_rds(dds, outpath) }"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"all","dir":"Articles","previous_headings":"","what":"All","title":"QC: Replicate Agreement Object Creation","text":"set samples – singles doubles – 90minuteInduction conditions.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"create-set-and-quality-filter-1","dir":"Articles","previous_headings":"All","what":"Create set and quality filter","title":"QC: Replicate Agreement Object Creation","text":"","code":"blrs_90min_all = createExperimentSet(blrs, 'ninetyMin_all')  # note that this filters out those samples which failed QC1,  # but but does not filter on RLE unless the argument rle_iqr_threshold  # is set to a numeric value blrs_90min_all_fltr = qaFilter(blrs_90min_all)  # remove WT which fall on dates with no perturbed samples blrs_90min_all_fltr =    filterWtByExperimentalLibdate_90min(blrs_90min_all_fltr)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"add-the-design-2","dir":"Articles","previous_headings":"All","what":"Add the design","title":"QC: Replicate Agreement Object Creation","text":"","code":"blrs_90min_all_fltr = estimateSizeFactorsByProtocol(blrs_90min_all_fltr)  min_libdate = min(as.Date(colData(blrs_90min_all_fltr)$libraryDate))  colData(blrs_90min_all_fltr)$libraryDate =    colData(blrs_90min_all_fltr)$libraryDate %>%   relevel(ref = as.character(min_libdate)) %>%   droplevels()  # add a 'genotype' column which is a concatenation of genotype1 and genotype2 colData(blrs_90min_all_fltr)$genotype =    paste(colData(blrs_90min_all_fltr)$genotype1,         colData(blrs_90min_all_fltr)$genotype2,         sep = \"_\") %>%   str_remove('_$') %>%   factor() %>%   relevel(ref = \"CNAG_00000\") %>%   droplevels()  colData(blrs_90min_all_fltr)$libraryProtocol =    colData(blrs_90min_all_fltr)$libraryProtocol %>%   factor() %>%   relevel(ref = \"SolexaPrep\") %>%   droplevels()  mm = model.matrix(~libraryProtocol+libraryDate+genotype,                    extractColData(blrs_90min_all_fltr))  min_new_protocol = min(   as.Date(     (unique(       pull(         filter(extractColData(blrs_90min_all_fltr),                 libraryProtocol == 'E7420L'), libraryDate)))))  mm = mm[,-which(colnames(mm) == paste0('libraryDate',min_new_protocol))]"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"inspect-the-model-matrix-for-linear-dependencies-2","dir":"Articles","previous_headings":"All > Add the design","what":"inspect the model matrix for linear dependencies","title":"QC: Replicate Agreement Object Creation","text":"","code":"lin_dep_report = caret::findLinearCombos(mm) lin_dep_report"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"add-the-design-to-the-object-2","dir":"Articles","previous_headings":"All > Add the design","what":"add the design to the object","title":"QC: Replicate Agreement Object Creation","text":"","code":"design(blrs_90min_all_fltr) = mm rm(mm)  if(WRITE_OUT){      outpath = file.path(DDS_OUTPUT_DIR,                       \"90minDataFreeze\",                       TODAY,                       \"90min_all_input.rds\")      dds = DESeq2::DESeqDataSetFromMatrix(     colData = extractColData(blrs_90min_all_fltr),     countData = counts(blrs_90min_all_fltr),     design = design(blrs_90min_all_fltr))      sizeFactors(dds) = sizeFactors(blrs_90min_all_fltr)      write_rds(dds, outpath) }"},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/UsingRstudioProjects.html","id":"install-devtools","dir":"Articles","previous_headings":"","what":"install devtools","title":"UsingRstudioProjects","text":"","code":"install.packages(\"devtools\")"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/UsingRstudioProjects.html","id":"set-your-working-directory","dir":"Articles","previous_headings":"","what":"set your working directory","title":"UsingRstudioProjects","text":"already directory store projects work , create one. suggest direcory called projects $HOME","code":"project_dir = \"~/projects\" if(!dir.exists(project_dir)){   dir.create(project_dir) } setwd(project_dir)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/UsingRstudioProjects.html","id":"create-a-new-rstudio-project","dir":"Articles","previous_headings":"","what":"Create a new Rstudio project","title":"UsingRstudioProjects","text":"project subset infrastructure R software package. can use virtual environment, .Renviron files environmental variables, etc. tool reproducibility","code":"# if this is for the nineyMinuteInduction data, for example, you might call  # this project \"ninetyMinInduction\". project_name = \"my_new_project\"  usethis::create_project(project_name)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/UsingRstudioProjects.html","id":"using-the-project-directory","dir":"Articles","previous_headings":"","what":"Using the project directory","title":"UsingRstudioProjects","text":"new Rstudio session launch new project directory. Now, whenever launch project, environment variables .Renviron loaded. using virtual environment (good idea. Use renv), virtual environment automatically launched, also. /R directory R scripts. make notebooks directory, just put notebook project parent directory, example. /R directory ninetyMinInduction script go – see Quickstart.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"brentlabrnaseqset","dir":"Articles","previous_headings":"","what":"BrentlabRnaSeqSet","title":"Environmental Perturbation Analysis Data Creation","text":"BrentlabRnaSeqSet child DESeqDataSet, child SummarizedExperiment. Therefore, brentlabRnaSeqSet DESeq functionality – eg, DESeq size factor normalization, DESeq() function – well SummarizedExperiment methods, ‘custom’ methods suited purposes. easily extensible – computationally minded users, good idea learn use object oriented programming tools. many cases make code less error prone, easier test, reproducible, easier maintain long term.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Environmental Perturbation Analysis Data Creation","text":"","code":"library(brentlabRnaSeqTools) library(rtracklayer) library(tidyverse)  # set variables   KN99_GFF_PATH = Sys.getenv(\"kn99_gff\") DB_USERNAME = Sys.getenv(\"db_username\") DB_PASSWORD = Sys.getenv(\"db_password\")  # note: I mount to the cluster and output directly to it DDS_OUTPUT_DIR = \".\"  # controls whether dds objects are written WRITE_OUT = FALSE"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"pull-the-database","dir":"Articles","previous_headings":"","what":"Pull the database","title":"Environmental Perturbation Analysis Data Creation","text":"","code":"blrs = brentlabRnaSeqSetFromDatabase('kn99',DB_USERNAME, DB_PASSWORD)  # filter down to just the protein coding genes. Note that this works because the # nctr-rna annotations were all added to the end of the annotation file. blrs = blrs[1:6967,]"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"add-gene-level-data-optional","dir":"Articles","previous_headings":"","what":"Add gene level data (optional)","title":"Environmental Perturbation Analysis Data Creation","text":"","code":"# this adds all of the data regarding each locus as a GRange object to the # gene data slot of the brentlabRnaSeqSet object. Useful if you are going to # use other Bioconductor packages.  kn99_gff = rtracklayer::import(KN99_GFF_PATH)  kn99_genes = kn99_gff[kn99_gff$ID %in% rownames(blrs)]  rowRanges(blrs) = kn99_genes[order(match(kn99_genes$ID,rownames(blrs)))]"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"create-set","dir":"Articles","previous_headings":"","what":"Create Set","title":"Environmental Perturbation Analysis Data Creation","text":"experiment set want already created, issue ‘issue report’, describe EXACT filter want use create set. goes set depends describe filter, spend time database figure .","code":"blrs_ep = createExperimentSet(blrs, 'envPert')"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"quality-filter","dir":"Articles","previous_headings":"","what":"Quality Filter","title":"Environmental Perturbation Analysis Data Creation","text":"","code":"blrs_ep_qc_passing = qaFilter(blrs_ep, rle_iqr_threshold = 1)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"expression-filter","dir":"Articles","previous_headings":"","what":"Expression filter","title":"Environmental Perturbation Analysis Data Creation","text":"Filter low expression genes (anything else don’t want analysis set). , analyst. might use method proposed paper , among others, Wolfgang Huber, implemented bioconductor package geneFilter (well DESeq, default), filter based number samples greater threshold expression, shown .","code":"# How this is done is up to you, and obviously affects what genes are left in. # Below is an example. You need to think about the thresholds and filter method  # that suits your purpose best.  mid_expression_filter <- rowSums(edgeR::cpm(counts(blrs_ep_qc_passing_param_fltr))>4) >= 4  blrs_ep_qc_passing_param_fltr = blrs_ep_qc_passing_param_fltr[mid_expression_filter,]"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"set-design","dir":"Articles","previous_headings":"","what":"Set Design","title":"Environmental Perturbation Analysis Data Creation","text":"","code":"colData(blrs_ep_qc_passing)$concat_treatment =    relevel(colData(blrs_ep_qc_passing)$concat_treatment,           ref = 'YPD_noAtmosphere_30_noTreatment_noTreatmentConc_noPH_30')  colData(blrs_ep_qc_passing) =    colData(blrs_ep_qc_passing,            droplevels(as_tibble(colData(blrs_ep_qc_passing))))  # NOTE!! Not full rank with genotype included design(blrs_ep_qc_passing) = formula(~libraryDate+genotype1+concat_treatment)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"write-out","dir":"Articles","previous_headings":"","what":"Write out","title":"Environmental Perturbation Analysis Data Creation","text":"","code":"if(WRITE_OUT){   today = format(lubridate::today(),\"%Y%m%d\")    output_dir = file.path(DDS_OUTPUT_DIR, today)    dir.create(output_dir, recursive=TRUE)    # note: this is probably better done with a function and map() as the list gets   #       longer   write_rds(fltr_full_set_90min$E7420L,             file.path(output_dir,\"full_set_new_protocol_input.dds\"))    write_rds(fltr_full_set_90min$SolexaPrep,             file.path(output_dir, \"full_set_old_protocol_input.dds\"))    write_rds(hold_out_set,             file.path(output_dir, \"hold_out_set_raw_data.rds\"))    write_rds(hold_out_set$E7420L,             file.path(output_dir, \"train_set_new_protocol_input.rds\"))    write_rds(hold_out_set$SolexaPrep,             file.path(output_dir, \"train_set_old_protocol_input.rds\")) }"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"copy-the-htcf-deseq-scripts-to-the-working-directory","dir":"Articles","previous_headings":"","what":"Copy the HTCF DESeq scripts to the working directory","title":"Environmental Perturbation Analysis Data Creation","text":"scripts run DESeq parallel HTCF. items ’l need edit path lookup file (running one model), dds_input deseq_mpi.sh. keep deseq_de.R directory deseq_mpi.sh, ’ll need update path deseq_de.R script, also.","code":"if(WRITE_OUT){   htcf_deseq_scripts = c(system.file('bash',                              'htcf_parallel_deseq.sh',                              package = \"brentlabRnaSeqTools\"),                        system.file('R_executable',                                 'deseq_de.R',                                  package = \"brentlabRnaSeqTools\"))  lapply(htcf_deseq_scripts, file.copy, to = DDS_OUTPUT_DIR) }"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"brentlabrnaseqset","dir":"Articles","previous_headings":"","what":"BrentlabRnaSeqSet","title":"90 Minute Induction Analysis Data Creation","text":"BrentlabRnaSeqSet child DESeqDataSet, child SummarizedExperiment. Therefore, brentlabRnaSeqSet DESeq functionality – eg, DESeq size factor normalization, DESeq() function – well SummarizedExperiment methods, ‘custom’ methods suited purposes. easily extensible – computationally minded users, good idea learn use object oriented programming tools. many cases make code less error prone, easier test, reproducible, easier maintain long term.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"90 Minute Induction Analysis Data Creation","text":"experiment set want already created, issue ‘issue report’, describe EXACT filter want use create set. goes set depends describe filter, spend time database figure .","code":"library(brentlabRnaSeqTools) library(rtracklayer) library(tidyverse)  # set variables   KN99_GFF_PATH = Sys.getenv(\"kn99_gff\") DB_USERNAME = Sys.getenv(\"db_username\") DB_PASSWORD = Sys.getenv(\"db_password\")  # note: I mount to the cluster and output directly to it DDS_OUTPUT_DIR = \"/mnt/htcf_scratch/chasem/rnaseq_pipeline/experiments/90minDataFreeze\"  # controls whether dds objects are written WRITE_OUT = FALSE  # Pull the database ----  blrs = brentlabRnaSeqSetFromDatabase('kn99',DB_USERNAME, DB_PASSWORD)  # filter down to just the protein coding genes. Note that this works because the # nctr-rna annotations were all added to the end of the annotation file. blrs = blrs[1:6967,]  # Add gene level data (optional) ----  # this adds all of the data regarding each locus as a GRange object to the # gene data slot of the brentlabRnaSeqSet object. Useful if you are going to # use other Bioconductor packages.  kn99_gff = rtracklayer::import(KN99_GFF_PATH)  kn99_genes = kn99_gff[kn99_gff$ID %in% rownames(blrs)]  rowRanges(blrs) = kn99_genes[order(match(kn99_genes$ID,rownames(blrs)))]  rownames(blrs) = rowData(blrs)$ID"},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"grant-set-singles","dir":"Articles","previous_headings":"","what":"2016 Grant set, singles","title":"90 Minute Induction Analysis Data Creation","text":"","code":"blrs_90min = createExperimentSet(blrs, 'ninetyMin_2016Grant')  # Quality Filter ----  blrs_90min_qc_passing = qaFilter(blrs_90min,                                   rle_iqr_threshold = .6125,                                   iqr_colname = \"ninetyMin_iqr\")"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"set-perturbed-loci-to-zero","dir":"Articles","previous_headings":"","what":"Set perturbed loci to zero","title":"90 Minute Induction Analysis Data Creation","text":"","code":"blrs_90min_qc_passing = setPerturbedLociToZero(blrs_90min_qc_passing)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"expression-filtering","dir":"Articles","previous_headings":"","what":"Expression filtering","title":"90 Minute Induction Analysis Data Creation","text":"Filter low expression genes (anything else don’t want analysis set). , analyst. might use method proposed paper , among others, Wolfgang Huber, implemented bioconductor package geneFilter (well DESeq, default), filter based number samples greater threshold expression, shown .","code":"# How this is done is up to you, and obviously affects what genes are left in. # Below is an example. You need to think about the thresholds and filter method  # that suits your purpose best.  # mid_expression_filter <- rowSums(edgeR::cpm(counts(blrs_90min_qc_passing))>4) >= 4  high_disp_fltr = rownames(blrs_90min_qc_passing) %in% passing_genes_all$gene_id  blrs_90min_qc_passing = blrs_90min_qc_passing[high_disp_fltr,]"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"split-the-replicate-groups","dir":"Articles","previous_headings":"","what":"Split the replicate groups","title":"90 Minute Induction Analysis Data Creation","text":"","code":"# note, qaFilter returns those samples with less than 3 replicates, which have NA # in the RLE stats. Filter those out, also  blrs_90min_qc_passing =   blrs_90min_qc_passing[,!is.na(colData(blrs_90min_qc_passing)$ninetyMin_iqr)]  protocol_tallies = replicateByProtocolTally(blrs_90min_qc_passing)  # protocol_tallies$replicates_with_less_than_four_in_both_old_or_new. All of the # genotypes should be in the list below  protocol_fltr =   as_tibble(colData(blrs_90min_qc_passing)) %>%   filter(!(genotype1 == \"CNAG_00031\" & libraryProtocol == \"SolexaPrep\"),          !(genotype1 == \"CNAG_00871\" & libraryProtocol == \"E7420L\"),          !(genotype1 == \"CNAG_00883\" & libraryProtocol == \"E7420L\"),          !(genotype1 == \"CNAG_01626\" & libraryProtocol == \"E7420L\"),          !(genotype1 == \"CNAG_02774\" & libraryProtocol == \"E7420L\"),          !(genotype1 == \"CNAG_03018\" & libraryProtocol == \"SolexaPrep\"),          !(genotype1 == \"CNAG_03279\" & libraryProtocol == \"SolexaPrep\"),          !(genotype1 == \"CNAG_03849\" & libraryProtocol == \"E7420L\"),          !(genotype1 == \"CNAG_04353\" & libraryProtocol == \"E7420L\"),          !(genotype1 == \"CNAG_05222\" & libraryProtocol == \"SolexaPrep\")) %>%   pull(fastqFileNumber)  blrs_90min_qc_passing_protocol_fltr =   blrs_90min_qc_passing[,colData(blrs_90min_qc_passing)$fastqFileNumber %in%                           protocol_fltr]  colData(blrs_90min_qc_passing_protocol_fltr)$libraryDate =   droplevels(colData(blrs_90min_qc_passing_protocol_fltr)$libraryDate)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"re-examine-tallies-after-separating-the-protocol-groups","dir":"Articles","previous_headings":"","what":"Re-examine tallies after separating the protocol groups","title":"90 Minute Induction Analysis Data Creation","text":"","code":"# note that the column names may not reflect what is actually pasesd -- this  # function needs some updating due to hard coding colnames. Columns are in order of the # tables passed in protocol_fltr_tally =   createInductionSetTally(as_tibble(colData(blrs_90min)),                           as_tibble(colData(blrs_90min_qc_passing)),                           as_tibble(colData(blrs_90min_qc_passing_protocol_fltr)),                           grant_df)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"split","dir":"Articles","previous_headings":"","what":"Split","title":"90 Minute Induction Analysis Data Creation","text":"","code":"blrs_90min_qc_passing_protocol_fltr_split =   splitProtocolGroups(blrs_90min_qc_passing_protocol_fltr)  # libraryprotocol date date have their levels dropped. genotype1 still needs it # this needs to be handled internally somehow  blrs_90min_qc_passing_protocol_fltr_split$SolexaPrep$genotype1 =    droplevels(blrs_90min_qc_passing_protocol_fltr_split$SolexaPrep$genotype1)  blrs_90min_qc_passing_protocol_fltr_split$E7420L$genotype1 =    droplevels(blrs_90min_qc_passing_protocol_fltr_split$E7420L$genotype1)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"examine-replicate-tallies-by-protocol-group","dir":"Articles","previous_headings":"","what":"Examine replicate tallies by protocol group","title":"90 Minute Induction Analysis Data Creation","text":"","code":"# filter out those samples with less than 3 replicates in either libraryDate or # genotype1  # helper function to create model matricies by protocol createFullSetModelMatricies = function(full_set_split){    full_set_mm_list = list(     E7420L = model.matrix(~libraryDate+genotype1,                           as_tibble(colData(full_set_split$E7420L))),     SolexaPrep = model.matrix(~libraryDate+genotype1,                               as_tibble(colData(full_set_split$SolexaPrep))))    full_set_mm_list }  # return those replicate sets which have less than 2 replicates lowReplicateParams = function(model_matrix){    mm_summary_df = tibble(model_params = colnames(model_matrix),                          replicate_tally=colSums(model_matrix))    low_rep_parameters = mm_summary_df %>%     filter(replicate_tally < 2) %>%     pull(model_params)    low_rep_parameters = str_remove(low_rep_parameters, \"libraryDate\")   low_rep_parameters = str_remove(low_rep_parameters, \"genotype1\")    return(low_rep_parameters) }  # create model matricies from the blrs_90min_qc_passing_protocol_fltr_split full_set_mm_list =   createFullSetModelMatricies(blrs_90min_qc_passing_protocol_fltr_split)  # find low rep parameters low_rep_parameters = lapply(full_set_mm_list ,lowReplicateParams)  # all dates, no genotypes low_rep_parameters = lapply(low_rep_parameters, as.factor)  # create filters for each protocol set e7420l_fltr =   !colData(blrs_90min_qc_passing_protocol_fltr_split$E7420L)$libraryDate %in%     low_rep_parameters$E7420L  solexaprep_fltr =   !colData(blrs_90min_qc_passing_protocol_fltr_split$SolexaPrep)$libraryDate %in%     low_rep_parameters$SolexaPrep  # create the full set list fltr_full_set_90min = list(   E7420L = blrs_90min_qc_passing_protocol_fltr_split$E7420L[, e7420l_fltr],   SolexaPrep = blrs_90min_qc_passing_protocol_fltr_split$SolexaPrep[, solexaprep_fltr] )  # drop the factor levels which no longer exist from the filtered  libraryDate column colData(fltr_full_set_90min$E7420L)$libraryDate =   droplevels(colData(fltr_full_set_90min$E7420L)$libraryDate)  colData(fltr_full_set_90min$SolexaPrep)$libraryDate =   droplevels(colData(fltr_full_set_90min$SolexaPrep)$libraryDate)  # no more low rep sets left fltr_full_set_mm = createFullSetModelMatricies(fltr_full_set_90min)  low_rep_parameters_2 = lapply(fltr_full_set_mm, lowReplicateParams)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"recheck-tallies-again","dir":"Articles","previous_headings":"","what":"Recheck tallies again","title":"90 Minute Induction Analysis Data Creation","text":"","code":"protocol_fltr_tally =   createInductionSetTally(as_tibble(colData(blrs_90min)),                           as_tibble(colData(blrs_90min_qc_passing)),                           rbind(as_tibble(colData(fltr_full_set_90min$E7420L)),                                 as_tibble(colData(fltr_full_set_90min$SolexaPrep))),                           grant_df)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"create-hold-out-set","dir":"Articles","previous_headings":"","what":"Create hold out set","title":"90 Minute Induction Analysis Data Creation","text":"","code":"min_set_size = 1  hold_out_set = list(   SolexaPrep = createTestTrainSet(fltr_full_set_90min$SolexaPrep, min_set_size),   E7420L = createTestTrainSet(fltr_full_set_90min$E7420L, min_set_size) )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"set-the-experiment-designs","dir":"Articles","previous_headings":"","what":"Set the experiment designs","title":"90 Minute Induction Analysis Data Creation","text":"","code":"setNinetyMinDesign = function(obj){   obj$genotype1 = as.factor(obj$genotype1)   relevel(obj$genotype1, ref = \"CNAG_00000\")    obj$libraryDate = as.factor(obj$libraryDate)   relevel(obj$libraryDate, ref = min(as.character(obj$libraryDate)))    design(obj) = formula(~libraryDate + genotype1)      obj }  fltr_full_set_90min = map(fltr_full_set_90min, setNinetyMinDesign)  hold_out_set$SolexaPrep$train = setNinetyMinDesign(hold_out_set$SolexaPrep$train) hold_out_set$E7420L$train = setNinetyMinDesign(hold_out_set$E7420L$train)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"convert-everything-back-to-deseqdataobjects-for-the-time-being","dir":"Articles","previous_headings":"","what":"convert everything back to DESeqDataObjects for the time being","title":"90 Minute Induction Analysis Data Creation","text":"","code":"hold_out_set$SolexaPrep = map(hold_out_set$SolexaPrep, coerceToDds) hold_out_set$E7420L = map(hold_out_set$E7420L, coerceToDds)  fltr_full_set_90min = map(fltr_full_set_90min, coerceToDds)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"combine-protocol-groups","dir":"Articles","previous_headings":"","what":"combine protocol groups","title":"90 Minute Induction Analysis Data Creation","text":"","code":"refactorDesign = function(dds){    dds$libraryProtocol =     dds$libraryProtocol %>%   as.character() %>%   as.factor() %>%   droplevels()  dds$libraryDate =     dds$libraryDate %>%   as.Date() %>%   as.factor() %>%   droplevels()  dds$genotype1 =     dds$genotype1 %>%   as.character() %>%   as.factor() %>%   droplevels()  mm = model.matrix(~libraryProtocol + libraryDate + genotype1,                    as_tibble(colData(dds)))  min_date = colData(dds) %>%   as_tibble() %>%   filter(libraryProtocol == \"E7420L\") %>%   pull(libraryDate) %>%   as.Date() %>%   min()  mm_redux = mm[,-which(colnames(mm) == paste0(\"libraryDate\", min_date)), drop=FALSE]  design(dds) = mm_redux  dds }  full_set_90min_both_protocols = cbind(fltr_full_set_90min$SolexaPrep,                                       fltr_full_set_90min$E7420L)  sizeFactors(full_set_90min_both_protocols) =    c(estimateSizeFactors(fltr_full_set_90min$SolexaPrep)$sizeFactor,      estimateSizeFactors(fltr_full_set_90min$E7420L)$sizeFactor)  full_set_90min_both_protocols = refactorDesign(full_set_90min_both_protocols)  train_set_90min_both_protocols = cbind(hold_out_set$SolexaPrep$train,                                        hold_out_set$E7420L$train)  sizeFactors(train_set_90min_both_protocols) =    c(estimateSizeFactors(hold_out_set$SolexaPrep$train)$sizeFactor,      estimateSizeFactors(hold_out_set$E7420L$train)$sizeFactor)  train_set_90min_both_protocols = refactorDesign(train_set_90min_both_protocols)  test_data = list(   SolexaPrep = hold_out_set$SolexaPrep$test,   E7420L = hold_out_set$E7420L$test )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"write-out","dir":"Articles","previous_headings":"","what":"Write out","title":"90 Minute Induction Analysis Data Creation","text":"","code":"if(WRITE_OUT){   today = format(lubridate::today(),\"%Y%m%d\")    output_dir = file.path(DDS_OUTPUT_DIR, today)    dir.create(output_dir, recursive=TRUE)    # note: this is probably better done with a function and map() as the list gets   #       longer   write_rds(fltr_full_set_90min$E7420L,             file.path(output_dir,\"full_set_new_protocol_input.dds\"))    write_rds(fltr_full_set_90min$SolexaPrep,             file.path(output_dir, \"full_set_old_protocol_input.dds\"))    write_rds(test_data,             file.path(output_dir, \"test_data.rds\"))    write_rds(hold_out_set$E7420L$train,             file.path(output_dir, \"train_set_new_protocol_input.rds\"))    write_rds(hold_out_set$SolexaPrep$train,             file.path(output_dir, \"train_set_old_protocol_input.rds\"))        write_rds(full_set_90min_both_protocols,             file.path(output_dir, \"full_set_both_protocol_input.rds\"))    write_rds(train_set_90min_both_protocols,             file.path(output_dir, \"train_set_both_protocol_input.rds\"))    }"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"copy-the-htcf-deseq-scripts-to-the-working-directory","dir":"Articles","previous_headings":"","what":"Copy the HTCF DESeq scripts to the working directory","title":"90 Minute Induction Analysis Data Creation","text":"scripts run DESeq parallel HTCF. items ’l need edit path lookup file (running one model), dds_input deseq_mpi.sh. keep deseq_de.R directory deseq_mpi.sh, ’ll need update path deseq_de.R script, also.","code":"if(WRITE_OUT){   htcf_deseq_scripts = c(system.file('bash',                              'htcf_parallel_deseq.sh',                              package = \"brentlabRnaSeqTools\"),                        system.file('R_executable',                                 'deseq_de.R',                                  package = \"brentlabRnaSeqTools\"))  lapply(htcf_deseq_scripts, file.copy, to = DDS_OUTPUT_DIR) }"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chase Mateusiak. Author, maintainer.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mateusiak C (2022). brentlabRnaSeqTools: Management/QC brentlab RNAseq data. R package version 0.0.0.0.","code":"@Manual{,   title = {brentlabRnaSeqTools: Management/QC for brentlab RNAseq data},   author = {Chase Mateusiak},   year = {2022},   note = {R package version 0.0.0.0}, }"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/index.html","id":"brentlabrnaseqtools","dir":"","previous_headings":"","what":"Management/QC for brentlab RNAseq data","title":"Management/QC for brentlab RNAseq data","text":"goal brentlabRnaSeqTools …","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Management/QC for brentlab RNAseq data","text":"can install development version brentlabRnaSeqTools GitHub :","code":"# install.packages(\"devtools\") # note that while this is private, you'll need to include the `auth_token`  # argument devtools::install_github(\"BrentLab/brentlabRnaSeqTools\", auth_token = 'asdf...')"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Management/QC for brentlab RNAseq data","text":"Please visit site documentation","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/addRleSummaryStats.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate RLE by replicate groups — addRleSummaryStats","title":"calculate RLE by replicate groups — addRleSummaryStats","text":"calculate RLE replicate groups","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/addRleSummaryStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate RLE by replicate groups — addRleSummaryStats","text":"","code":"addRleSummaryStats(object)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/addRleSummaryStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate RLE by replicate groups — addRleSummaryStats","text":"object brentlabRnaSeqSet colData replicate_group","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/addRleSummaryStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate RLE by replicate groups — addRleSummaryStats","text":"list dataframes replicate group replicateS_sample_list, dimensions gene x sample. values RLE gene given sample","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/archiveDatabase.html","id":null,"dir":"Reference","previous_headings":"","what":"pull entire database (not counts) and save to output_dir for archival purposes — archiveDatabase","title":"pull entire database (not counts) and save to output_dir for archival purposes — archiveDatabase","text":"saves individual tables, including counts, combined_df","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/archiveDatabase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pull entire database (not counts) and save to output_dir for archival purposes — archiveDatabase","text":"","code":"archiveDatabase(   database_host,   database_name,   database_user,   database_password,   output_dir,   archive_counts_flag = TRUE )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/archiveDatabase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pull entire database (not counts) and save to output_dir for archival purposes — archiveDatabase","text":"database_host connecting database hosted AWS, might something like ec2-54-83-201-96.compute-1.amazonaws.com database_name name database, eg cryptococcus kn99, database might named kn99_database. Check documentation, whoever set database, get server check directly database_user user actual database, level permissions. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info database_password password database user. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info output_dir deposit subdirectory, named todays date format: 20210407, tables combined_df inside. eg mounted local directory /mnt/htcf_lts/crypto_database_archive/ --> /lts/mblab/Crypto/rnaseq_data/crypto_database_archive archive_counts_flag boolean indicating whether save counts. default TRUE","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/archiveDatabase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pull entire database (not counts) and save to output_dir for archival purposes — archiveDatabase","text":"None, writes directory called <today's date> tables combined_df .csv output_dir","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"brentlabRnaSeqExperiment constructor. — brentlabRnaSeqExperiment-class","title":"brentlabRnaSeqExperiment constructor. — brentlabRnaSeqExperiment-class","text":"Extends brentlabRnaSeqSet use pre-specified experiment sets, eg Environmental Perturbation. Intended lower level use, primarily.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brentlabRnaSeqExperiment constructor. — brentlabRnaSeqExperiment-class","text":"","code":"brentlabRnaSeqExperiment(brentlabRnaSeqSet, set_name = \"\")"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"brentlabRnaSeqExperiment constructor. — brentlabRnaSeqExperiment-class","text":"brentlabRnaSeqSet brentlabRnaSeqSet set_name one 'ninetyMin_2016Grant', 'ninetyMin_2016GrantWithDoubles', 'ninetyMin_non2016grant', 'ninetyMin_all',  'envPert_epWT', 'envPert_perturbed', 'envPert_titrationWT'","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"brentlabRnaSeqExperiment constructor. — brentlabRnaSeqExperiment-class","text":"brentlabRnaSeqExperiment object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqSet.html","id":null,"dir":"Reference","previous_headings":"","what":"brentlabRnaSeqSet object and constructor — brentlabRnaSeqSet-class","title":"brentlabRnaSeqSet object and constructor — brentlabRnaSeqSet-class","text":"container expression data brentlab rnaseq databases","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brentlabRnaSeqSet object and constructor — brentlabRnaSeqSet-class","text":"","code":"brentlabRnaSeqSet(dds = NULL)  brentlabRnaSeqSetFromDatabase(   organism,   username,   password,   full_rnaseq_only = TRUE )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"brentlabRnaSeqSet object and constructor — brentlabRnaSeqSet-class","text":"dds deseq data object. Passing null object instantiate DESeq2::makeExampleDESeqDataSet organism currently, kn99 username db username password db password full_rnaseq_only filter spikeins returning. Default TRUE","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"brentlabRnaSeqSet object and constructor — brentlabRnaSeqSet-class","text":"brentlabRnaSeqSet given organism","code":""},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqSetTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"brentlabRnaSeqSetTransform object and constructor. This extends DESeqTransform. — brentlabRnaSeqSetTransform-class","title":"brentlabRnaSeqSetTransform object and constructor. This extends DESeqTransform. — brentlabRnaSeqSetTransform-class","text":"Extends DESeqTransform use regularizedLogExpression used regularizedLogExpression","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqSetTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brentlabRnaSeqSetTransform object and constructor. This extends DESeqTransform. — brentlabRnaSeqSetTransform-class","text":"","code":"brentlabRnaSeqSetTransform(SummarizedExperiment)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqSetTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"brentlabRnaSeqSetTransform object and constructor. This extends DESeqTransform. — brentlabRnaSeqSetTransform-class","text":"SummarizedExperiment RangedSummarizedExperiment","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqSetTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"brentlabRnaSeqSetTransform object and constructor. This extends DESeqTransform. — brentlabRnaSeqSetTransform-class","text":"brentlabRnaSeqSetTransform object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/calculateGeneWiseMedians.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate medians across rows of dataframe — calculateGeneWiseMedians","title":"calculate medians across rows of dataframe — calculateGeneWiseMedians","text":"calculate medians across rows dataframe","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/calculateGeneWiseMedians.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate medians across rows of dataframe — calculateGeneWiseMedians","text":"","code":"calculateGeneWiseMedians(count_df)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/calculateGeneWiseMedians.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate medians across rows of dataframe — calculateGeneWiseMedians","text":"count_df numeric dataframe, context typically count (raw log2) df","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/calculateGeneWiseMedians.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate medians across rows of dataframe — calculateGeneWiseMedians","text":"vector row-wise medians (length == nrow input df)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/calculateRLE.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate RLE of a numeric dataframe — calculateRLE","title":"calculate RLE of a numeric dataframe — calculateRLE","text":"calculate RLE numeric dataframe","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/calculateRLE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate RLE of a numeric dataframe — calculateRLE","text":"","code":"calculateRLE(counts_df, log2_transformed_flag = FALSE)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/calculateRLE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate RLE of a numeric dataframe — calculateRLE","text":"counts_df gene samples dataframe raw counts logged counts (see paramter logged) log2_transformed_flag Default FALSE set true log2 transformed counts passed","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/calculateRLE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate RLE of a numeric dataframe — calculateRLE","text":"rle dataframe genes x samples. Values logged differences gene-wise medians","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/coerceToDds.html","id":null,"dir":"Reference","previous_headings":"","what":"coerce brentlabRnaSeqSet to DESeqDataSet — coerceToDds","title":"coerce brentlabRnaSeqSet to DESeqDataSet — coerceToDds","text":"coerce brentlabRnaSeqSet DESeqDataSet","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/coerceToDds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"coerce brentlabRnaSeqSet to DESeqDataSet — coerceToDds","text":"","code":"coerceToDds(x, ...)  # S4 method for brentlabRnaSeqSet coerceToDds(x)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/coerceToDds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"coerce brentlabRnaSeqSet to DESeqDataSet — coerceToDds","text":"x brentlabRnaSeqSet ... arguments","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/connectToDatabase.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to a remote postgresql database — connectToDatabase","title":"Connect to a remote postgresql database — connectToDatabase","text":"Use RPostgres package connect remote postgresql database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/connectToDatabase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to a remote postgresql database — connectToDatabase","text":"","code":"connectToDatabase(   database_host,   database_name,   database_user,   database_password )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/connectToDatabase.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Connect to a remote postgresql database — connectToDatabase","text":"https://rpostgres.r-dbi.org/","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/connectToDatabase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to a remote postgresql database — connectToDatabase","text":"database_host connecting database hosted AWS, might something like ec2-54-83-201-96.compute-1.amazonaws.com database_name name database, eg cryptococcus kn99, database might named kn99_database. Check documentation, whoever set database, get server check directly database_user user actual database, level permissions. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info database_password password database user. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/connectToDatabase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to a remote postgresql database — connectToDatabase","text":"DBI connection remote database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/connectToDatabase.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Connect to a remote postgresql database — connectToDatabase","text":"information using R environmental files, see https://support.rstudio.com/hc/en-us/articles/360047157094-Managing-R--Rprofile-Renviron-Rprofile-site-Renviron-site-rsession-conf--repos-conf","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPertSet_perturbed.html","id":null,"dir":"Reference","previous_headings":"","what":"create Environmental Perturbation Perturbed set — createEnvPertSet_perturbed","title":"create Environmental Perturbation Perturbed set — createEnvPertSet_perturbed","text":"create Environmental Perturbation Perturbed set","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPertSet_perturbed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create Environmental Perturbation Perturbed set — createEnvPertSet_perturbed","text":"","code":"createEnvPertSet_perturbed(blrs)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPertSet_perturbed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create Environmental Perturbation Perturbed set — createEnvPertSet_perturbed","text":"blrs brentlabRnaSeqSet object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPertSet_perturbed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create Environmental Perturbation Perturbed set — createEnvPertSet_perturbed","text":"environmental pertubation brentlabRnaSeqSet","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPertSet_titrationWT.html","id":null,"dir":"Reference","previous_headings":"","what":"create Environmental Perturbation Titration (TDY451 only) set — createEnvPertSet_titrationWT","title":"create Environmental Perturbation Titration (TDY451 only) set — createEnvPertSet_titrationWT","text":"create Environmental Perturbation Titration (TDY451 ) set","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPertSet_titrationWT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create Environmental Perturbation Titration (TDY451 only) set — createEnvPertSet_titrationWT","text":"","code":"createEnvPertSet_titrationWT(blrs)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPertSet_titrationWT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create Environmental Perturbation Titration (TDY451 only) set — createEnvPertSet_titrationWT","text":"blrs brentlabRnaSeqSet object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPertSet_titrationWT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create Environmental Perturbation Titration (TDY451 only) set — createEnvPertSet_titrationWT","text":"environmental pertubation set","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPert_epWT.html","id":null,"dir":"Reference","previous_headings":"","what":"filter combined_df for environmental perturbation sample set — createEnvPert_epWT","title":"filter combined_df for environmental perturbation sample set — createEnvPert_epWT","text":"filter combined_df environmental perturbation sample set","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPert_epWT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter combined_df for environmental perturbation sample set — createEnvPert_epWT","text":"","code":"createEnvPert_epWT(blrs)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPert_epWT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter combined_df for environmental perturbation sample set — createEnvPert_epWT","text":"blrs brentlabRnaSeqSet object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPert_epWT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filter combined_df for environmental perturbation sample set — createEnvPert_epWT","text":"environmental pertubation set","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createExperimentSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a pre-defined experiment set — createExperimentSet","title":"Create a pre-defined experiment set — createExperimentSet","text":"pre-defined experiment definitions, see github repo R/ExperimentSetFunctions.R","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createExperimentSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a pre-defined experiment set — createExperimentSet","text":"","code":"createExperimentSet(x, ...)  # S4 method for brentlabRnaSeqSet createExperimentSet(x, set_name)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createExperimentSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a pre-defined experiment set — createExperimentSet","text":"x brentlabRnaSeqSet object ... arguments set_name one 'ninetyMin_2016Grant', 'ninetyMin_2016GrantWithDoubles', 'ninetyMin_non2016grant', 'ninetyMin_all',  'envPert_epWT', 'envPert_perturbed', 'envPert_titrationWT'","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createIgvBatchscript.html","id":null,"dir":"Reference","previous_headings":"","what":"create IGV viewer batch script (single range, as many tracks as you like) — createIgvBatchscript","title":"create IGV viewer batch script (single range, as many tracks as you like) — createIgvBatchscript","text":"create following: new                                # batchscript keyword new (new snapshot) snapshotDirectory IGV_Snapshots    # output directory maxPanelHeight 500                 # maximum height igv browser viewer genome organism.genome             # igv .genome file load control.bam                   # load alignment files bam_file_list load perturbed.bam goto chr1:1-100                    # load region interest snapshot batchfilename_locus1.png  # saves snapshot IGV window image file goto chr10:3-300                   # repeat another locus snapshot batchfilename_locus2.png exit                               # quit session","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createIgvBatchscript.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create IGV viewer batch script (single range, as many tracks as you like) — createIgvBatchscript","text":"","code":"createIgvBatchscript(   bam_list,   granges,   igv_genome,   output_dir,   output_file_basename,   exit_browser = TRUE,   maxPanelHeight = 500 )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createIgvBatchscript.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create IGV viewer batch script (single range, as many tracks as you like) — createIgvBatchscript","text":"bam_list list bamfiles -- multiple files means multiple tracks granges granges describing range wish visualize -- range must one chromosome/contig igv_genome .genome file created IGV tools output_dir deposit script browser shots output_file_basename serve name browser shot running IGV, name o batchscript exit_browser Default TRUE, means batchscript written way browser take image, save , exit. Set false script may used launch interactive session. maxPanelHeight default 500. height IGV window","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createIgvBatchscript.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create IGV viewer batch script (single range, as many tracks as you like) — createIgvBatchscript","text":"None. prints batch script output dir","code":""},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createInductionSetTally.html","id":null,"dir":"Reference","previous_headings":"","what":"create 90 minute induction set tally — createInductionSetTally","title":"create 90 minute induction set tally — createInductionSetTally","text":"create 90 minute induction set tally","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createInductionSetTally.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create 90 minute induction set tally — createInductionSetTally","text":"","code":"createInductionSetTally(   induction_meta_qual,   sorted_passing_induction_meta_qual,   iqr_fltr_rle_summary,   grant_df )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createInductionSetTally.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create 90 minute induction set tally — createInductionSetTally","text":"induction_meta_qual metadata entire set, unfiltered sorted_passing_induction_meta_qual metadata (quality columns) filtered manual/auto status iqr_fltr_rle_summary sorted_passing_meta_qual filtered IQR grant_df definition 90minuteInduction set. object available brentlabRnaSeqTools package","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNfCorePipelineSampleSheet.html","id":null,"dir":"Reference","previous_headings":"","what":"create nf-co sample sheet — createNfCorePipelineSampleSheet","title":"create nf-co sample sheet — createNfCorePipelineSampleSheet","text":"create samplesheet nf-co rnaseq pipeline https://nf-co.re/rnaseq/3.2/usage#samplesheet-input","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNfCorePipelineSampleSheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create nf-co sample sheet — createNfCorePipelineSampleSheet","text":"","code":"createNfCorePipelineSampleSheet(   metadata,   sample_columns,   sequence_dir_prefix,   check_files_flag = FALSE )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNfCorePipelineSampleSheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create nf-co sample sheet — createNfCorePipelineSampleSheet","text":"metadata likely database. must include runNumber, fastqFileName, libraryProtocol, columns used create sample name (see param sample_columns) sample_columns character vector columns concat sample identifier. eg c(\"genotype1\", \"fastqFileNumber\") sequence_dir_prefix path directory sequence run directories stored. eg /mnt/htcf_lts/lts_sequence check_files_flag default FALSE. Set true check files exist","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNfCorePipelineSampleSheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create nf-co sample sheet — createNfCorePipelineSampleSheet","text":"dataframe columns correspond required nf-co rnaseq pipeline sample sheet. See https://nf-co.re/rnaseq/3.2/usage#samplesheet-input","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNfCorePipelineSampleSheet.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"create nf-co sample sheet — createNfCorePipelineSampleSheet","text":": currently hard coded set strandedness 'reverse' libraryProtocol E7420L, 'unstranded', single strand libraries (fastq2 empty string)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_2016grant.html","id":null,"dir":"Reference","previous_headings":"","what":"90minuteInduction set Definition — createNinetyMinuteInduction_2016grant","title":"90minuteInduction set Definition — createNinetyMinuteInduction_2016grant","text":"current definition 90 minute induction dataset, according 2016 grant summary (loaded environment, see head(grant_df)) -- single KO ","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_2016grant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"90minuteInduction set Definition — createNinetyMinuteInduction_2016grant","text":"","code":"createNinetyMinuteInduction_2016grant(blrs)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_2016grant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"90minuteInduction set Definition — createNinetyMinuteInduction_2016grant","text":"blrs brentlabRnaSeqSet object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_2016grant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"90minuteInduction set Definition — createNinetyMinuteInduction_2016grant","text":"set metadata -- single KO ","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_2016grantWithDoubles.html","id":null,"dir":"Reference","previous_headings":"","what":"ninetyMin set where both doubles are in the grant_df — createNinetyMinuteInduction_2016grantWithDoubles","title":"ninetyMin set where both doubles are in the grant_df — createNinetyMinuteInduction_2016grantWithDoubles","text":"ninetyMin set doubles grant_df","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_2016grantWithDoubles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ninetyMin set where both doubles are in the grant_df — createNinetyMinuteInduction_2016grantWithDoubles","text":"","code":"createNinetyMinuteInduction_2016grantWithDoubles(blrs)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_2016grantWithDoubles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ninetyMin set where both doubles are in the grant_df — createNinetyMinuteInduction_2016grantWithDoubles","text":"blrs brentlabRnaSeqSet object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_2016grantWithDoubles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ninetyMin set where both doubles are in the grant_df — createNinetyMinuteInduction_2016grantWithDoubles","text":"set metadata","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_all","title":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_all","text":"return set genotypes (including doubles) grant_df.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_all","text":"","code":"createNinetyMinuteInduction_all(blrs)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_all","text":"blrs brentlabRnaSeqSet object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_all","text":"set metadata","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_non2016grant.html","id":null,"dir":"Reference","previous_headings":"","what":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_non2016grant","title":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_non2016grant","text":"return set genotypes (including doubles) grant_df.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_non2016grant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_non2016grant","text":"","code":"createNinetyMinuteInduction_non2016grant(blrs)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_non2016grant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_non2016grant","text":"blrs brentlabRnaSeqSet object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_non2016grant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_non2016grant","text":"set metadata","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createTestTrainSet.html","id":null,"dir":"Reference","previous_headings":"","what":"create test train set — createTestTrainSet","title":"create test train set — createTestTrainSet","text":"brentlabRnaSeqExperiment objects, offers methods create train test sets","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createTestTrainSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create test train set — createTestTrainSet","text":"","code":"createTestTrainSet(x, ...)  # S4 method for brentlabRnaSeqExperiment createTestTrainSet(x, min_set_size)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createTestTrainSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create test train set — createTestTrainSet","text":"x brentlabRnaSeqExperiment object ... arguments min_set_size minimum replicate set size consider hold outs","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createTestTrainSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create test train set — createTestTrainSet","text":"list slots train test, brentlabRnaSeqSetExperiments","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/database_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"set global variables, mostly as a hack to make the tidyverse data binding pass the R CMD Check — database_colnames","title":"set global variables, mostly as a hack to make the tidyverse data binding pass the R CMD Check — database_colnames","text":"set global variables, mostly hack make tidyverse data binding pass R CMD Check","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/database_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set global variables, mostly as a hack to make the tidyverse data binding pass the R CMD Check — database_colnames","text":"","code":"database_colnames"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/database_colnames.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"set global variables, mostly as a hack to make the tidyverse data binding pass the R CMD Check — database_colnames","text":"object class character length 118.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/database_info.html","id":null,"dir":"Reference","previous_headings":"","what":"URLS to active databases — database_info","title":"URLS to active databases — database_info","text":"list containing urls active databases. Named organism (eg 'kn99' 's288cr64')","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/database_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URLS to active databases — database_info","text":"","code":"database_info"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/database_info.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"URLS to active databases — database_info","text":"list lists, organized organism. Currently contains info KN99 S288C_R64 databases host host database server, eg ec2-18-224-181-136.us-east-2.compute.amazonaws.com db_name cryptococcus database name. something like kn99_database urls urls tables database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/database_info.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"URLS to active databases — database_info","text":"https://rnaseq-databases-documentation.readthedocs.io/en/latest/","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/estimateSizeFactorsByProtocol.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Size Factors within protocol groups — estimateSizeFactorsByProtocol","title":"Calculate Size Factors within protocol groups — estimateSizeFactorsByProtocol","text":"Size Factors calculated set libraryProtocol 'SolexaPrep' complement separately","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/estimateSizeFactorsByProtocol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Size Factors within protocol groups — estimateSizeFactorsByProtocol","text":"","code":"estimateSizeFactorsByProtocol(x, ...)  # S4 method for brentlabRnaSeqExperiment estimateSizeFactorsByProtocol(x)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/estimateSizeFactorsByProtocol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Size Factors within protocol groups — estimateSizeFactorsByProtocol","text":"x brentlabRnaSeqSet object ... arguments","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/estimateSizeFactorsByProtocol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Size Factors within protocol groups — estimateSizeFactorsByProtocol","text":"brentlabRnaSeqExperiment sizeFactors estimated within protocol groups (SolexaPrep SolexaPrep)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/extractColData.html","id":null,"dir":"Reference","previous_headings":"","what":"extract colData as tibble — extractColData","title":"extract colData as tibble — extractColData","text":"extract colData tibble","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/extractColData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract colData as tibble — extractColData","text":"","code":"extractColData(x, ...)  # S4 method for brentlabRnaSeqSet extractColData(x)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/extractColData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract colData as tibble — extractColData","text":"x brentlabRnaSeqSet ... arguments","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/extractColData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract colData as tibble — extractColData","text":"colData object tibble","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/extractDesignMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"extract the model.matrix using the design and colData — extractDesignMatrix","title":"extract the model.matrix using the design and colData — extractDesignMatrix","text":"extract model.matrix using design colData","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/extractDesignMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract the model.matrix using the design and colData — extractDesignMatrix","text":"","code":"extractDesignMatrix(x, ...)  # S4 method for brentlabRnaSeqSet extractDesignMatrix(x)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/extractDesignMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract the model.matrix using the design and colData — extractDesignMatrix","text":"x brentlabRnaSeqSet ... arguments","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/extractDesignMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract the model.matrix using the design and colData — extractDesignMatrix","text":"model matrix, using design coldata","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/filterWtByExperimentalLibdate_90min.html","id":null,"dir":"Reference","previous_headings":"","what":"WT filtering helper for 90minInduction sets — filterWtByExperimentalLibdate_90min","title":"WT filtering helper for 90minInduction sets — filterWtByExperimentalLibdate_90min","text":"filter WT samples libdates without perturbed samples","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/filterWtByExperimentalLibdate_90min.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WT filtering helper for 90minInduction sets — filterWtByExperimentalLibdate_90min","text":"","code":"filterWtByExperimentalLibdate_90min(blrs_90min)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/filterWtByExperimentalLibdate_90min.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WT filtering helper for 90minInduction sets — filterWtByExperimentalLibdate_90min","text":"blrs_90min brentlabRnaSeqExperiment object. function written 90minInduction sets mind.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/filterWtByExperimentalLibdate_90min.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"WT filtering helper for 90minInduction sets — filterWtByExperimentalLibdate_90min","text":"TODO: Move method select function based set_name","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/fltrLowReplicateParams.html","id":null,"dir":"Reference","previous_headings":"","what":"filter low replicate parameters from metadata — fltrLowReplicateParams","title":"filter low replicate parameters from metadata — fltrLowReplicateParams","text":"given model formula, remove samples less specified number replicates metadata","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/fltrLowReplicateParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter low replicate parameters from metadata — fltrLowReplicateParams","text":"","code":"fltrLowReplicateParams(metadata_df, design_formula, replicate_threshold = 2)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/fltrLowReplicateParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter low replicate parameters from metadata — fltrLowReplicateParams","text":"metadata_df data frame contains least model paramters interest design_formula R formula, eg ~libraryDate+treatment, parameters contained metadata_df replicate_threshold number replicates samples removed. Default 2","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/fltrLowReplicateParams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filter low replicate parameters from metadata — fltrLowReplicateParams","text":"input metadata samples replicate groups less specified thershold filtered ","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getGeneNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get gene names — getGeneNames","title":"Get gene names — getGeneNames","text":"Get gene names","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getGeneNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get gene names — getGeneNames","text":"","code":"getGeneNames(database_host, database_name, database_user, database_password)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getGeneNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get gene names — getGeneNames","text":"database_host connecting database hosted AWS, might something like ec2-54-83-201-96.compute-1.amazonaws.com database_name name database, eg cryptococcus kn99, database might named kn99_database. Check documentation, whoever set database, get server check directly database_user user actual database, level permissions. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info database_password password database user. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getGeneNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get gene names — getGeneNames","text":"dataframe gene_ids","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the combined metadata as a tibble from a remote database — getMetadata","title":"Get the combined metadata as a tibble from a remote database — getMetadata","text":"Join biosample, rnasample, s1sample, s2sample, library, fastqFiles qualityAssessment tables (order, left joins) return result tibble Use RPostgres package connect remote postgresql database, table joining, return joined metadata tibble. database connection closed","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the combined metadata as a tibble from a remote database — getMetadata","text":"","code":"getMetadata(database_host, database_name, database_user, database_password)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getMetadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get the combined metadata as a tibble from a remote database — getMetadata","text":"https://rpostgres.r-dbi.org/","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the combined metadata as a tibble from a remote database — getMetadata","text":"database_host connecting database hosted AWS, might something like ec2-54-83-201-96.compute-1.amazonaws.com database_name name database, eg cryptococcus kn99, database might named kn99_database. Check documentation, whoever set database, get server check directly database_user user actual database, level permissions. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info database_password password database user. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the combined metadata as a tibble from a remote database — getMetadata","text":"DBI connection remote database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getMetadata.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get the combined metadata as a tibble from a remote database — getMetadata","text":"information using R environmental files, see https://support.rstudio.com/hc/en-us/articles/360047157094-Managing-R--Rprofile-Renviron-Rprofile-site-Renviron-site-rsession-conf--repos-conf","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getRawCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get combined raw counts — getRawCounts","title":"Get combined raw counts — getRawCounts","text":"Get combined raw counts","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getRawCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get combined raw counts — getRawCounts","text":"","code":"getRawCounts(database_host, database_name, database_user, database_password)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getRawCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get combined raw counts — getRawCounts","text":"database_host connecting database hosted AWS, might something like ec2-54-83-201-96.compute-1.amazonaws.com database_name name database, eg cryptococcus kn99, database might named kn99_database. Check documentation, whoever set database, get server check directly database_user user actual database, level permissions. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info database_password password database user. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getRawCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get combined raw counts — getRawCounts","text":"gene samples dataframe counts","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getRunNumberLeadingZero.html","id":null,"dir":"Reference","previous_headings":"","what":"correct run number to add leading zero where approprirate — getRunNumberLeadingZero","title":"correct run number to add leading zero where approprirate — getRunNumberLeadingZero","text":"correct run number add leading zero approprirate","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getRunNumberLeadingZero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"correct run number to add leading zero where approprirate — getRunNumberLeadingZero","text":"","code":"getRunNumberLeadingZero(run_number)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getRunNumberLeadingZero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"correct run number to add leading zero where approprirate — getRunNumberLeadingZero","text":"run_number run number, likely metadata runNumber field","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getUserAuthToken.html","id":null,"dir":"Reference","previous_headings":"","what":"get (via a http POST request) your user authentication token from the database — getUserAuthToken","title":"get (via a http POST request) your user authentication token from the database — getUserAuthToken","text":"get (via http POST request) user authentication token database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getUserAuthToken.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get (via a http POST request) your user authentication token from the database — getUserAuthToken","text":"","code":"getUserAuthToken(url, username, password)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getUserAuthToken.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get (via a http POST request) your user authentication token from the database — getUserAuthToken","text":"url check database_info variable. configured organisms, can find database_info$organism$token_auth username valid username database. one, need ask one created password password associated username","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getUserAuthToken.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get (via a http POST request) your user authentication token from the database — getUserAuthToken","text":"auth token associated username password","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getUserAuthToken.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"get (via a http POST request) your user authentication token from the database — getUserAuthToken","text":"save auth token public repository. example, might put .Renviron make sure .Renviron .gitignore. Otherwise, save outside github tracked directory otherwise ensure pushed github","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/grant_df.html","id":null,"dir":"Reference","previous_headings":"","what":"the 2016 grant summary represented as a dataframe — grant_df","title":"the 2016 grant summary represented as a dataframe — grant_df","text":"also check google sheet","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/grant_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the 2016 grant summary represented as a dataframe — grant_df","text":"","code":"grant_df"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/grant_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"the 2016 grant summary represented as a dataframe — grant_df","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 164 rows 3 columns.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/isNumeric.html","id":null,"dir":"Reference","previous_headings":"","what":"test if argument is numeric — isNumeric","title":"test if argument is numeric — isNumeric","text":"copied directly limma codebase","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/isNumeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test if argument is numeric — isNumeric","text":"","code":"isNumeric(x)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/isNumeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"test if argument is numeric — isNumeric","text":"x R object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/isNumeric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test if argument is numeric — isNumeric","text":"copied limma docs: function used check validity arguments numeric functions. attempt emulate behavior internal generic math functions. IsNumeric differs .numeric data.frames columns numeric accepted numeric.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/is_integer64.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if value is datatype integer64 — is_integer64","title":"Test if value is datatype integer64 — is_integer64","text":"integer64 can cause problems filtering functions, eg timePoint integer64 datatype column, timePoint %% c(0L, 1440L) timePoint == 0 | timePoint == 1440 return different subsets","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/is_integer64.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if value is datatype integer64 — is_integer64","text":"","code":"is_integer64(x)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/is_integer64.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if value is datatype integer64 — is_integer64","text":"x numeric value","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/is_integer64.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if value is datatype integer64 — is_integer64","text":"boolean truth value determined whether input integer64","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/is_integer64.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Test if value is datatype integer64 — is_integer64","text":"https://community.rstudio.com/t/--handle--integer64-type/50024","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/listTables.html","id":null,"dir":"Reference","previous_headings":"","what":"list tables in databse — listTables","title":"list tables in databse — listTables","text":"list tables databse","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/listTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"list tables in databse — listTables","text":"","code":"listTables(db)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/listTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"list tables in databse — listTables","text":"db connection database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/listTables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"list tables in databse — listTables","text":"tables database","code":""},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/localView.html","id":null,"dir":"Reference","previous_headings":"","what":"To view a data.frame / data.table in LibreOffice Calc — localView","title":"To view a data.frame / data.table in LibreOffice Calc — localView","text":"Copied https://gitlab.com/zauster/ormisc/-/blob/master/R/view.R. purpose function write dataframe tmp file print path. Use clipr package write output clipboard easy pasting terminal. See example.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/localView.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To view a data.frame / data.table in LibreOffice Calc — localView","text":"","code":"localView(df)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/localView.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To view a data.frame / data.table in LibreOffice Calc — localView","text":"df data.frame (data.table tibble)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/localView.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"To view a data.frame / data.table in LibreOffice Calc — localView","text":"https://gitlab.com/zauster/ormisc/-/blob/master/R/view.R","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/localView.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"To view a data.frame / data.table in LibreOffice Calc — localView","text":"","code":"if (FALSE) { install.packages(clipr) library(clipr) # df is some dataframe in your environment write_clip(localView(df)) # in a terminal, you can how paste in the line that the cmd above put # in your clipboard and hit enter. your computer will know what to do next # hopefully }"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/moveNfCoFastqFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"move fastq files from lts to scratch for nf-co/rnaseq pipeline — moveNfCoFastqFiles","title":"move fastq files from lts to scratch for nf-co/rnaseq pipeline — moveNfCoFastqFiles","text":"using samplesheet created createNfCorePipelineSampleSheet, create file move fastq files lts scratch","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/moveNfCoFastqFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"move fastq files from lts to scratch for nf-co/rnaseq pipeline — moveNfCoFastqFiles","text":"","code":"moveNfCoFastqFiles(nf_co_samplesheet, from_prefix)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/moveNfCoFastqFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"move fastq files from lts to scratch for nf-co/rnaseq pipeline — moveNfCoFastqFiles","text":"nf_co_samplesheet samplesheet created createNfCorePipelineSamplesheet() prefixes set path files moved scratch from_prefix filepath source filename file","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/moveNfCoFastqFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"move fastq files from lts to scratch for nf-co/rnaseq pipeline — moveNfCoFastqFiles","text":"dataframe two columns, source destination","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/parseComparatives.html","id":null,"dir":"Reference","previous_headings":"","what":"parse text comparative sentence — parseComparatives","title":"parse text comparative sentence — parseComparatives","text":"return logical sentence \"3 > 4\")","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/parseComparatives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parse text comparative sentence — parseComparatives","text":"","code":"parseComparatives(value1, comparative, value2)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/parseComparatives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parse text comparative sentence — parseComparatives","text":"value1 number represented string, eg \"3\" comparative one c(\">\", \">=\", \"<\", \"<=\", \"==\") value2 number represented string, eg \"4\"","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/parseComparatives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parse text comparative sentence — parseComparatives","text":"logical characters evaluated 3 > 4","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/patchTable.html","id":null,"dir":"Reference","previous_headings":"","what":"PATCH entries in database table — patchTable","title":"PATCH entries in database table — patchTable","text":"using package httr, update entries certain fields given rows table","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/patchTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PATCH entries in database table — patchTable","text":"","code":"patchTable(database_table_url, auth_token, update_df, id_col)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/patchTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PATCH entries in database table — patchTable","text":"database_table_url TRAILING '/'. eg \"http://18.224.181.136/api/v1/QualityAssess\" auth_token see brentlabRnaSeqTools::getUserAuthToken() update_df dataframe, preferrably tibble, already read , subsetted. Columns must correct data type db table id_col name id column table. number appended url create uri record","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/patchTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PATCH entries in database table — patchTable","text":"list httr::response() objects","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"post counts to database — postCounts","title":"post counts to database — postCounts","text":"using package httr, post raw count .csv, compiled counts given run, database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"post counts to database — postCounts","text":"","code":"postCounts(   database_counts_url,   run_number,   auth_token,   count_df,   fastq_table,   count_file_suffix = \"_read_count.tsv\" )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"post counts to database — postCounts","text":"database_counts_url eg database_info$kn99_urls$Counts. See database_info run_number run number counts sheet -- important b/c fastqFileNames necessarily unique outside runs auth_token see getUserAuthToken count_df counts read dataframe. Make sure 'feature' 'gene_id' column. Colnames need sample identifier fastq_table recent pull database fastq table count_file_suffix suffix appended fastqFileName count file column headings. default \"_read_count.tsv\"","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"post counts to database — postCounts","text":"list httr::response() objects","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postFastqSheet.html","id":null,"dir":"Reference","previous_headings":"","what":"post new fastq sheet to database — postFastqSheet","title":"post new fastq sheet to database — postFastqSheet","text":"post new fastq sheet database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postFastqSheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"post new fastq sheet to database — postFastqSheet","text":"","code":"postFastqSheet(database_fastq_url, auth_token, new_fastq_path)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postFastqSheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"post new fastq sheet to database — postFastqSheet","text":"database_fastq_url eg database_info$kn99_urls$FastqFiles. See see database_info auth_token see getUserAuthToken new_fastq_path path new fastq sheet","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postQcSheet.html","id":null,"dir":"Reference","previous_headings":"","what":"post new qc sheet to database — postQcSheet","title":"post new qc sheet to database — postQcSheet","text":"using package httr, post new qc sheet database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postQcSheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"post new qc sheet to database — postQcSheet","text":"","code":"postQcSheet(database_qc_url, auth_token, run_number, new_qc_path, fastq_table)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postQcSheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"post new qc sheet to database — postQcSheet","text":"database_qc_url eg database_info$kn99_urls$QualityAssess. see database_info. auth_token getUserAuthToken run_number run number qc sheet -- important b/c fastqFileNames necessarily unique outside runs new_qc_path path new counts csv fastq_table recent pull database fastq table","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postQcSheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"post new qc sheet to database — postQcSheet","text":"list httr::response() objects","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postQcSheet.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"post new qc sheet to database — postQcSheet","text":"can problems dependencies rename function. working now, see info https://statisticsglobe.com/r-error-cant-rename-columns--dont-exist","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Post a table to the database — postTable","title":"Post a table to the database — postTable","text":"Post table database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post a table to the database — postTable","text":"","code":"postTable(database_table_url, auth_token, df)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post a table to the database — postTable","text":"database_table_url see database_info. Use one URLS url slot auth_token see getUserAuthToken df dataframe read , example read_csv vroom","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post a table to the database — postTable","text":"POST results object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/qaFilter.html","id":null,"dir":"Reference","previous_headings":"","what":"Quality filter a brentlabRnaSeqSet object — qaFilter","title":"Quality filter a brentlabRnaSeqSet object — qaFilter","text":"Filter manual passes (overrides auto fail), automatic passes (unless auto failed), optionally RLE IQR Filter manual passes (overrides auto fail), automatic passes (unless auto failed), optionally RLE IQR","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/qaFilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quality filter a brentlabRnaSeqSet object — qaFilter","text":"","code":"qaFilter(x, ...)  # S4 method for brentlabRnaSeqSet qaFilter(x)  # S4 method for brentlabRnaSeqExperiment qaFilter(x, rle_iqr_threshold = NA, iqr_colname = NA)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/qaFilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quality filter a brentlabRnaSeqSet object — qaFilter","text":"x brentlabRnaSeqSet object ... arguments rle_iqr_threshold default NA, means rle_iqr_threshold filtering. Set value filter based RLE IQR. Note: RLE stats calculated removing libraryDate effect. iqr_colname default NA, creates iqr col name set name object. Pass col name , eg \"my_set_iqr\", specify iqr column name manually","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/qaFilter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quality filter a brentlabRnaSeqSet object — qaFilter","text":"quality assessment filtered brentlabRnaSeqSet object quality assessment filtered brentlabRnaSeqExperiment object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/qaFilter.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Quality filter a brentlabRnaSeqSet object — qaFilter","text":"brentlabRnaSeqSet (opposed brentlabRnaSeqExperiment), filters manualAudit autoAudit. rle filtering less 3 replicates, RLE stats NA. returned, also. Filter returned object wish samples 3 replicates.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/readHTSeqFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse HTSeq output to tibble — readHTSeqFile","title":"Parse HTSeq output to tibble — readHTSeqFile","text":"parse htseq output tibble columns (feature, sample). code copied National Cancer Institute GenomicDataCommons","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/readHTSeqFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse HTSeq output to tibble — readHTSeqFile","text":"","code":"readHTSeqFile(fname, samplename = \"sample\")"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/readHTSeqFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse HTSeq output to tibble — readHTSeqFile","text":"fname filepath htseq output samplename legacy pipeline, fastqFileName .fastq.gz replaced _read_count.tsv","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/readHTSeqFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse HTSeq output to tibble — readHTSeqFile","text":"dataframe columns feature, 'sample'","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/readHTSeqFile.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Parse HTSeq output to tibble — readHTSeqFile","text":"GenomicDataCommons::readHTSeqFile","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/readInData.html","id":null,"dir":"Reference","previous_headings":"","what":"read in columnar data — readInData","title":"read in columnar data — readInData","text":"given csv, tsv excel sheet, use right function read data","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/readInData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read in columnar data — readInData","text":"","code":"readInData(path)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/readInData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read in columnar data — readInData","text":"path path csv, tsv xlsx","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/removeParameterEffects.html","id":null,"dir":"Reference","previous_headings":"","what":"remove some effects from the counts — removeParameterEffects","title":"remove some effects from the counts — removeParameterEffects","text":"subtract effect norm counts single factor coef x design. coef normalized log space. dds must created model.matrix","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/removeParameterEffects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"remove some effects from the counts — removeParameterEffects","text":"","code":"removeParameterEffects(deseq_object, col_indicies)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/removeParameterEffects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"remove some effects from the counts — removeParameterEffects","text":"deseq_object deseq data object (recall brentlabRnaSeqSet child, works, ) col_indicies numeric vector corresponding column indicies batch parameters like remove","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/removeParameterEffects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"remove some effects from the counts — removeParameterEffects","text":"log2 scale gene samples matrix desired effects removed","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/removeParameterEffects.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"remove some effects from the counts — removeParameterEffects","text":"works formula model.matrix designs dds object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/replicateByProtocolTally.html","id":null,"dir":"Reference","previous_headings":"","what":"experimental replicates by libraryProtocol tally — replicateByProtocolTally","title":"experimental replicates by libraryProtocol tally — replicateByProtocolTally","text":"tally experimental replicate columns library prep protocol","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/replicateByProtocolTally.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"experimental replicates by libraryProtocol tally — replicateByProtocolTally","text":"","code":"replicateByProtocolTally(x, ...)  # S4 method for brentlabRnaSeqExperiment replicateByProtocolTally(x)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/replicateByProtocolTally.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"experimental replicates by libraryProtocol tally — replicateByProtocolTally","text":"x brentlabRnaSeqExperiment ... arguments","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/replicateByProtocolTally_90min.html","id":null,"dir":"Reference","previous_headings":"","what":"90min replicate by protocol tally — replicateByProtocolTally_90min","title":"90min replicate by protocol tally — replicateByProtocolTally_90min","text":"tally 90min induction genotype1 replicates libraryProtocol","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/replicateByProtocolTally_90min.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"90min replicate by protocol tally — replicateByProtocolTally_90min","text":"","code":"replicateByProtocolTally_90min(metadata_df)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/replicateByProtocolTally_90min.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"90min replicate by protocol tally — replicateByProtocolTally_90min","text":"metadata_df sample metadata database colData(blrs)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleByReplicateGroup.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate RLE by replicate groups — rleByReplicateGroup","title":"calculate RLE by replicate groups — rleByReplicateGroup","text":"calculate RLE replicate groups","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleByReplicateGroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate RLE by replicate groups — rleByReplicateGroup","text":"","code":"rleByReplicateGroup(replicates_vector, gene_quants, log2_transformed_flag)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleByReplicateGroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate RLE by replicate groups — rleByReplicateGroup","text":"replicates_vector list lists sublist represents replicate group. Entries must metadata parameter, fastqFileName, corresponds columns counts. Suggestion: use something like dplyr functions create list lists group_by() %>% group_split %>% pull(fastqFileName) gene_quants gene x sample dataframe values sort gene quantification (eg normed counts, log2(norm_counts) effect removed), possibly already logged (@see already_logged_flag) log2_transformed_flag boolean TRUE means counts already log2 space","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleByReplicateGroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate RLE by replicate groups — rleByReplicateGroup","text":"list dataframes replicate group replicateS_sample_list, dimensions gene x sample. values RLE gene given sample","code":""},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"plot RLE for a given column filter — rlePlot","title":"plot RLE for a given column filter — rlePlot","text":"plot RLE given column filter","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot RLE for a given column filter — rlePlot","text":"","code":"rlePlot(deseq_object, model_matrix, column_filter, title)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot RLE for a given column filter — rlePlot","text":"deseq_object deseq object results DESeq() call model_matrix deseq_object model matrix column_filter vector fastqFileNames (whatever columns -- samples -- called) title plots","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot RLE for a given column filter — rlePlot","text":"list slots norm_count_rle effect_removed_rle","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlotCompareEffectRemoved.html","id":null,"dir":"Reference","previous_headings":"","what":"plots output of rleSummaryByReplicateGroup — rlePlotCompareEffectRemoved","title":"plots output of rleSummaryByReplicateGroup — rlePlotCompareEffectRemoved","text":"plots output rleSummaryByReplicateGroup","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlotCompareEffectRemoved.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plots output of rleSummaryByReplicateGroup — rlePlotCompareEffectRemoved","text":"","code":"rlePlotCompareEffectRemoved(   norm_counts_rle,   removed_effect_rle,   metadata_df,   title )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlotCompareEffectRemoved.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plots output of rleSummaryByReplicateGroup — rlePlotCompareEffectRemoved","text":"norm_counts_rle output calculateRLE (maybe one sublists rleByReplicateGroup()) removed_effect_rle see norm_counts_rle, removing batch effects metadata_df metadata least FASTQFILENAME LIBRARYDATE title title plot","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlotCompareEffectRemoved.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plots output of rleSummaryByReplicateGroup — rlePlotCompareEffectRemoved","text":"ggplot norm counts (transparent) removedEffect 'counts' plot","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlot_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"the actual plotting function for rlePlot — rlePlot_helper","title":"the actual plotting function for rlePlot — rlePlot_helper","text":"actual plotting function rlePlot","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlot_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the actual plotting function for rlePlot — rlePlot_helper","text":"","code":"rlePlot_helper(   count_df,   log2_transformed_flag,   title,   gene_id_path = Sys.getenv(\"GENE_ID_PATH\") )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlot_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"the actual plotting function for rlePlot — rlePlot_helper","text":"count_df counts gene x sample log2_transformed_flag boolean TRUE indicates counts log2 space title title output plot gene_id_path path gene_ids. Default set read Sys.getenv(\"GENE_ID_PATH\")","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlot_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"the actual plotting function for rlePlot — rlePlot_helper","text":"ggplot","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"rleSummary calculates summary statistics of rleFullTable — rleSummary","title":"rleSummary calculates summary statistics of rleFullTable — rleSummary","text":"rleSummary calculates summary statistics rleFullTable","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rleSummary calculates summary statistics of rleFullTable — rleSummary","text":"","code":"rleSummary(rle_table)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rleSummary calculates summary statistics of rleFullTable — rleSummary","text":"rle_table output rleFullTable","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rleSummary calculates summary statistics of rleFullTable — rleSummary","text":"dataframe sample rle summary statistics","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"transform normalized counts into regularized log expression — rleTransform","title":"transform normalized counts into regularized log expression — rleTransform","text":"transform normalized counts regularized log expression","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"transform normalized counts into regularized log expression — rleTransform","text":"","code":"rleTransform(object)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"transform normalized counts into regularized log expression — rleTransform","text":"object brentlabRnaSeqSet object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"transform normalized counts into regularized log expression — rleTransform","text":"brentlabRnaSeqSetTransform object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/run_numbers_with_leading_zero.html","id":null,"dir":"Reference","previous_headings":"","what":"A named list containing a run number without a leading zero, eg 647, with the value being the same runnumber with\na leading 0, eg 0647. — run_numbers_with_leading_zero","title":"A named list containing a run number without a leading zero, eg 647, with the value being the same runnumber with\na leading 0, eg 0647. — run_numbers_with_leading_zero","text":"best remedied database forcing column string adding 0s","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/run_numbers_with_leading_zero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A named list containing a run number without a leading zero, eg 647, with the value being the same runnumber with\na leading 0, eg 0647. — run_numbers_with_leading_zero","text":"","code":"run_numbers_with_leading_zero"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/run_numbers_with_leading_zero.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A named list containing a run number without a leading zero, eg 647, with the value being the same runnumber with\na leading 0, eg 0647. — run_numbers_with_leading_zero","text":"object class list length 13.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/sendCountsToDatabase.html","id":null,"dir":"Reference","previous_headings":"","what":"Send Counts to Database (legacy pipeline) — sendCountsToDatabase","title":"Send Counts to Database (legacy pipeline) — sendCountsToDatabase","text":"use novoalign + htseq brentlab rnaseq pipeline.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/sendCountsToDatabase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send Counts to Database (legacy pipeline) — sendCountsToDatabase","text":"","code":"sendCountsToDatabase(htseq_path, run_number, auth_token, fastq_table_path)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/sendCountsToDatabase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send Counts to Database (legacy pipeline) — sendCountsToDatabase","text":"htseq_path path htseq-counts output run_number run number sample originates auth_token user authentication token database. See brentlabRnaSeqToolsgetUserAuthToken fastq_table_path path recent fastq table reflecting current state database ... Arguments passed postCounts database_counts_url eg database_info$kn99_urls$Counts. See database_info count_df counts read dataframe. Make sure 'feature' 'gene_id' column. Colnames need sample identifier fastq_table recent pull database fastq table count_file_suffix suffix appended fastqFileName count file column headings. default \"_read_count.tsv\"","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/sendCountsToDatabase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send Counts to Database (legacy pipeline) — sendCountsToDatabase","text":"http response","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/setPerturbedLociToZero.html","id":null,"dir":"Reference","previous_headings":"","what":"Zero out perturbed expression — setPerturbedLociToZero","title":"Zero out perturbed expression — setPerturbedLociToZero","text":"set expression gene genotype1 particular sample zero","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/setPerturbedLociToZero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero out perturbed expression — setPerturbedLociToZero","text":"","code":"setPerturbedLociToZero(object)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/setPerturbedLociToZero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero out perturbed expression — setPerturbedLociToZero","text":"object deseq data set column genotype1 colData (brentlabRnaSeqSet also works)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/setPerturbedLociToZero.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Zero out perturbed expression — setPerturbedLociToZero","text":"error handling good yet -- error perturbed loci rownames object (eg, filtered due low expression)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/splitProtocolGroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a brentlabRnaSeqSet into two by protocol — splitProtocolGroups","title":"Split a brentlabRnaSeqSet into two by protocol — splitProtocolGroups","text":"split object 'SolexaPrep' 'E7420L'","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/splitProtocolGroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a brentlabRnaSeqSet into two by protocol — splitProtocolGroups","text":"","code":"splitProtocolGroups(x, ...)  # S4 method for brentlabRnaSeqSet splitProtocolGroups(x)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/splitProtocolGroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a brentlabRnaSeqSet into two by protocol — splitProtocolGroups","text":"x brentlabRnaSeqSet ... arguments","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/splitProtocolGroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a brentlabRnaSeqSet into two by protocol — splitProtocolGroups","text":"list 'SolexaPrep' 'E7420L' group. call 'SolexaPrep' \"old\"","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/testBamPath.html","id":null,"dir":"Reference","previous_headings":"","what":"test bam path — testBamPath","title":"test bam path — testBamPath","text":"test bam path","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/testBamPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test bam path — testBamPath","text":"","code":"testBamPath(metadata_df)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/testBamPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"test bam path — testBamPath","text":"metadata_df path metadata dataframe","code":""}]
