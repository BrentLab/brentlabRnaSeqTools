[{"path":"https://brentlab.github.io/brentlabRnaSeqTools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Chase Mateusiak Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ProcessRun.html","id":"get-the-metadata-from-the-database","dir":"Articles","previous_headings":"","what":"Get the metadata from the database","title":"Process a New Run From MGI","text":"","code":"meta = getMetadata(   database_info$kn99$db_host,   database_info$kn99$db_name,   Sys.getenv(\"db_username\"),   Sys.getenv(\"db_password\") )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ProcessRun.html","id":"filter-out-the-reads-of-interest","dir":"Articles","previous_headings":"","what":"Filter out the reads of interest","title":"Process a New Run From MGI","text":"","code":"run_df = meta %>%   filter(runNumber == 5500)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ProcessRun.html","id":"look-at-it--make-sure-it-is-correct","dir":"Articles","previous_headings":"","what":"Look at it. Make sure it is correct","title":"Process a New Run From MGI","text":"","code":"View(run_df)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ProcessRun.html","id":"write-out","dir":"Articles","previous_headings":"","what":"Write out","title":"Process a New Run From MGI","text":"mounted local HTCF, can write directly HTCF. Otherwise, write computer follow directions move HTCF.","code":"sample_sheet = createNovoalignPipelineSamplesheet(run_df, \"/scratch/mblab/chasem/rnaseq_pipeline/scratch_sequence\")  write_csv(sample_sheet, \"/path/to/where/you/write_things/run_<some_identifier>.csv\")"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ProcessRun.html","id":"move-a-file-to-htcf","dir":"Articles","previous_headings":"Write out","what":"Move a file to HTCF","title":"Process a New Run From MGI","text":"Log HTCF make directory store input/output run. example, processing run_1234, log HTCF make directory like : Back local computer, send file local HTCF scp Please note requirement path look like : <your_username>/rnaseq_pipeline/align_count_results/run_1234. just example might look like.","code":"$ mkdir /scratch/mblab/chasem/rnaseq_pipeline/align_count_results/run_1234 # copy the file from your computer to a directory in your personal subdirectory  # of the lab scratch space $ scp /path/to/where/you/write_things/run_<some_identifier>.csv \\        <your_username>@htcf.wustl.edu:/scratch/mblab/<your_username>/rnaseq_pipeline/align_count_results/run_1234"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ProcessRun.html","id":"on-htcf-start-the-pipeline","dir":"Articles","previous_headings":"","what":"On HTCF, start the pipeline","title":"Process a New Run From MGI","text":"first time , navigate scratch space : done , navigate brentlab_rnaseq_nf directory pull possible updates: get sort error says something like, “git directory”, know , fact, git directory, HTCF deleted files. case, navigate brentlab_rnaseq_nf, delete (rm -rf brentlab_rnaseq_nf), use git clone command described .","code":"$ git clone https://github.com/cmatKhan/brentlab_rnaseq_nf.git $ git pull https://github.com/cmatKhan/brentlab_rnaseq_nf.git"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ProcessRun.html","id":"copy-the-fastq-files-into-scratch","dir":"Articles","previous_headings":"","what":"Copy the fastq files into scratch","title":"Process a New Run From MGI","text":"suggest rnaseq_pipeline directory personal scratch space. don’t one, make one, otherwise navigate ever keeping rnaseq type data. can use script job. Ask need help setting use HTCF. example, assuming scriptin $PWD","code":"$ ./fastqFilesToScratchFromSamplesheet.sh path/to/sample_sheet.csv /lts/mblab/sequence_data/rnaseq_data/lts_sequence"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ProcessRun.html","id":"run-the-pipeline","dir":"Articles","previous_headings":"","what":"Run the pipeline","title":"Process a New Run From MGI","text":"Navigate directory going store input/output pipeline, eg:","code":"$ cd rnaseq_pipeline/align_count_results/run_1234"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ProcessRun.html","id":"make-the-params-file","dir":"Articles","previous_headings":"Run the pipeline","what":"Make the params file","title":"Process a New Run From MGI","text":"need file describing experiment. go directory input/output stored. must look like , paths must correct. Save , eg, params_run1234.json. example also shown ","code":"{ \"output_dir\": \".\", \"sample_sheet\": \"path/to/sample_sheet.csv\", \"run_number\": \"1234\", \"KN99_novoalign_index\": \"/scratch/mblab/chasem/rnaseq_pipeline/genome_files/KN99/KN99_genome_fungidb.nix\", \"KN99_fasta\": \"/scratch/mblab/chasem/rnaseq_pipeline/genome_files/KN99/KN99_genome_fungidb.fasta\", \"KN99_stranded_annotation_file\": \"/scratch/mblab/chasem/rnaseq_pipeline/genome_files/KN99/KN99_stranded_annotations_fungidb_augment.gff\", \"KN99_unstranded_annotation_file\": \"/scratch/mblab/chasem/rnaseq_pipeline/genome_files/KN99/KN99_no_strand_annotations_fungidb_augment.gff\", \"htseq_count_feature\": \"exon\" }"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ProcessRun.html","id":"run-nextflow","dir":"Articles","previous_headings":"Run the pipeline","what":"Run nextflow","title":"Process a New Run From MGI","text":"NOTE: params file, run script , must make sure paths correct. won’t , unless change make correct . Next, make script run pipeline. [example may found ]((https://github.com/BrentLab/brentlabRnaSeqTools/blob/main/inst/bash/run_novo_nf_pipeline.sh), can copy/paste file. Remember update paths. can check progress looking squeue <your_jobname>.. Right now, taking long time HTCF launch nextflow. HTCF updates ‘new’ implementation, starts much faster.","code":"#!/bin/bash  #SBATCH --time=15:00:00  # right now, 15 hours. change depending on time expectation to run #SBATCH --mem-per-cpu=10G #SBATCH -J your_jobname.out #SBATCH -o your_jobname.out  ml miniconda  # until HTCF updates and spack is available, this works. When HTCF updates and  # we have spack, ill update this...though at that point, hopefully we are no  # longer using this pipeline source activate /scratch/mblab/chasem/rnaseq_pipeline/conda_envs/nextflow  mkdir tmp  nextflow run /path/to/brentlab_rnaseq_nf/main.nf \\               -params-file /path/to/your_params.json"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Library_Quality.html","id":"cryptococcus","dir":"Articles","previous_headings":"","what":"Cryptococcus","title":"QC: Library Quality","text":"Note libraryComplexity included qc metrics now, threshold currently set. default setting libraryComplexity calculate portion total counts made top 25 expressed genes","code":"library(brentlabRnaSeqTools) library(tidyverse)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Library_Quality.html","id":"get-the-metadata-from-the-database","dir":"Articles","previous_headings":"","what":"Get the metadata from the database","title":"QC: Library Quality","text":"","code":"meta = getMetadata(   database_info$kn99$db_host,   database_info$kn99$db_name,   Sys.getenv(\"db_username\"),   Sys.getenv(\"db_password\") )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Library_Quality.html","id":"filter-out-the-reads-of-interest","dir":"Articles","previous_headings":"","what":"Filter out the reads of interest","title":"QC: Library Quality","text":"","code":"run_df = meta %>%   filter(runNumber == 5500)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Library_Quality.html","id":"create-qc-table","dir":"Articles","previous_headings":"","what":"Create QC table","title":"QC: Library Quality","text":"need cluster mounted local work. Note may get warnings index file older bam. isn’t critical can generally ignored, though something aware trying figure .","code":"pipeline_out = \"/mnt/scratch/rnaseq_pipeline/align_count_results/run_5500/rnaseq_pipeline_results/run_5500_samples\"  run_qc = novoalignPipelineQC(run_df, pipeline_out, Sys.getenv(\"kn99_stranded_gff_rds\"))"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Library_Quality.html","id":"parse-this-out-into-a-qc-sheet","dir":"Articles","previous_headings":"","what":"parse this out into a QC sheet","title":"QC: Library Quality","text":"","code":"qc_table = addQcColsToMeta(run_df, run_qc)   # write_csv(dplyr::select(qc_df, -c(genotype1, genotype2, marker1, marker2)),  #           \"~/Desktop/tmp/run_5500_qc.csv\")"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Library_Quality.html","id":"auto-and-manual-audit","dir":"Articles","previous_headings":"","what":"auto and manual audit","title":"QC: Library Quality","text":"","code":"audited_qc_df = autoAuditQcTable(qc_table) %>%   # add manual audit columns   mutate(manualAudit = NA,          manualStatus = NA)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Library_Quality.html","id":"update-manual-audit","dir":"Articles","previous_headings":"","what":"update manual audit","title":"QC: Library Quality","text":"","code":"audited_qc_df = edit(audited_qc_df)  audited_qc_df %>%   dplyr::select(-c(genotype1, genotype2, marker1, marker2)) %>% write_csv(\"~/Desktop/tmp/run_5500_qc.csv\")"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Library_Quality.html","id":"post-counts-to-database","dir":"Articles","previous_headings":"","what":"post Counts to database","title":"QC: Library Quality","text":"","code":"count_files = Sys.glob(file.path(pipeline_out, \"count\", \"*_read_count.tsv\")) names(count_files) = str_remove(basename(count_files), \"_read_count.tsv\")  compiled_counts = map(names(count_files), ~readHTSeqFile(count_files[[.]], .)) %>%   plyr::join_all() %>%   filter(!startsWith(feature, \"__\")) %>%   dplyr::select(-feature)  fastq_df = read_csv(\"/mnt/lts/sequence_data/rnaseq_data/kn99_database_archive/20220131/fastqFiles.csv\")  # note: commented out to prevent me from accidently running this # res = postCounts(database_info$kn99$urls$counts,  #                  5500,  #                  Sys.getenv(\"kn99_db_token\"),  #                  compiled_counts,  #                  fastq_df) #  # res"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Library_Quality.html","id":"send-qc-to-database","dir":"Articles","previous_headings":"","what":"Send QC to database","title":"QC: Library Quality","text":"","code":"# note: commented out in the vignette to prevent me from running accidently # res = postQcSheet_test(database_info$kn99$urls$qualityAssess, #             Sys.getenv(\"kn99_db_token\"), #             5500,  #             \"~/Desktop/tmp/run_5500_qc.csv\", #             \"/mnt/lts/sequence_data/rnaseq_data/kn99_database_archive/20220131/fastqFiles.csv\")  # a code of 200 or 201 means it worked. anything else means failure # res"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Library_Quality.html","id":"igv-browser-shot","dir":"Articles","previous_headings":"","what":"IGV browser shot","title":"QC: Library Quality","text":"","code":"kn99_gff = readRDS(Sys.getenv(\"kn99_stranded_gff_rds\"))  unique_loci = str_replace(unique(run_qc$locus), \"CNAG\", \"CKF44\")  unique_loci = c(unique_loci, c(\"CNAG_NAT\", \"CNAG_G418\"))  bam_prefix = file.path(pipeline_out, \"align\") bam_suffix = \"_sorted_aligned_reads_with_annote.bam\"  bam_list_df = run_df %>%   distinct(fastqFileNumber, .keep_all = TRUE)  bam_list = unlist(map(pull(bam_list_df, fastqFileName), ~file.path(bam_prefix, paste0(., bam_suffix))))  bam_list = map(bam_list, ~c(., \"/mnt/scratch/rnaseq_pipeline/align_count_results/run_5500/rnaseq_pipeline_results/run_5500_samples/align/Brent_3235_GTAC_1_SIC_Index2_08_TGAGGTTATC_AAGCACGT_S2_R1_001_sorted_aligned_reads_with_annote.bam\")) names(bam_list) = bam_list_df$fastqFileNumber  igvScriptAll = function(ffn){   for(locus in unique_loci){       granges = kn99_gff[kn99_gff$ID == locus & kn99_gff$type == 'gene']       print(granges)       basename = paste(ffn, locus, sep = \"_\")       createIgvBatchscript(         bam_list = bam_list[[ffn]],         granges = granges,         igv_genome = Sys.getenv(\"kn99_stranded_igv_genome\"),         output_dir = \"/home/oguzkhan/Desktop/tmp/igv/\",         output_file_basename = basename)   }  }  igvScriptAll(names(bam_list)[1])"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Library_Quality.html","id":"running-the-igv-batch-scripts","dir":"Articles","previous_headings":"","what":"Running the IGV batch scripts","title":"QC: Library Quality","text":"likely easiest just cd place output scripts scp run directory moving run directory lts","code":"cd /home/oguzkhan/Desktop/tmp/igv/scripts  for batch_script in $(ls .); do   xvfb-run --auto-servernum igv.sh -b batch_script done scp -r /home/oguzkhan/Desktop/tmp/igv chasem@htcf.wustl.edu:/mnt/scratch/rnaseq_pipeline/align_count_results/run_5500/rnaseq_pipeline_results/run_5500_samples/  # then log into htcf, go to the pipeline output and move the whole run directory to lts  rsync -aHv run_5500_samples /lts/mblab/sequence_data/rnaseq_data/lts_align_count/"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"QC: Replicate Agreement","text":"illustrates construct data object Sample Agreement QC step – RLE – data sets. case, added design (last step set), need write object file send cluster. suggest mounting cluster writing mounted directory. See vignette Running DESeq HTCF instructions running DESeq HTCF. Note bottom script, instructions copy necessary scripts run DESeq model using MPI htcf. can see defined sets entering ?createExperimentSet. experiment set interested exist option set_names, ’ll need use extractColData(blrs) blrs object play around come set filters define new set. See github repository, “R/ExperimentSetFunctions.R” examples","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"setup-the-environment","dir":"Articles","previous_headings":"Introduction","what":"Setup the environment","title":"QC: Replicate Agreement","text":"","code":"library(brentlabRnaSeqTools) library(rtracklayer) library(tidyverse) library(caret)  # set variables   KN99_GFF_RDS = Sys.getenv(\"kn99_stranded_gff_rds\") DB_USERNAME = Sys.getenv(\"db_username\") DB_PASSWORD = Sys.getenv(\"db_password\")  # note: I mount to the cluster and output directly to it DDS_OUTPUT_DIR = Sys.getenv(\"OUTPUT_DIR\") TODAY = format(lubridate::today(),\"%Y%m%d\")  # controls whether dds objects are written WRITE_OUT = TRUE"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"pull-the-database","dir":"Articles","previous_headings":"Introduction","what":"Pull the database","title":"QC: Replicate Agreement","text":"","code":"blrs = brentlabRnaSeqSetFromDatabase('kn99',DB_USERNAME, DB_PASSWORD)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"add-gene-level-data-optional","dir":"Articles","previous_headings":"Introduction","what":"Add gene level data (optional)","title":"QC: Replicate Agreement","text":"adds data regarding locus GRange object gene data slot brentlabRnaSeqSet object. Useful going use Bioconductor packages, brentlabRnaSeqTools::createIgvBrowserShot()","code":"kn99_gff = readRDS(KN99_GFF_RDS)  kn99_genes = kn99_gff[kn99_gff$ID %in% rownames(blrs)]  rowRanges(blrs) = kn99_genes[order(match(kn99_genes$ID,rownames(blrs)))]"},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"grant-set","dir":"Articles","previous_headings":"90minuteInduction","what":"2016 grant set","title":"QC: Replicate Agreement","text":"data set defined single locus KOs 90minuteInduction conditions genotypes grant_df (data object loaded part brentlabRnaSeqTools – take look interested)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"create-the-set-and-quality-filter","dir":"Articles","previous_headings":"90minuteInduction > 2016 grant set","what":"Create the set and quality filter","title":"QC: Replicate Agreement","text":"","code":"blrs_90min_grant = createExperimentSet(blrs, 'ninetyMin_2016Grant')  # note that this filters out those samples which failed QC1,  # but but does not filter on RLE unless the argument rle_iqr_threshold  # is set to a numeric value blrs_90min_grant_fltr = qaFilter(blrs_90min_grant)  # remove WT which fall on dates with no perturbed samples blrs_90min_grant_fltr =    filterWtByExperimentalLibdate_90min(blrs_90min_grant_fltr)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"add-the-design","dir":"Articles","previous_headings":"90minuteInduction > 2016 grant set","what":"Add the design","title":"QC: Replicate Agreement","text":"","code":"blrs_90min_grant_fltr = estimateSizeFactorsByProtocol(blrs_90min_grant_fltr)  min_libdate = min(as.Date(colData(blrs_90min_grant_fltr)$libraryDate))  colData(blrs_90min_grant_fltr)$libraryDate =    colData(blrs_90min_grant_fltr)$libraryDate %>%   relevel(ref = as.character(min_libdate)) %>%   droplevels()  colData(blrs_90min_grant_fltr)$libraryProtocol =    colData(blrs_90min_grant_fltr)$libraryProtocol %>%   factor() %>%   relevel(ref = \"SolexaPrep\") %>%   droplevels()  colData(blrs_90min_grant_fltr)$genotype1 =    colData(blrs_90min_grant_fltr)$genotype1 %>%   relevel(ref = \"CNAG_00000\") %>%   droplevels()  mm = model.matrix(~libraryProtocol+libraryDate+genotype1,                    extractColData(blrs_90min_grant_fltr))  min_new_protocol = min(as.Date((unique(pull(filter(   extractColData(blrs_90min_grant_fltr),    libraryProtocol == 'E7420L'),    libraryDate)))))  mm = mm[,-which(colnames(mm) == paste0('libraryDate',min_new_protocol))]"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"inspect-the-model-matrix-for-linear-dependencies","dir":"Articles","previous_headings":"90minuteInduction > 2016 grant set > Add the design","what":"inspect the model matrix for linear dependencies","title":"QC: Replicate Agreement","text":"","code":"lin_dep_report = caret::findLinearCombos(mm)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"add-the-design-to-the-object","dir":"Articles","previous_headings":"90minuteInduction > 2016 grant set > Add the design","what":"add the design to the object","title":"QC: Replicate Agreement","text":"","code":"design(blrs_90min_grant_fltr) = mm rm(mm)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"write-out","dir":"Articles","previous_headings":"90minuteInduction > 2016 grant set > Add the design","what":"write out","title":"QC: Replicate Agreement","text":"","code":"if(WRITE_OUT){      outpath = file.path(DDS_OUTPUT_DIR,                       \"90minDataFreeze\",                       TODAY,                       \"grant_only_input.rds\")      dds = DESeq2::DESeqDataSetFromMatrix(     colData = extractColData(blrs_90min_grant_fltr),     countData = counts(blrs_90min_grant_fltr),     design = design(blrs_90min_grant_fltr))      sizeFactors(dds) = sizeFactors(blrs_90min_grant_fltr)      write_rds(dds, outpath) }"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"grant-set-with-doubles","dir":"Articles","previous_headings":"90minuteInduction","what":"2016 Grant Set with Doubles","title":"QC: Replicate Agreement","text":"double KO samples either KO loci grant_df, plus single KO samples corresponding one double KO perturbed loci WT.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"create-set-and-quality-filter","dir":"Articles","previous_headings":"90minuteInduction > 2016 Grant Set with Doubles","what":"Create set and quality filter","title":"QC: Replicate Agreement","text":"","code":"blrs_grant_with_doubles = createExperimentSet(blrs, 'ninetyMin_2016GrantWithDoubles')  # note that this filters out those samples which failed QC1,  # but but does not filter on RLE unless the argument rle_iqr_threshold  # is set to a numeric value blrs_grant_with_doubles_fltr = qaFilter(blrs_grant_with_doubles)  # remove WT which fall on dates with no perturbed samples blrs_grant_with_doubles_fltr =    filterWtByExperimentalLibdate_90min(blrs_grant_with_doubles_fltr)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"add-the-design-1","dir":"Articles","previous_headings":"90minuteInduction > 2016 Grant Set with Doubles","what":"Add the design","title":"QC: Replicate Agreement","text":"","code":"blrs_grant_with_doubles_fltr = estimateSizeFactorsByProtocol(blrs_grant_with_doubles_fltr)  min_libdate = min(as.Date(colData(blrs_grant_with_doubles_fltr)$libraryDate))  colData(blrs_grant_with_doubles_fltr)$libraryDate =    colData(blrs_grant_with_doubles_fltr)$libraryDate %>%   relevel(ref = as.character(min_libdate)) %>%   droplevels()  # add a 'genotype' column which is a concatenation of genotype1 and genotype2 colData(blrs_grant_with_doubles_fltr)$genotype =    paste(colData(blrs_grant_with_doubles_fltr)$genotype1,         colData(blrs_grant_with_doubles_fltr)$genotype2,         sep = \"_\") %>%   str_remove('_$') %>%   factor() %>%   relevel(ref = \"CNAG_00000\") %>%   droplevels()  colData(blrs_grant_with_doubles_fltr)$libraryProtocol =    colData(blrs_grant_with_doubles_fltr)$libraryProtocol %>%   factor() %>%   relevel(ref = \"SolexaPrep\") %>%   droplevels()  mm = model.matrix(~libraryProtocol+libraryDate+genotype,                    extractColData(blrs_grant_with_doubles_fltr))  min_new_protocol = min(   as.Date(     (unique(       pull(         filter(extractColData(blrs_grant_with_doubles_fltr),                 libraryProtocol == 'E7420L'), libraryDate)))))  mm = mm[,-which(colnames(mm) == paste0('libraryDate',min_new_protocol))]"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"inspect-the-model-matrix-for-linear-dependencies-1","dir":"Articles","previous_headings":"90minuteInduction > 2016 Grant Set with Doubles > Add the design","what":"inspect the model matrix for linear dependencies","title":"QC: Replicate Agreement","text":"","code":"lin_dep_report = caret::findLinearCombos(mm) lin_dep_report"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"add-the-design-to-the-object-1","dir":"Articles","previous_headings":"90minuteInduction > 2016 Grant Set with Doubles > Add the design","what":"add the design to the object","title":"QC: Replicate Agreement","text":"","code":"design(blrs_grant_with_doubles_fltr) = mm rm(mm)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"write-out-1","dir":"Articles","previous_headings":"90minuteInduction > 2016 Grant Set with Doubles > Add the design","what":"Write out","title":"QC: Replicate Agreement","text":"","code":"if(WRITE_OUT){      outpath = file.path(DDS_OUTPUT_DIR,                       \"90minDataFreeze\",                       TODAY,                       \"grant_doubles_input.rds\")      dds = DESeq2::DESeqDataSetFromMatrix(     colData = extractColData(blrs_grant_with_doubles_fltr),     countData = counts(blrs_grant_with_doubles_fltr),     design = design(blrs_grant_with_doubles_fltr))      sizeFactors(dds) = sizeFactors(blrs_grant_with_doubles_fltr)      write_rds(dds, outpath) }"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"all","dir":"Articles","previous_headings":"90minuteInduction","what":"All","title":"QC: Replicate Agreement","text":"set samples – singles doubles – 90minuteInduction conditions.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"create-set-and-quality-filter-1","dir":"Articles","previous_headings":"90minuteInduction > All","what":"Create set and quality filter","title":"QC: Replicate Agreement","text":"","code":"blrs_90min_all = createExperimentSet(blrs, 'ninetyMin_all')  # note that this filters out those samples which failed QC1,  # but but does not filter on RLE unless the argument rle_iqr_threshold  # is set to a numeric value blrs_90min_all_fltr = qaFilter(blrs_90min_all)  # remove WT which fall on dates with no perturbed samples blrs_90min_all_fltr =    filterWtByExperimentalLibdate_90min(blrs_90min_all_fltr)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"add-the-design-2","dir":"Articles","previous_headings":"90minuteInduction > All","what":"Add the design","title":"QC: Replicate Agreement","text":"","code":"blrs_90min_all_fltr = estimateSizeFactorsByProtocol(blrs_90min_all_fltr)  min_libdate = min(as.Date(colData(blrs_90min_all_fltr)$libraryDate))  colData(blrs_90min_all_fltr)$libraryDate =    colData(blrs_90min_all_fltr)$libraryDate %>%   relevel(ref = as.character(min_libdate)) %>%   droplevels()  # add a 'genotype' column which is a concatenation of genotype1 and genotype2 colData(blrs_90min_all_fltr)$genotype =    paste(colData(blrs_90min_all_fltr)$genotype1,         colData(blrs_90min_all_fltr)$genotype2,         sep = \"_\") %>%   str_remove('_$') %>%   factor() %>%   relevel(ref = \"CNAG_00000\") %>%   droplevels()  colData(blrs_90min_all_fltr)$libraryProtocol =    colData(blrs_90min_all_fltr)$libraryProtocol %>%   factor() %>%   relevel(ref = \"SolexaPrep\") %>%   droplevels()  mm = model.matrix(~libraryProtocol+libraryDate+genotype,                    extractColData(blrs_90min_all_fltr))  min_new_protocol = min(   as.Date(     (unique(       pull(         filter(extractColData(blrs_90min_all_fltr),                 libraryProtocol == 'E7420L'), libraryDate)))))  mm = mm[,-which(colnames(mm) == paste0('libraryDate',min_new_protocol))]"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"inspect-the-model-matrix-for-linear-dependencies-2","dir":"Articles","previous_headings":"90minuteInduction > All > Add the design","what":"inspect the model matrix for linear dependencies","title":"QC: Replicate Agreement","text":"","code":"lin_dep_report = caret::findLinearCombos(mm) lin_dep_report"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"add-the-design-to-the-object-2","dir":"Articles","previous_headings":"90minuteInduction > All > Add the design","what":"add the design to the object","title":"QC: Replicate Agreement","text":"","code":"design(blrs_90min_all_fltr) = mm rm(mm)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"write-out-2","dir":"Articles","previous_headings":"90minuteInduction > All > Add the design","what":"Write out","title":"QC: Replicate Agreement","text":"","code":"if(WRITE_OUT){      outpath = file.path(DDS_OUTPUT_DIR,                       \"90minDataFreeze\",                       TODAY,                       \"90min_all_input.rds\")      dds = DESeq2::DESeqDataSetFromMatrix(     colData = extractColData(blrs_90min_all_fltr),     countData = counts(blrs_90min_all_fltr),     design = design(blrs_90min_all_fltr))      sizeFactors(dds) = sizeFactors(blrs_90min_all_fltr)      write_rds(dds, outpath) }"},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"create-sets","dir":"Articles","previous_headings":"Environmental Perturbation","what":"Create Sets","title":"QC: Replicate Agreement","text":"","code":"ep_list = list(   wt = createExperimentSet(blrs, 'envPert_epWT'),   titration = createExperimentSet(blrs, 'envPert_titrationWT'),   perturbed = createExperimentSet(blrs, 'envPert_perturbed') )  # NOTE!! AS OF 20220201 CNAG_03894 forms a linear depdendence with both  # concat treatment and libraryDate columns. it is being removed here to solve # that issue  ep_list$perturbed = ep_list$perturbed[,ep_list$perturbed$genotype1 != \"CNAG_03894\"]"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"quality-filter","dir":"Articles","previous_headings":"Environmental Perturbation","what":"Quality Filter","title":"QC: Replicate Agreement","text":"","code":"ep_list_qc_passing = map(ep_list, qaFilter)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"expression-filter","dir":"Articles","previous_headings":"Environmental Perturbation","what":"Expression Filter","title":"QC: Replicate Agreement","text":"","code":"# How this is done is up to you, and obviously affects what genes are left in. # Below is an example. You need to think about the thresholds and filter method  # that suits your purpose best.  expr_fltr_list = map(ep_list, ~rowSums(edgeR::cpm(counts(.))>4) >= 4)  ep_list_qc_passing_fltr = map2(ep_list_qc_passing, expr_fltr_list, ~.x[.y,])"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"set-design","dir":"Articles","previous_headings":"Environmental Perturbation","what":"Set Design","title":"QC: Replicate Agreement","text":"","code":"setBaseConcatTreatmentBaseCond = function(ep_set, concat_base_cond){   colData(ep_set)$concat_treatment =      relevel(colData(ep_set)$concat_treatment, ref = concat_base_cond)      colData(ep_set) = droplevels(DataFrame(colData(ep_set)))      ep_set    }  setEpDesign = function(ep_set, design){   design(ep_set) = design      ep_set }  concat_base_cond_list = list(      wt = \"YPD_noAtmosphere_30_noTreatment_noTreatmentConc_noPH_30\",   titration = \"RPMI_noAtmosphere_30_noTreatment_noTreatmentConc_noPH_30\",   perturbed = 'PBS_noAtmosphere_30_noTreatment_noTreatmentConc_noPH_0' )  ep_designs = list(   wt = formula(~libraryDate + concat_treatment),   titration = formula(~libraryDate + concat_treatment),   perturbed = formula(~libraryDate + concat_treatment + genotype1) )  ep_list_qc_passing_fltr = map2(ep_list_qc_passing_fltr,                                 concat_base_cond_list,                                 setBaseConcatTreatmentBaseCond)  ep_list_qc_passing_fltr = map2(ep_list_qc_passing_fltr,                                 ep_designs,                                 setEpDesign)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"coerce-back-to-deseqdataobjects-for-proessing","dir":"Articles","previous_headings":"Environmental Perturbation","what":"Coerce back to DeseqDataObjects for proessing","title":"QC: Replicate Agreement","text":"","code":"ep_dds_list = map(ep_list_qc_passing_fltr, coerceToDds) DDS_OUTPUT_DIR = \"/mnt/scratch/rnaseq_pipeline/experiments/epTally\"  if(WRITE_OUT){   today = format(lubridate::today(),\"%Y%m%d\")    output_dir = file.path(DDS_OUTPUT_DIR, today)    dir.create(output_dir, recursive=TRUE)      map(names(ep_dds_list), ~write_rds(ep_dds_list[[.]],                                      file.path(output_dir,                                                paste0(\"ep_\",.,\".rds\")))) }"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"copy-the-htcf-deseq-scripts-to-the-working-directory","dir":"Articles","previous_headings":"","what":"Copy the HTCF DESeq scripts to the working directory","title":"QC: Replicate Agreement","text":"scripts run DESeq parallel HTCF. items ’l need edit path lookup file (running one model), dds_input deseq_mpi.sh. keep deseq_de.R directory deseq_mpi.sh, ’ll need update path deseq_de.R script, also.","code":"if(WRITE_OUT){   htcf_deseq_scripts = c(system.file('bash',                              'htcf_parallel_deseq.sh',                              package = \"brentlabRnaSeqTools\"),                        system.file('R_executable',                                 'deseq_de.R',                                  package = \"brentlabRnaSeqTools\"))  lapply(htcf_deseq_scripts, file.copy, to = DDS_OUTPUT_DIR) }"},{"path":[]},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"load-in-the-post-deseq-data-sets","dir":"Articles","previous_headings":"After DESeq(), Calculate RLE","what":"Load in the post DESeq() data sets","title":"QC: Replicate Agreement","text":"Note: entirely depends set want look – example, sample agreement tallies EP sets","code":"DESEQ_OUTPUT_LIST = list(   ep_wt = \"/mnt/scratch/rnaseq_pipeline/experiments/epTally/20220201/ep_wt_20220201_output.rds\",   ep_titration = \"/mnt/scratch/rnaseq_pipeline/experiments/epTally/20220201/ep_titration_20220201_output.rds\",   ep_perturbed = \"/mnt/scratch/rnaseq_pipeline/experiments/epTally/20220201/ep_perturbed_20220201_output.rds\" )"},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"create-the-set","dir":"Articles","previous_headings":"Environmental Perturbation","what":"Create the set","title":"QC: Replicate Agreement","text":"","code":"# get deseq output object ep_dds_list = list(   ep_wt = readRDS(DESEQ_OUTPUT_LIST$ep_wt),   ep_titr = readRDS(DESEQ_OUTPUT_LIST$ep_titration),   ep_pert = readRDS(DESEQ_OUTPUT_LIST$ep_perturbed) )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"add-a-column-describing-replicate-groups-if-necessary","dir":"Articles","previous_headings":"","what":"add a column describing replicate groups if necessary","title":"QC: Replicate Agreement","text":"","code":"ep_dds_list$ep_pert$rep_col =    paste(ep_dds_list$ep_pert$genotype1,          ep_dds_list$ep_pert$concat_treatment, sep = \"_\")"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"calculate-rle","dir":"Articles","previous_headings":"add a column describing replicate groups if necessary","what":"calculate RLE","title":"QC: Replicate Agreement","text":"","code":"ep_rle_list = list(   ep_wt = removeLibdateByReplicate(ep_dds_list$ep_wt, \"concat_treatment\"),   ep_titr = removeLibdateByReplicate(ep_dds_list$ep_titr, \"concat_treatment\"),   ep_pert = removeLibdateByReplicate(ep_dds_list$ep_pert, \"rep_col\") )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/QC_Sample_Agreement_Objects.html","id":"update-the-database","dir":"Articles","previous_headings":"add a column describing replicate groups if necessary","what":"Update the database","title":"QC: Replicate Agreement","text":"","code":"if(UPDATE_DB){   updateRleTable = function(set_name, set_rle_summary){    iqr_col = paste0(set_name, \"_iqr\")    med_dev_col = paste0(set_name, \"_median_dev\")        update_df = set_rle_summary %>%    dplyr::select(replicateAgreementNumber, rle_iqr, rle_median_deviation) %>%    dplyr::rename(!!quo_name(iqr_col) := rle_iqr,                   !!quo_name(med_dev_col) := rle_median_deviation)        res = patchTable(   database_info$kn99$urls$replicateAgreement,   Sys.getenv(\"kn99_db_token\"),   update_df,   \"replicateAgreementNumber\")    res  }    res_list = map(names(ep_rle_list), ~updateRleTable(., ep_rle_list[[.]]$without_libdate_effect$summary))  # check status ---- ## failures should only be those without enough replicates to calculate RLE extract_status = map(res_list, ~map(., ~as.numeric(.$status_code)))  extract_status[[1]][unlist(extract_status[[1]]) != 200] extract_status[[2]][unlist(extract_status[[2]]) != 200] extract_status[[3]][unlist(extract_status[[3]]) != 200] }"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/Tally.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Tally Experiment Sets","text":"purpose tallying experiment sets track development given set. meant examples – analyst consuming given data set, good idea figure tally set see close done. set (eg, Environmental Perturbation), extract code paste clean notebook, somewhat formatted html document created. can publish Rpubs, free server rendered Rmd notebooks, nice way sharing set progress well method tracking progress time, rendered results saved Rpubs server.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/Tally.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Tally Experiment Sets","text":"","code":"library(brentlabRnaSeqTools) library(rtracklayer) library(tidyverse)  # set variables   KN99_GFF_RDS = Sys.getenv(\"kn99_stranded_gff_rds\") DB_USERNAME = Sys.getenv(\"db_username\") DB_PASSWORD = Sys.getenv(\"db_password\")  # note: I mount to the cluster and output directly to it DDS_OUTPUT_DIR = \".\"  # controls whether dds objects are written WRITE_OUT = FALSE"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/Tally.html","id":"pull-the-database-as-a-brentlabrnaseqset-object","dir":"Articles","previous_headings":"","what":"pull the database as a brentlabRnaSeqSet object","title":"Tally Experiment Sets","text":"Note: really need metadata task. use getMetadata.","code":"blrs = brentlabRnaSeqSetFromDatabase('kn99',DB_USERNAME, DB_PASSWORD)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/Tally.html","id":"add-gene-level-data-optional","dir":"Articles","previous_headings":"","what":"Add gene level data (optional)","title":"Tally Experiment Sets","text":"adds data regarding locus GRange object gene data slot brentlabRnaSeqSet object. Useful going use Bioconductor packages.","code":"kn99_gff = readRDS(KN99_GFF_RDS)  kn99_genes = kn99_gff[kn99_gff$ID %in% rownames(blrs)]  rowRanges(blrs) = kn99_genes[order(match(kn99_genes$ID,rownames(blrs)))]  rownames(blrs) = rowData(blrs)$ID"},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/Tally.html","id":"create-sets","dir":"Articles","previous_headings":"Environmental Perturbation","what":"Create Sets","title":"Tally Experiment Sets","text":"","code":"ep_list = list(   wt = createExperimentSet(blrs, 'envPert_epWT'),   titr = createExperimentSet(blrs, 'envPert_titrationWT'),   pert = createExperimentSet(blrs, 'envPert_perturbed') )  # NOTE!! AS OF 20220201 CNAG_03894 forms a linear depdendence with both  # concat treatment and libraryDate columns. it is being removed here to solve # that issue  ep_list$pert = ep_list$pert[,ep_list$pert$genotype1 != \"CNAG_03894\"]   ep_list_qc_passing = map(ep_list,qaFilter)  ep_list_qc_passing_with_iqr = map(names(ep_list),                           ~qaFilter(ep_list[[.]],1,paste0(\"ep_\",., \"_iqr\"))) names(ep_list_qc_passing_with_iqr) = names(ep_list) condition_lists = list(   wt = alist(medium,              atmosphere,              temperature,               timePoint,               treatment,               treatmentConc,               pH),   titr = alist(medium,                atmosphere,                temperature,                 timePoint,                 treatment,                 treatmentConc,                 pH),   pert = alist(genotype1,                medium,                atmosphere,                temperature,                 timePoint,                 treatment,                 treatmentConc,                 pH))  ep_tally_list = map2(names(ep_list), condition_lists,                       ~createEPTally(ep_list[[.x]],                                      ep_list_qc_passing[[.x]],                                      ep_list_qc_passing_with_iqr[[.x]],                                     .y)) names(ep_tally_list) = names(ep_list)   names(ep_list_qc_passing_with_iqr) = names(ep_list)  # write_csv(env_pert_tally,  #           '../../../datafreeze_202111/data/env_pert_tally_20211122.csv') #  # # add those samples with less than 2 replicates # iqr_fltr_rle_summary_mod = removed_effect_rle_summary %>%  #   filter(INTERQUARTILE_RANGE<iqr_threshold | is.na(INTERQUARTILE_RANGE)) #  # write_csv(iqr_fltr_rle_summary_mod,  #           '../../../datafreeze_202111/data/iqr_fltr_rle_summary_20211122.csv')"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/Tally.html","id":"ep_wt-tallies","dir":"Articles","previous_headings":"Environmental Perturbation > Create Sets","what":"ep_wt tallies","title":"Tally Experiment Sets","text":"","code":"tally_type_list = c('unfiltered_tally',                     'qc1_passing_tally',                     'iqr_filter_qc1_passing_tally')  ep_tally = map(ep_tally_list, ~map(tally_type_list, reshapeEnvPertTallies, .))  ep_tally = map(ep_tally, setNames, tally_type_list)"},{"path":[]},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/Tally.html","id":"column-3","dir":"Articles","previous_headings":"RLE results","what":"column 3","title":"Tally Experiment Sets","text":"","code":"# note that this function requires that ep_list and ep_list_qc_passing_with_iqr # be in the namespace already (see the setup section) # TODO: save the norm count rle from the sample agreement step for this function cumDistIqr = function(set_name){   plot(ggplot() +         stat_ecdf(data = norm_count_rle),                   aes(!!rlang::sym(paste0(\"ep_\",set_name, \"_iqr\"))),                   color = 'orange') +         stat_ecdf(data = extractColData(ep_list_qc_passing_with_iqr[[set_name]]),                   aes(!!rlang::sym(paste0(\"ep_\", set_name, \"_iqr\"))),                   color = \"blue\") +         ggtitle(\"orange = normalized counts; blue = libdate_model_removed_libdate\")) +   scale_x_continuous(limits = c(0,1), breaks = seq(0,1,.05))+   scale_y_continuous(limits = c(0,1), breaks = seq(0,1,.05)) }"},{"path":[]},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/Tally.html","id":"unfiltered-tallies","dir":"Articles","previous_headings":"Environmental Perturbation – WT > Column","what":"unfiltered tallies","title":"Tally Experiment Sets","text":"","code":"ep_tally$wt$unfiltered_tally %>%   DT::datatable(     options = list(     pageLength=50,      scrollX='400px',      fixedColumns = list(leftColumns = 2),     autoWidth = TRUE) )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/Tally.html","id":"qc1-passing","dir":"Articles","previous_headings":"Environmental Perturbation – WT > Column","what":"qc1 passing","title":"Tally Experiment Sets","text":"","code":"ep_tally$wt$qc1_passing_tally %>%   DT::datatable(     options = list(     pageLength=50,      scrollX='400px',      fixedColumns = list(leftColumns = 2),     autoWidth = TRUE) )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/Tally.html","id":"iqr-filtered","dir":"Articles","previous_headings":"Environmental Perturbation – WT > Column","what":"iqr filtered","title":"Tally Experiment Sets","text":"","code":"ep_tally$wt$iqr_filter_qc1_passing_tally %>%   DT::datatable(     options = list(     pageLength=50,      scrollX='400px',      fixedColumns = list(leftColumns = 2),     autoWidth = TRUE) )"},{"path":[]},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/Tally.html","id":"unfiltered-tallies-1","dir":"Articles","previous_headings":"Environmental Perturbation – Perturbed > Column","what":"unfiltered tallies","title":"Tally Experiment Sets","text":"","code":"ep_tally$pert$unfiltered_tally %>%   DT::datatable(     options = list(     pageLength=50,      scrollX='400px',      fixedColumns = list(leftColumns = 2),     autoWidth = TRUE) )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/Tally.html","id":"qc1-passing-1","dir":"Articles","previous_headings":"Environmental Perturbation – Perturbed > Column","what":"qc1 passing","title":"Tally Experiment Sets","text":"","code":"ep_tally$pert$qc1_passing_tally %>%   DT::datatable(     options = list(     pageLength=50,      scrollX='400px',      fixedColumns = list(leftColumns = 2),     autoWidth = TRUE) )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/Tally.html","id":"iqr-filtered-1","dir":"Articles","previous_headings":"Environmental Perturbation – Perturbed > Column","what":"iqr filtered","title":"Tally Experiment Sets","text":"","code":"ep_tally$pert$iqr_filter_qc1_passing_tally  %>%   DT::datatable(     options = list(     pageLength=50,      scrollX='400px',      fixedColumns = list(leftColumns = 2),     autoWidth = TRUE) )"},{"path":[]},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/Tally.html","id":"unfiltered-tallies-2","dir":"Articles","previous_headings":"Titration Tallies – WT > Column","what":"unfiltered tallies","title":"Tally Experiment Sets","text":"","code":"ep_tally$titr$unfiltered_tally %>%   DT::datatable(     options = list(     pageLength=50,      scrollX='400px',      fixedColumns = list(leftColumns = 2),     autoWidth = TRUE) )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/Tally.html","id":"qc1-passing-2","dir":"Articles","previous_headings":"Titration Tallies – WT > Column","what":"qc1 passing","title":"Tally Experiment Sets","text":"","code":"ep_tally$titr$qc1_passing_tally %>%   DT::datatable(     options = list(     pageLength=50,      scrollX='400px',      fixedColumns = list(leftColumns = 2),     autoWidth = TRUE) )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/Tally.html","id":"iqr-filter","dir":"Articles","previous_headings":"Titration Tallies – WT > Column","what":"iqr filter","title":"Tally Experiment Sets","text":"","code":"ep_tally$titr$iqr_filter_qc1_passing_tally %>%   DT::datatable(     options = list(     pageLength=50,      scrollX='400px',      fixedColumns = list(leftColumns = 2),     autoWidth = TRUE) )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/brentlabRnaSeqTools.html","id":"requirements","dir":"Articles","previous_headings":"","what":"Requirements","title":"Setting Up Your R Environment","text":"date R (whatever current version – check CRAN) date Rstudio","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/brentlabRnaSeqTools.html","id":"install-the-following","dir":"Articles","previous_headings":"","what":"Install the following","title":"Setting Up Your R Environment","text":"possible wil install errors come installation two pages. computational/analyst side things, good opportunity read error messages figure install – packages may c maybe fortran dependencies need install onto computer. Googling error helps, frequently R say, “need gcc compiler” something like . one computational/analyst people, ask help errors installation two packages.","code":"cran_pkgs = c('tidyverse', 'devtools')  # note: increase/decrease the number of CPUs. Any machine should be able to  # handle at least 5. You can probably bump this up to 10 without checking # anything install.packages(cran_pkgs, Ncpus = 5)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/brentlabRnaSeqTools.html","id":"install-the-brentlabrnaseqtools","dir":"Articles","previous_headings":"","what":"Install the brentlabRnaSeqTools","title":"Setting Up Your R Environment","text":"‘passing’ badge github README, successfully built date linux, mac windows OS. also work . , doesn’t, copy error make issue report. Please also include output Sys.info() issue report.","code":"# as above, you can increase Ncpus remotes::install.packages(\"BrentLab/brentlabRnaSeqTools\", Ncpus = 5)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/brentlabRnaSeqTools.html","id":"set-up-some-environmental-variables","dir":"Articles","previous_headings":"","what":"Set up some environmental variables","title":"Setting Up Your R Environment","text":"Environmental variables variables read R loaded session launch R. can set either ‘user’ level variables, loaded R session launched current user, /can set project level environmental variables, set launch project (see Using Rstudio Projects ). convenient use, particularly good avoiding embarrassing leaks login credentials onto github.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/brentlabRnaSeqTools.html","id":"user-level-environmental-variables","dir":"Articles","previous_headings":"Set up some environmental variables","what":"User level environmental variables","title":"Setting Up Your R Environment","text":"open Rstudio file opened, enter variables ’d like restart R session see can access variables like : put correct username/password environment file, can access database like : Since user level environment file stored ~/.Renviron, danger pushing credentials git directory tracking git/github.","code":"usethis::edit_r_environ('user') db_username = \"some_username\" db_password = \"some_password\" Sys.getenv(\"db_username\") # output will be: #> \"some_password\" library(brentlabRnaSeqTools)  meta = getMetadata(   database_info$kn99$db_host,   database_info$kn99$db_name,   Sys.getenv(\"db_username\"),   Sys.getenv(\"db_password\"))"},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/brentlabRnaSeqTools.html","id":"set-your-working-directory","dir":"Articles","previous_headings":"Using an Rstudio project","what":"set your working directory","title":"Setting Up Your R Environment","text":"already directory store projects work , create one. suggest direcory called projects $HOME","code":"project_dir = \"~/projects\" if(!dir.exists(project_dir)){   dir.create(project_dir) } setwd(project_dir)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/brentlabRnaSeqTools.html","id":"create-a-new-rstudio-project","dir":"Articles","previous_headings":"Using an Rstudio project","what":"Create a new Rstudio project","title":"Setting Up Your R Environment","text":"project subset infrastructure R software package. can use virtual environment, .Renviron files environmental variables, etc. tool reproducibility","code":"# if this is for the nineyMinuteInduction data, for example, you might call  # this project \"ninetyMinInduction\". project_name = \"my_new_project\"  usethis::create_project(project_name)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/brentlabRnaSeqTools.html","id":"using-the-project-directory","dir":"Articles","previous_headings":"Using an Rstudio project","what":"Using the project directory","title":"Setting Up Your R Environment","text":"new Rstudio session launch new project directory. Now, whenever launch project, environment variables .Renviron loaded. using virtual environment (good idea reproducibility. Use renv), virtual environment automatically launched, also. /R directory R scripts. make notebooks directory, just put notebook project parent directory, example. See project directory example","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/brentlabRnaSeqTools.html","id":"using-project-level-environmental-variables-in-an-active-r-project","dir":"Articles","previous_headings":"Using an Rstudio project","what":"Using project level environmental variables in an active R project","title":"Setting Up Your R Environment","text":"Just user level environmental variables, can set environmental variables particular project. read addition user level variables, overwrite two named thing. first thing make sure project level .Renviron .gitignore don’t accidently push login credentials .gitignore file, add .Renviron. Next, open project level .Renviron edit . Remember re-launch R session editing .Renviron access environmental variables.","code":"# you can use this, or just click on the .gitignore file in the project usethis::edit_git_ignore('project') usethis::edit_r_environ(\"project\")"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/brentlabRnaSeqTools.html","id":"using-data-from-the-lts-archive","dir":"Articles","previous_headings":"","what":"Using data from the lts archive","title":"Setting Up Your R Environment","text":"","code":"library(brentlabRnaSeqTools) library(tidyverse)  # mount the cluster, or download the 20220208 kn99 db archive # paths will need to be updated for your machine. These are examples # of what it would look like if you mount. archive_prefix = '/mnt/lts/sequence_data/rnaseq_data/kn99_database_archive' coldata_df = read_csv(file.path(archive_prefix, \"20220208/combined_df_20220208.csv\")) count_df = read_csv(file.path(archive_prefix, \"20220208/counts.csv\"))  coldata_df_fltr = coldata_df %>%   filter(purpose == \"fullRNASeq\",          !is.na(fastqFileName))  count_df_fltr = count_df[, colnames(count_df) %in%                             coldata_df_fltr$fastqFileName]  coldata_df_fltr = filter(coldata_df_fltr,                           fastqFileName %in%                             colnames(count_df_fltr))  # make sure the order of the count cols matches order of the metadata rows count_df_fltr = count_df_fltr[order(match(colnames(count_df_fltr),                                             coldata_df_fltr$fastqFileName))]  # if this checks false, stop and figure out why. useful functions would be  # setdiff(). Read the ?setdiff docs -- it is asymetric. stopifnot(identical(colnames(count_df_fltr),                      coldata_df_fltr$fastqFileName))  dds = DESeq2::DESeqDataSetFromMatrix(countData = counts_fltr,                                      colData = df_fltr,                                       design = ~1)  blrs = brentlabRnaSeqSet(dds = dds)  # everything should work as usual from here"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"brentlabrnaseqset","dir":"Articles","previous_headings":"","what":"BrentlabRnaSeqSet","title":"Environmental Perturbation Analysis Data Creation","text":"BrentlabRnaSeqSet child DESeqDataSet, child SummarizedExperiment. Therefore, brentlabRnaSeqSet DESeq functionality – eg, DESeq size factor normalization, DESeq() function – well SummarizedExperiment methods, ‘custom’ methods suited purposes. easily extensible – computationally minded users, good idea learn use object oriented programming tools. many cases make code less error prone, easier test, reproducible, easier maintain long term.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Environmental Perturbation Analysis Data Creation","text":"","code":"library(brentlabRnaSeqTools) library(rtracklayer) library(tidyverse)  # set variables   KN99_GFF_RDS = Sys.getenv(\"kn99_stranded_gff_rds\") DB_USERNAME = Sys.getenv(\"db_username\") DB_PASSWORD = Sys.getenv(\"db_password\")  # note: I mount to the cluster and output directly to it DDS_OUTPUT_DIR = \".\"  # controls whether dds objects are written WRITE_OUT = FALSE"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"pull-the-database-as-a-brentlabrnaseqset-object","dir":"Articles","previous_headings":"","what":"pull the database as a brentlabRnaSeqSet object","title":"Environmental Perturbation Analysis Data Creation","text":"","code":"blrs = brentlabRnaSeqSetFromDatabase('kn99',DB_USERNAME, DB_PASSWORD)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"add-gene-level-data-optional","dir":"Articles","previous_headings":"","what":"Add gene level data (optional)","title":"Environmental Perturbation Analysis Data Creation","text":"adds data regarding locus GRange object gene data slot brentlabRnaSeqSet object. Useful going use Bioconductor packages.","code":"kn99_gff = readRDS(KN99_GFF_RDS)  kn99_genes = kn99_gff[kn99_gff$ID %in% rownames(blrs)]  rowRanges(blrs) = kn99_genes[order(match(kn99_genes$ID,rownames(blrs)))]  rownames(blrs) = rowData(blrs)$ID"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"create-sets","dir":"Articles","previous_headings":"","what":"Create Sets","title":"Environmental Perturbation Analysis Data Creation","text":"experiment set want already created, issue ‘issue report’, describe EXACT filter want use create set. goes set depends describe filter, spend time database figure .","code":"ep_list = list(   wt = createExperimentSet(blrs, 'envPert_epWT'),   titr = createExperimentSet(blrs, 'envPert_titrationWT'),   pert = createExperimentSet(blrs, 'envPert_perturbed') )  # NOTE!! AS OF 20220201 CNAG_03894 forms a linear depdendence with both  # concat treatment and libraryDate columns. it is being removed here to solve # that issue  ep_list$pert = ep_list$pert[,ep_list$pert$genotype1 != \"CNAG_03894\"]"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"quality-filter","dir":"Articles","previous_headings":"","what":"Quality Filter","title":"Environmental Perturbation Analysis Data Creation","text":"","code":"ep_list_qc_passing = map(names(ep_list),                           ~qaFilter(ep_list[[.]],1,paste0(\"ep_\",., \"_iqr\")))"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"expression-filter","dir":"Articles","previous_headings":"Quality Filter","what":"Expression Filter","title":"Environmental Perturbation Analysis Data Creation","text":"","code":"# How this is done is up to you, and obviously affects what genes are left in. # Below is an example. You need to think about the thresholds and filter method  # that suits your purpose best.  expr_fltr_list = map(ep_list, ~rowSums(edgeR::cpm(counts(.))>4) >= 4)  ep_list_qc_passing_fltr = map2(ep_list_qc_passing, expr_fltr_list, ~.x[.y,])"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"set-design","dir":"Articles","previous_headings":"Quality Filter","what":"Set Design","title":"Environmental Perturbation Analysis Data Creation","text":"","code":"setBaseConcatTreatmentBaseCond = function(ep_set, concat_base_cond){   colData(ep_set)$concat_treatment =      relevel(colData(ep_set)$concat_treatment, ref = concat_base_cond)      colData(ep_set) = droplevels(DataFrame(colData(ep_set)))      ep_set    }  setEpDesign = function(ep_set, design){   design(ep_set) = design      ep_set }  concat_base_cond_list = list(      wt = \"YPD_noAtmosphere_30_noTreatment_noTreatmentConc_noPH_30\",   titr = \"RPMI_noAtmosphere_30_noTreatment_noTreatmentConc_noPH_30\",   pert = 'PBS_noAtmosphere_30_noTreatment_noTreatmentConc_noPH_0' )  ep_designs = list(   wt = formula(~libraryDate + concat_treatment),   titr = formula(~libraryDate + concat_treatment),   pert = formula(~libraryDate + concat_treatment + genotype1) )  ep_list_qc_passing_fltr = map2(ep_list_qc_passing_fltr,                                 concat_base_cond_list,                                 setBaseConcatTreatmentBaseCond)  ep_list_qc_passing_fltr = map2(ep_list_qc_passing_fltr,                                 ep_designs,                                 setEpDesign)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/envPerturbation.html","id":"coerce-back-to-deseqdataobjects-for-proessing","dir":"Articles","previous_headings":"Quality Filter","what":"Coerce back to DeseqDataObjects for proessing","title":"Environmental Perturbation Analysis Data Creation","text":"","code":"ep_dds_list = map(ep_list_qc_passing_fltr, coerceToDds) names(ep_dds_list) = names(ep_list) DDS_OUTPUT_DIR = \"/mnt/scratch/rnaseq_pipeline/experiments/epDatafreeze\"  WRITE_OUT = TRUE  if(WRITE_OUT){   today = format(lubridate::today(),\"%Y%m%d\")    output_dir = file.path(DDS_OUTPUT_DIR, today)    dir.create(output_dir, recursive=TRUE)      map(names(ep_dds_list), ~write_rds(ep_dds_list[[.]],                                      file.path(output_dir,                                                paste0(\"ep_\",.,\".rds\")))) }"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"brentlabrnaseqset","dir":"Articles","previous_headings":"","what":"BrentlabRnaSeqSet","title":"90 Minute Induction Analysis Data Creation","text":"BrentlabRnaSeqSet child DESeqDataSet, child SummarizedExperiment. Therefore, brentlabRnaSeqSet DESeq functionality – eg, DESeq size factor normalization, DESeq() function – well SummarizedExperiment methods, ‘custom’ methods suited purposes. easily extensible – computationally minded users, good idea learn use object oriented programming tools. many cases make code less error prone, easier test, reproducible, easier maintain long term.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"90 Minute Induction Analysis Data Creation","text":"experiment set want already created, issue ‘issue report’, describe EXACT filter want use create set. goes set depends describe filter, spend time database figure .","code":"library(brentlabRnaSeqTools) library(rtracklayer) library(tidyverse)  # set variables   KN99_GFF_PATH = Sys.getenv(\"kn99_gff\") DB_USERNAME = Sys.getenv(\"db_username\") DB_PASSWORD = Sys.getenv(\"db_password\")  # note: I mount to the cluster and output directly to it DDS_OUTPUT_DIR = \"/mnt/htcf_scratch/chasem/rnaseq_pipeline/experiments/90minDataFreeze\"  # controls whether dds objects are written WRITE_OUT = FALSE  # Pull the database ----  blrs = brentlabRnaSeqSetFromDatabase('kn99',DB_USERNAME, DB_PASSWORD)  # filter down to just the protein coding genes. Note that this works because the # nctr-rna annotations were all added to the end of the annotation file. blrs = blrs[1:6967,]  # Add gene level data (optional) ----  # this adds all of the data regarding each locus as a GRange object to the # gene data slot of the brentlabRnaSeqSet object. Useful if you are going to # use other Bioconductor packages.  kn99_gff = rtracklayer::import(KN99_GFF_PATH)  kn99_genes = kn99_gff[kn99_gff$ID %in% rownames(blrs)]  rowRanges(blrs) = kn99_genes[order(match(kn99_genes$ID,rownames(blrs)))]  rownames(blrs) = rowData(blrs)$ID"},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"grant-set-singles","dir":"Articles","previous_headings":"90 minute induction","what":"2016 Grant set, singles","title":"90 Minute Induction Analysis Data Creation","text":"","code":"blrs_90min = createExperimentSet(blrs, 'ninetyMin_2016Grant')  # Quality Filter ----  blrs_90min_qc_passing = qaFilter(blrs_90min,                                   rle_iqr_threshold = .6125,                                   iqr_colname = \"ninetyMin_iqr\")"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"set-perturbed-loci-to-zero","dir":"Articles","previous_headings":"","what":"Set perturbed loci to zero","title":"90 Minute Induction Analysis Data Creation","text":"","code":"blrs_90min_qc_passing = setPerturbedLociToZero(blrs_90min_qc_passing)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"expression-filtering","dir":"Articles","previous_headings":"","what":"Expression filtering","title":"90 Minute Induction Analysis Data Creation","text":"Filter low expression genes (anything else don’t want analysis set). , analyst. might use method proposed paper , among others, Wolfgang Huber, implemented bioconductor package geneFilter (well DESeq, default), filter based number samples greater threshold expression, shown .","code":"# How this is done is up to you, and obviously affects what genes are left in. # Below is an example. You need to think about the thresholds and filter method  # that suits your purpose best.  # mid_expression_filter <- rowSums(edgeR::cpm(counts(blrs_90min_qc_passing))>4) >= 4  high_disp_fltr = rownames(blrs_90min_qc_passing) %in% passing_genes_all$gene_id  blrs_90min_qc_passing = blrs_90min_qc_passing[high_disp_fltr,]"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"split-the-replicate-groups","dir":"Articles","previous_headings":"","what":"Split the replicate groups","title":"90 Minute Induction Analysis Data Creation","text":"","code":"# note, qaFilter returns those samples with less than 3 replicates, which have NA # in the RLE stats. Filter those out, also  blrs_90min_qc_passing =   blrs_90min_qc_passing[,!is.na(colData(blrs_90min_qc_passing)$ninetyMin_iqr)]  protocol_tallies = replicateByProtocolTally(blrs_90min_qc_passing)  # protocol_tallies$replicates_with_less_than_four_in_both_old_or_new. All of the # genotypes should be in the list below  protocol_fltr =   as_tibble(colData(blrs_90min_qc_passing)) %>%   filter(!(genotype1 == \"CNAG_00031\" & libraryProtocol == \"SolexaPrep\"),          !(genotype1 == \"CNAG_00871\" & libraryProtocol == \"E7420L\"),          !(genotype1 == \"CNAG_00883\" & libraryProtocol == \"E7420L\"),          !(genotype1 == \"CNAG_01626\" & libraryProtocol == \"E7420L\"),          !(genotype1 == \"CNAG_02774\" & libraryProtocol == \"E7420L\"),          !(genotype1 == \"CNAG_03018\" & libraryProtocol == \"SolexaPrep\"),          !(genotype1 == \"CNAG_03279\" & libraryProtocol == \"SolexaPrep\"),          !(genotype1 == \"CNAG_03849\" & libraryProtocol == \"E7420L\"),          !(genotype1 == \"CNAG_04353\" & libraryProtocol == \"E7420L\"),          !(genotype1 == \"CNAG_05222\" & libraryProtocol == \"SolexaPrep\")) %>%   pull(fastqFileNumber)  blrs_90min_qc_passing_protocol_fltr =   blrs_90min_qc_passing[,colData(blrs_90min_qc_passing)$fastqFileNumber %in%                           protocol_fltr]  colData(blrs_90min_qc_passing_protocol_fltr)$libraryDate =   droplevels(colData(blrs_90min_qc_passing_protocol_fltr)$libraryDate)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"re-examine-tallies-after-separating-the-protocol-groups","dir":"Articles","previous_headings":"Split the replicate groups","what":"Re-examine tallies after separating the protocol groups","title":"90 Minute Induction Analysis Data Creation","text":"","code":"# note that the column names may not reflect what is actually pasesd -- this  # function needs some updating due to hard coding colnames. Columns are in order of the # tables passed in protocol_fltr_tally =   createInductionSetTally(as_tibble(colData(blrs_90min)),                           as_tibble(colData(blrs_90min_qc_passing)),                           as_tibble(colData(blrs_90min_qc_passing_protocol_fltr)),                           grant_df)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"split","dir":"Articles","previous_headings":"Split the replicate groups","what":"Split","title":"90 Minute Induction Analysis Data Creation","text":"","code":"blrs_90min_qc_passing_protocol_fltr_split =   splitProtocolGroups(blrs_90min_qc_passing_protocol_fltr)  # libraryprotocol date date have their levels dropped. genotype1 still needs it # this needs to be handled internally somehow  blrs_90min_qc_passing_protocol_fltr_split$SolexaPrep$genotype1 =    droplevels(blrs_90min_qc_passing_protocol_fltr_split$SolexaPrep$genotype1)  blrs_90min_qc_passing_protocol_fltr_split$E7420L$genotype1 =    droplevels(blrs_90min_qc_passing_protocol_fltr_split$E7420L$genotype1)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"examine-replicate-tallies-by-protocol-group","dir":"Articles","previous_headings":"","what":"Examine replicate tallies by protocol group","title":"90 Minute Induction Analysis Data Creation","text":"","code":"# filter out those samples with less than 3 replicates in either libraryDate or # genotype1  # helper function to create model matricies by protocol createFullSetModelMatricies = function(full_set_split){    full_set_mm_list = list(     E7420L = model.matrix(~libraryDate+genotype1,                           as_tibble(colData(full_set_split$E7420L))),     SolexaPrep = model.matrix(~libraryDate+genotype1,                               as_tibble(colData(full_set_split$SolexaPrep))))    full_set_mm_list }  # return those replicate sets which have less than 2 replicates lowReplicateParams = function(model_matrix){    mm_summary_df = tibble(model_params = colnames(model_matrix),                          replicate_tally=colSums(model_matrix))    low_rep_parameters = mm_summary_df %>%     filter(replicate_tally < 2) %>%     pull(model_params)    low_rep_parameters = str_remove(low_rep_parameters, \"libraryDate\")   low_rep_parameters = str_remove(low_rep_parameters, \"genotype1\")    return(low_rep_parameters) }  # create model matricies from the blrs_90min_qc_passing_protocol_fltr_split full_set_mm_list =   createFullSetModelMatricies(blrs_90min_qc_passing_protocol_fltr_split)  # find low rep parameters low_rep_parameters = lapply(full_set_mm_list ,lowReplicateParams)  # all dates, no genotypes low_rep_parameters = lapply(low_rep_parameters, as.factor)  # create filters for each protocol set e7420l_fltr =   !colData(blrs_90min_qc_passing_protocol_fltr_split$E7420L)$libraryDate %in%     low_rep_parameters$E7420L  solexaprep_fltr =   !colData(blrs_90min_qc_passing_protocol_fltr_split$SolexaPrep)$libraryDate %in%     low_rep_parameters$SolexaPrep  # create the full set list fltr_full_set_90min = list(   E7420L = blrs_90min_qc_passing_protocol_fltr_split$E7420L[, e7420l_fltr],   SolexaPrep = blrs_90min_qc_passing_protocol_fltr_split$SolexaPrep[, solexaprep_fltr] )  # drop the factor levels which no longer exist from the filtered  libraryDate column colData(fltr_full_set_90min$E7420L)$libraryDate =   droplevels(colData(fltr_full_set_90min$E7420L)$libraryDate)  colData(fltr_full_set_90min$SolexaPrep)$libraryDate =   droplevels(colData(fltr_full_set_90min$SolexaPrep)$libraryDate)  # no more low rep sets left fltr_full_set_mm = createFullSetModelMatricies(fltr_full_set_90min)  low_rep_parameters_2 = lapply(fltr_full_set_mm, lowReplicateParams)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"recheck-tallies-again","dir":"Articles","previous_headings":"Examine replicate tallies by protocol group","what":"Recheck tallies again","title":"90 Minute Induction Analysis Data Creation","text":"","code":"protocol_fltr_tally =   createInductionSetTally(as_tibble(colData(blrs_90min)),                           as_tibble(colData(blrs_90min_qc_passing)),                           rbind(as_tibble(colData(fltr_full_set_90min$E7420L)),                                 as_tibble(colData(fltr_full_set_90min$SolexaPrep))),                           grant_df)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"create-hold-out-set","dir":"Articles","previous_headings":"","what":"Create hold out set","title":"90 Minute Induction Analysis Data Creation","text":"","code":"min_set_size = 1  hold_out_set = list(   SolexaPrep = createTestTrainSet(fltr_full_set_90min$SolexaPrep, min_set_size),   E7420L = createTestTrainSet(fltr_full_set_90min$E7420L, min_set_size) )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"set-the-experiment-designs","dir":"Articles","previous_headings":"","what":"Set the experiment designs","title":"90 Minute Induction Analysis Data Creation","text":"","code":"setNinetyMinDesign = function(obj){   obj$genotype1 = as.factor(obj$genotype1)   relevel(obj$genotype1, ref = \"CNAG_00000\")    obj$libraryDate = as.factor(obj$libraryDate)   relevel(obj$libraryDate, ref = min(as.character(obj$libraryDate)))    design(obj) = formula(~libraryDate + genotype1)      obj }  fltr_full_set_90min = map(fltr_full_set_90min, setNinetyMinDesign)  hold_out_set$SolexaPrep$train = setNinetyMinDesign(hold_out_set$SolexaPrep$train) hold_out_set$E7420L$train = setNinetyMinDesign(hold_out_set$E7420L$train)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"convert-everything-back-to-deseqdataobjects-for-the-time-being","dir":"Articles","previous_headings":"","what":"convert everything back to DESeqDataObjects for the time being","title":"90 Minute Induction Analysis Data Creation","text":"","code":"hold_out_set$SolexaPrep = map(hold_out_set$SolexaPrep, coerceToDds) hold_out_set$E7420L = map(hold_out_set$E7420L, coerceToDds)  fltr_full_set_90min = map(fltr_full_set_90min, coerceToDds)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"combine-protocol-groups","dir":"Articles","previous_headings":"","what":"combine protocol groups","title":"90 Minute Induction Analysis Data Creation","text":"","code":"refactorDesign = function(dds){    dds$libraryProtocol =     dds$libraryProtocol %>%   as.character() %>%   as.factor() %>%   droplevels()  dds$libraryDate =     dds$libraryDate %>%   as.Date() %>%   as.factor() %>%   droplevels()  dds$genotype1 =     dds$genotype1 %>%   as.character() %>%   as.factor() %>%   droplevels()  mm = model.matrix(~libraryProtocol + libraryDate + genotype1,                    as_tibble(colData(dds)))  min_date = colData(dds) %>%   as_tibble() %>%   filter(libraryProtocol == \"E7420L\") %>%   pull(libraryDate) %>%   as.Date() %>%   min()  mm_redux = mm[,-which(colnames(mm) == paste0(\"libraryDate\", min_date)), drop=FALSE]  design(dds) = mm_redux  dds }  full_set_90min_both_protocols = cbind(fltr_full_set_90min$SolexaPrep,                                       fltr_full_set_90min$E7420L)  sizeFactors(full_set_90min_both_protocols) =    c(estimateSizeFactors(fltr_full_set_90min$SolexaPrep)$sizeFactor,      estimateSizeFactors(fltr_full_set_90min$E7420L)$sizeFactor)  full_set_90min_both_protocols = refactorDesign(full_set_90min_both_protocols)  train_set_90min_both_protocols = cbind(hold_out_set$SolexaPrep$train,                                        hold_out_set$E7420L$train)  sizeFactors(train_set_90min_both_protocols) =    c(estimateSizeFactors(hold_out_set$SolexaPrep$train)$sizeFactor,      estimateSizeFactors(hold_out_set$E7420L$train)$sizeFactor)  train_set_90min_both_protocols = refactorDesign(train_set_90min_both_protocols)  test_data = list(   SolexaPrep = hold_out_set$SolexaPrep$test,   E7420L = hold_out_set$E7420L$test )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"write-out","dir":"Articles","previous_headings":"","what":"Write out","title":"90 Minute Induction Analysis Data Creation","text":"","code":"if(WRITE_OUT){   today = format(lubridate::today(),\"%Y%m%d\")    output_dir = file.path(DDS_OUTPUT_DIR, today)    dir.create(output_dir, recursive=TRUE)    # note: this is probably better done with a function and map() as the list gets   #       longer   write_rds(fltr_full_set_90min$E7420L,             file.path(output_dir,\"full_set_new_protocol_input.dds\"))    write_rds(fltr_full_set_90min$SolexaPrep,             file.path(output_dir, \"full_set_old_protocol_input.dds\"))    write_rds(test_data,             file.path(output_dir, \"test_data.rds\"))    write_rds(hold_out_set$E7420L$train,             file.path(output_dir, \"train_set_new_protocol_input.rds\"))    write_rds(hold_out_set$SolexaPrep$train,             file.path(output_dir, \"train_set_old_protocol_input.rds\"))        write_rds(full_set_90min_both_protocols,             file.path(output_dir, \"full_set_both_protocol_input.rds\"))    write_rds(train_set_90min_both_protocols,             file.path(output_dir, \"train_set_both_protocol_input.rds\"))    }"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/articles/ninetyMinuteInduction_analysis.html","id":"copy-the-htcf-deseq-scripts-to-the-working-directory","dir":"Articles","previous_headings":"","what":"Copy the HTCF DESeq scripts to the working directory","title":"90 Minute Induction Analysis Data Creation","text":"scripts run DESeq parallel HTCF. items ’l need edit path lookup file (running one model), dds_input deseq_mpi.sh. keep deseq_de.R directory deseq_mpi.sh, ’ll need update path deseq_de.R script, also.","code":"if(WRITE_OUT){   htcf_deseq_scripts = c(system.file('bash',                              'htcf_parallel_deseq.sh',                              package = \"brentlabRnaSeqTools\"),                        system.file('R_executable',                                 'deseq_de.R',                                  package = \"brentlabRnaSeqTools\"))  lapply(htcf_deseq_scripts, file.copy, to = DDS_OUTPUT_DIR) }"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chase Mateusiak. Author, maintainer.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mateusiak C (2022). brentlabRnaSeqTools: Management/QC brentlab RNAseq data. R package version 0.0.0.0.","code":"@Manual{,   title = {brentlabRnaSeqTools: Management/QC for brentlab RNAseq data},   author = {Chase Mateusiak},   year = {2022},   note = {R package version 0.0.0.0}, }"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/index.html","id":"introduction","dir":"","previous_headings":"","what":"Management/QC for brentlab RNAseq data","title":"Management/QC for brentlab RNAseq data","text":"collection objects functions intended make interacting brentlab rnaseq database simpler. two target audiences: wet lab folks primarily computational analysts, computational analysts. functionality collection objects functions overlap two groups users, . functionality intended computational analysts, high level computational fluency assumed. Every function, object data loaded package documented. Use ?functionName view documentation.","code":""},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Management/QC for brentlab RNAseq data","text":"navbar, click ‘Getting Started’ general instructions use package, set environment, also pull data archive rather directly database.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/index.html","id":"reference","dir":"","previous_headings":"","what":"Reference","title":"Management/QC for brentlab RNAseq data","text":"list functions, objects, etc package. currently alphabetical order. point organize purpose.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/index.html","id":"articles","dir":"","previous_headings":"","what":"Articles","title":"Management/QC for brentlab RNAseq data","text":"collection vignettes – see list instructions , example, running raw read (fastq) processing pipeline.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/addQcColsToMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"add qc metrics to metadata — addQcColsToMeta","title":"add qc metrics to metadata — addQcColsToMeta","text":"take long form qc_df add appropriate metrics metadata 'wide' format","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/addQcColsToMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add qc metrics to metadata — addQcColsToMeta","text":"","code":"addQcColsToMeta(meta_df, qc_df)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/addQcColsToMeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add qc metrics to metadata — addQcColsToMeta","text":"meta_df metadata samples like QC. note must included pipeline_output_dirpath qc_df output function novoalignPipelineQC","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/addQcColsToMeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add qc metrics to metadata — addQcColsToMeta","text":"subset meta_df columns suitable auto/manual auditing","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/addRleSummaryStats.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate RLE by replicate groups — addRleSummaryStats","title":"calculate RLE by replicate groups — addRleSummaryStats","text":"calculate RLE replicate groups","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/addRleSummaryStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate RLE by replicate groups — addRleSummaryStats","text":"","code":"addRleSummaryStats(object)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/addRleSummaryStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate RLE by replicate groups — addRleSummaryStats","text":"object brentlabRnaSeqSet colData replicate_group","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/addRleSummaryStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate RLE by replicate groups — addRleSummaryStats","text":"list dataframes replicate group replicateS_sample_list, dimensions gene x sample. values RLE gene given sample","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/archiveDatabase.html","id":null,"dir":"Reference","previous_headings":"","what":"pull entire database (not counts) and save to output_dir for archival purposes — archiveDatabase","title":"pull entire database (not counts) and save to output_dir for archival purposes — archiveDatabase","text":"saves individual tables, including counts, combined_df","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/archiveDatabase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pull entire database (not counts) and save to output_dir for archival purposes — archiveDatabase","text":"","code":"archiveDatabase(   database_host,   database_name,   database_user,   database_password,   output_dir,   archive_counts_flag = TRUE )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/archiveDatabase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pull entire database (not counts) and save to output_dir for archival purposes — archiveDatabase","text":"database_host connecting database hosted AWS, might something like ec2-54-83-201-96.compute-1.amazonaws.com database_name name database, eg cryptococcus kn99, database might named kn99_database. Check documentation, whoever set database, get server check directly database_user user actual database, level permissions. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info database_password password database user. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info output_dir deposit subdirectory, named todays date format: 20210407, tables combined_df inside. eg mounted local directory /mnt/htcf_lts/crypto_database_archive/ --> /lts/mblab/Crypto/rnaseq_data/crypto_database_archive archive_counts_flag boolean indicating whether save counts. default TRUE","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/archiveDatabase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pull entire database (not counts) and save to output_dir for archival purposes — archiveDatabase","text":"None, writes directory called <today's date> tables combined_df .csv output_dir","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/autoAuditQcTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Audit a qc table with metrics added — autoAuditQcTable","title":"Audit a qc table with metrics added — autoAuditQcTable","text":"audits output addQcColsToMeta","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/autoAuditQcTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Audit a qc table with metrics added — autoAuditQcTable","text":"","code":"autoAuditQcTable(qc_table)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/autoAuditQcTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Audit a qc table with metrics added — autoAuditQcTable","text":"qc_table output addQcColsToMeta","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/autoAuditQcTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Audit a qc table with metrics added — autoAuditQcTable","text":"qc_table autoStatus autoStatusDecomp columns added","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"brentlabRnaSeqExperiment constructor. — brentlabRnaSeqExperiment-class","title":"brentlabRnaSeqExperiment constructor. — brentlabRnaSeqExperiment-class","text":"Extends brentlabRnaSeqSet use pre-specified experiment sets, eg Environmental Perturbation. Intended lower level use, primarily.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brentlabRnaSeqExperiment constructor. — brentlabRnaSeqExperiment-class","text":"","code":"brentlabRnaSeqExperiment(brentlabRnaSeqSet, set_name = \"\")"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"brentlabRnaSeqExperiment constructor. — brentlabRnaSeqExperiment-class","text":"brentlabRnaSeqSet brentlabRnaSeqSet set_name one 'ninetyMin_2016Grant', 'ninetyMin_2016GrantWithDoubles', 'ninetyMin_non2016grant', 'ninetyMin_all',  'envPert_epWT', 'envPert_perturbed', 'envPert_titrationWT'","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"brentlabRnaSeqExperiment constructor. — brentlabRnaSeqExperiment-class","text":"brentlabRnaSeqExperiment object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqSet.html","id":null,"dir":"Reference","previous_headings":"","what":"brentlabRnaSeqSet object and constructor — brentlabRnaSeqSet-class","title":"brentlabRnaSeqSet object and constructor — brentlabRnaSeqSet-class","text":"container expression data brentlab rnaseq databases","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brentlabRnaSeqSet object and constructor — brentlabRnaSeqSet-class","text":"","code":"brentlabRnaSeqSet(dds = NULL)  brentlabRnaSeqSetFromDatabase(   organism,   username,   password,   full_rnaseq_only = TRUE )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"brentlabRnaSeqSet object and constructor — brentlabRnaSeqSet-class","text":"dds deseq data object. Passing null object instantiate DESeq2::makeExampleDESeqDataSet organism currently, kn99 username db username password db password full_rnaseq_only filter spikeins returning. Default TRUE","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"brentlabRnaSeqSet object and constructor — brentlabRnaSeqSet-class","text":"brentlabRnaSeqSet given organism","code":""},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqSetTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"brentlabRnaSeqSetTransform object and constructor. This extends DESeqTransform. — brentlabRnaSeqSetTransform-class","title":"brentlabRnaSeqSetTransform object and constructor. This extends DESeqTransform. — brentlabRnaSeqSetTransform-class","text":"Extends DESeqTransform use rleTransform used rleTransform","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqSetTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brentlabRnaSeqSetTransform object and constructor. This extends DESeqTransform. — brentlabRnaSeqSetTransform-class","text":"","code":"brentlabRnaSeqSetTransform(SummarizedExperiment)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqSetTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"brentlabRnaSeqSetTransform object and constructor. This extends DESeqTransform. — brentlabRnaSeqSetTransform-class","text":"SummarizedExperiment RangedSummarizedExperiment","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/brentlabRnaSeqSetTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"brentlabRnaSeqSetTransform object and constructor. This extends DESeqTransform. — brentlabRnaSeqSetTransform-class","text":"brentlabRnaSeqSetTransform object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/calculateGeneWiseMedians.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate medians across rows of dataframe — calculateGeneWiseMedians","title":"calculate medians across rows of dataframe — calculateGeneWiseMedians","text":"calculate medians across rows dataframe","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/calculateGeneWiseMedians.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate medians across rows of dataframe — calculateGeneWiseMedians","text":"","code":"calculateGeneWiseMedians(count_df)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/calculateGeneWiseMedians.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate medians across rows of dataframe — calculateGeneWiseMedians","text":"count_df numeric dataframe, context typically count (raw log2) df","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/calculateGeneWiseMedians.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate medians across rows of dataframe — calculateGeneWiseMedians","text":"vector row-wise medians (length == nrow input df)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/calculateRLE.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate RLE of a numeric dataframe — calculateRLE","title":"calculate RLE of a numeric dataframe — calculateRLE","text":"calculate RLE numeric dataframe","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/calculateRLE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate RLE of a numeric dataframe — calculateRLE","text":"","code":"calculateRLE(counts_df, log2_transformed_flag = FALSE)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/calculateRLE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate RLE of a numeric dataframe — calculateRLE","text":"counts_df gene samples dataframe raw counts logged counts (see paramter logged) log2_transformed_flag Default FALSE set true log2 transformed counts passed","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/calculateRLE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate RLE of a numeric dataframe — calculateRLE","text":"rle dataframe genes x samples. Values logged differences gene-wise medians","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/coerceToDds.html","id":null,"dir":"Reference","previous_headings":"","what":"coerce brentlabRnaSeqSet to DESeqDataSet — coerceToDds","title":"coerce brentlabRnaSeqSet to DESeqDataSet — coerceToDds","text":"coerce brentlabRnaSeqSet DESeqDataSet","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/coerceToDds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"coerce brentlabRnaSeqSet to DESeqDataSet — coerceToDds","text":"","code":"coerceToDds(x, ...)  # S4 method for brentlabRnaSeqSet coerceToDds(x)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/coerceToDds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"coerce brentlabRnaSeqSet to DESeqDataSet — coerceToDds","text":"x brentlabRnaSeqSet ... arguments","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/connectToDatabase.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to a remote postgresql database — connectToDatabase","title":"Connect to a remote postgresql database — connectToDatabase","text":"Use RPostgres package connect remote postgresql database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/connectToDatabase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to a remote postgresql database — connectToDatabase","text":"","code":"connectToDatabase(   database_host,   database_name,   database_user,   database_password )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/connectToDatabase.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Connect to a remote postgresql database — connectToDatabase","text":"https://rpostgres.r-dbi.org/","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/connectToDatabase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to a remote postgresql database — connectToDatabase","text":"database_host connecting database hosted AWS, might something like ec2-54-83-201-96.compute-1.amazonaws.com database_name name database, eg cryptococcus kn99, database might named kn99_database. Check documentation, whoever set database, get server check directly database_user user actual database, level permissions. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info database_password password database user. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/connectToDatabase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to a remote postgresql database — connectToDatabase","text":"DBI connection remote database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/connectToDatabase.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Connect to a remote postgresql database — connectToDatabase","text":"information using R environmental files, see https://support.rstudio.com/hc/en-us/articles/360047157094-Managing-R--Rprofile-Renviron-Rprofile-site-Renviron-site-rsession-conf--repos-conf","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEPTally.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the EP tally in long form — createEPTally","title":"Create the EP tally in long form — createEPTally","text":"Create EP tally long form","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEPTally.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the EP tally in long form — createEPTally","text":"","code":"createEPTally(unfltr_set, qc1_set, iqr_set, tally_conditions)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEPTally.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the EP tally in long form — createEPTally","text":"unfltr_set experimental set (blrs obj), filtered quality qc1_set experimental set, filtered qc1 metrics (iqr) iqr_set , IQR filter tally_conditions base::alist() set conditions. members list must columns metadata","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEPTally.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the EP tally in long form — createEPTally","text":"dataframe long format detailing tally EP experiment","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPertSet_perturbed.html","id":null,"dir":"Reference","previous_headings":"","what":"create Environmental Perturbation Perturbed set — createEnvPertSet_perturbed","title":"create Environmental Perturbation Perturbed set — createEnvPertSet_perturbed","text":"create Environmental Perturbation Perturbed set","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPertSet_perturbed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create Environmental Perturbation Perturbed set — createEnvPertSet_perturbed","text":"","code":"createEnvPertSet_perturbed(blrs)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPertSet_perturbed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create Environmental Perturbation Perturbed set — createEnvPertSet_perturbed","text":"blrs brentlabRnaSeqSet object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPertSet_perturbed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create Environmental Perturbation Perturbed set — createEnvPertSet_perturbed","text":"environmental pertubation brentlabRnaSeqSet","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPertSet_titrationWT.html","id":null,"dir":"Reference","previous_headings":"","what":"create Environmental Perturbation Titration (TDY451 only) set — createEnvPertSet_titrationWT","title":"create Environmental Perturbation Titration (TDY451 only) set — createEnvPertSet_titrationWT","text":"create Environmental Perturbation Titration (TDY451 ) set","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPertSet_titrationWT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create Environmental Perturbation Titration (TDY451 only) set — createEnvPertSet_titrationWT","text":"","code":"createEnvPertSet_titrationWT(blrs)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPertSet_titrationWT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create Environmental Perturbation Titration (TDY451 only) set — createEnvPertSet_titrationWT","text":"blrs brentlabRnaSeqSet object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPertSet_titrationWT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create Environmental Perturbation Titration (TDY451 only) set — createEnvPertSet_titrationWT","text":"environmental pertubation set","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPert_epWT.html","id":null,"dir":"Reference","previous_headings":"","what":"filter combined_df for environmental perturbation sample set — createEnvPert_epWT","title":"filter combined_df for environmental perturbation sample set — createEnvPert_epWT","text":"filter combined_df environmental perturbation sample set","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPert_epWT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter combined_df for environmental perturbation sample set — createEnvPert_epWT","text":"","code":"createEnvPert_epWT(blrs)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPert_epWT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter combined_df for environmental perturbation sample set — createEnvPert_epWT","text":"blrs brentlabRnaSeqSet object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createEnvPert_epWT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filter combined_df for environmental perturbation sample set — createEnvPert_epWT","text":"environmental pertubation set","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createExperimentSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a pre-defined experiment set — createExperimentSet","title":"Create a pre-defined experiment set — createExperimentSet","text":"pre-defined experiment definitions, see github repo R/ExperimentSetFunctions.R","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createExperimentSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a pre-defined experiment set — createExperimentSet","text":"","code":"createExperimentSet(x, ...)  # S4 method for brentlabRnaSeqSet createExperimentSet(x, set_name)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createExperimentSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a pre-defined experiment set — createExperimentSet","text":"x brentlabRnaSeqSet object ... arguments set_name one 'ninetyMin_2016Grant', 'ninetyMin_2016GrantWithDoubles', 'ninetyMin_non2016grant', 'ninetyMin_all',  'envPert_epWT', 'envPert_perturbed', 'envPert_titrationWT'","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createIgvBatchscript.html","id":null,"dir":"Reference","previous_headings":"","what":"create IGV viewer batch script (single range, as many tracks as you like) — createIgvBatchscript","title":"create IGV viewer batch script (single range, as many tracks as you like) — createIgvBatchscript","text":"create batch script may run igv browser. example command given examples . See extern data example one scripts looks like.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createIgvBatchscript.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create IGV viewer batch script (single range, as many tracks as you like) — createIgvBatchscript","text":"","code":"createIgvBatchscript(   bam_list,   granges,   igv_genome,   output_dir,   output_file_basename,   exit_browser = TRUE,   maxPanelHeight = 500 )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createIgvBatchscript.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create IGV viewer batch script (single range, as many tracks as you like) — createIgvBatchscript","text":"bam_list list bamfiles -- multiple files means multiple tracks granges granges describing range wish visualize -- range must one chromosome/contig igv_genome .genome file created IGV tools output_dir deposit script browser shots output_file_basename serve name browser shot running IGV, name o batchscript exit_browser Default TRUE, means batchscript written way browser take image, save , exit. Set false script may used launch interactive session. maxPanelHeight default 500. height IGV window","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createIgvBatchscript.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create IGV viewer batch script (single range, as many tracks as you like) — createIgvBatchscript","text":"None. prints batch script output dir","code":""},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createInductionSetTally.html","id":null,"dir":"Reference","previous_headings":"","what":"create 90 minute induction set tally — createInductionSetTally","title":"create 90 minute induction set tally — createInductionSetTally","text":"create 90 minute induction set tally","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createInductionSetTally.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create 90 minute induction set tally — createInductionSetTally","text":"","code":"createInductionSetTally(   induction_meta_qual,   sorted_passing_induction_meta_qual,   iqr_fltr_rle_summary,   grant_df )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createInductionSetTally.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create 90 minute induction set tally — createInductionSetTally","text":"induction_meta_qual metadata entire set, unfiltered sorted_passing_induction_meta_qual metadata (quality columns) filtered manual/auto status iqr_fltr_rle_summary sorted_passing_meta_qual filtered IQR grant_df definition 90minuteInduction set. object available brentlabRnaSeqTools package","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNfCorePipelineSampleSheet.html","id":null,"dir":"Reference","previous_headings":"","what":"create nf-co sample sheet — createNfCorePipelineSampleSheet","title":"create nf-co sample sheet — createNfCorePipelineSampleSheet","text":"create samplesheet nf-co rnaseq pipeline https://nf-co.re/rnaseq/3.2/usage#samplesheet-input","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNfCorePipelineSampleSheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create nf-co sample sheet — createNfCorePipelineSampleSheet","text":"","code":"createNfCorePipelineSampleSheet(   metadata,   sample_columns,   sequence_dir_prefix,   check_files_flag = FALSE )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNfCorePipelineSampleSheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create nf-co sample sheet — createNfCorePipelineSampleSheet","text":"metadata likely database. must include runNumber, fastqFileName, libraryProtocol, columns used create sample name (see param sample_columns) sample_columns character vector columns concat sample identifier. eg c(\"genotype1\", \"fastqFileNumber\") sequence_dir_prefix path directory sequence run directories stored. eg /mnt/htcf_lts/lts_sequence check_files_flag default FALSE. Set true check files exist","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNfCorePipelineSampleSheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create nf-co sample sheet — createNfCorePipelineSampleSheet","text":"dataframe columns correspond required nf-co rnaseq pipeline sample sheet. See https://nf-co.re/rnaseq/3.2/usage#samplesheet-input","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNfCorePipelineSampleSheet.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"create nf-co sample sheet — createNfCorePipelineSampleSheet","text":": currently hard coded set strandedness 'reverse' libraryProtocol E7420L, 'unstranded', single strand libraries (fastq2 empty string)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_2016grant.html","id":null,"dir":"Reference","previous_headings":"","what":"90minuteInduction set Definition — createNinetyMinuteInduction_2016grant","title":"90minuteInduction set Definition — createNinetyMinuteInduction_2016grant","text":"current definition 90 minute induction dataset, according 2016 grant summary (loaded environment, see head(grant_df)) -- single KO ","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_2016grant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"90minuteInduction set Definition — createNinetyMinuteInduction_2016grant","text":"","code":"createNinetyMinuteInduction_2016grant(blrs)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_2016grant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"90minuteInduction set Definition — createNinetyMinuteInduction_2016grant","text":"blrs brentlabRnaSeqSet object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_2016grant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"90minuteInduction set Definition — createNinetyMinuteInduction_2016grant","text":"set metadata -- single KO ","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_2016grantWithDoubles.html","id":null,"dir":"Reference","previous_headings":"","what":"ninetyMin set where both doubles are in the grant_df — createNinetyMinuteInduction_2016grantWithDoubles","title":"ninetyMin set where both doubles are in the grant_df — createNinetyMinuteInduction_2016grantWithDoubles","text":"ninetyMin set doubles grant_df","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_2016grantWithDoubles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ninetyMin set where both doubles are in the grant_df — createNinetyMinuteInduction_2016grantWithDoubles","text":"","code":"createNinetyMinuteInduction_2016grantWithDoubles(blrs)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_2016grantWithDoubles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ninetyMin set where both doubles are in the grant_df — createNinetyMinuteInduction_2016grantWithDoubles","text":"blrs brentlabRnaSeqSet object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_2016grantWithDoubles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ninetyMin set where both doubles are in the grant_df — createNinetyMinuteInduction_2016grantWithDoubles","text":"set metadata","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_all","title":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_all","text":"return set genotypes (including doubles) grant_df.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_all","text":"","code":"createNinetyMinuteInduction_all(blrs)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_all","text":"blrs brentlabRnaSeqSet object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_all","text":"set metadata","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_non2016grant.html","id":null,"dir":"Reference","previous_headings":"","what":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_non2016grant","title":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_non2016grant","text":"return set genotypes (including doubles) grant_df.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_non2016grant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_non2016grant","text":"","code":"createNinetyMinuteInduction_non2016grant(blrs)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_non2016grant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_non2016grant","text":"blrs brentlabRnaSeqSet object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNinetyMinuteInduction_non2016grant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Samples with genotypes not in the grant_df — createNinetyMinuteInduction_non2016grant","text":"set metadata","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNovoalignPipelineSamplesheet.html","id":null,"dir":"Reference","previous_headings":"","what":"create a sample sheet for the novoalign pipeline — createNovoalignPipelineSamplesheet","title":"create a sample sheet for the novoalign pipeline — createNovoalignPipelineSamplesheet","text":"create sample sheet novoalign pipeline","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNovoalignPipelineSamplesheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create a sample sheet for the novoalign pipeline — createNovoalignPipelineSamplesheet","text":"","code":"createNovoalignPipelineSamplesheet(meta_df, sequence_dir_prefix)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNovoalignPipelineSamplesheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create a sample sheet for the novoalign pipeline — createNovoalignPipelineSamplesheet","text":"meta_df metadata samples like QC. note must included pipeline_output_dirpath sequence_dir_prefix filepath append run_1234_samples/fastq.fq.gz eg \"/scratch/mblab/chasem/rnaseq_pipeline/scratch_sequence\"","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createNovoalignPipelineSamplesheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create a sample sheet for the novoalign pipeline — createNovoalignPipelineSamplesheet","text":"dataframe correct format novo+hsteq pipeline","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createTestTrainSet.html","id":null,"dir":"Reference","previous_headings":"","what":"create test train set — createTestTrainSet","title":"create test train set — createTestTrainSet","text":"brentlabRnaSeqExperiment objects, offers methods create train test sets","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createTestTrainSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create test train set — createTestTrainSet","text":"","code":"createTestTrainSet(x, ...)  # S4 method for brentlabRnaSeqExperiment createTestTrainSet(x, min_set_size)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createTestTrainSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create test train set — createTestTrainSet","text":"x brentlabRnaSeqExperiment object ... arguments min_set_size minimum replicate set size consider hold outs","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/createTestTrainSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create test train set — createTestTrainSet","text":"list slots train test, brentlabRnaSeqSetExperiments","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/database_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"set global variables, mostly as a hack to make the tidyverse data binding pass the R CMD Check — database_colnames","title":"set global variables, mostly as a hack to make the tidyverse data binding pass the R CMD Check — database_colnames","text":"set global variables, mostly hack make tidyverse data binding pass R CMD Check","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/database_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set global variables, mostly as a hack to make the tidyverse data binding pass the R CMD Check — database_colnames","text":"","code":"database_colnames"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/database_colnames.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"set global variables, mostly as a hack to make the tidyverse data binding pass the R CMD Check — database_colnames","text":"object class character length 118.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/database_info.html","id":null,"dir":"Reference","previous_headings":"","what":"URLS to active databases — database_info","title":"URLS to active databases — database_info","text":"list containing urls active databases. Named organism (eg 'kn99' 's288cr64')","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/database_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URLS to active databases — database_info","text":"","code":"database_info"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/database_info.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"URLS to active databases — database_info","text":"list lists, organized organism. Currently contains info KN99 S288C_R64 databases host host database server, eg ec2-18-224-181-136.us-east-2.compute.amazonaws.com db_name cryptococcus database name. something like kn99_database urls urls tables database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/database_info.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"URLS to active databases — database_info","text":"https://rnaseq-databases-documentation.readthedocs.io/en/latest/","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/decomposeStatus2Bit.html","id":null,"dir":"Reference","previous_headings":"","what":"decompose sums of powers of two to a list of the summed powers — decomposeStatus2Bit","title":"decompose sums of powers of two to a list of the summed powers — decomposeStatus2Bit","text":"eg 18 = 2 + 16 decomposes 1, 4","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/decomposeStatus2Bit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"decompose sums of powers of two to a list of the summed powers — decomposeStatus2Bit","text":"","code":"decomposeStatus2Bit(status)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/decomposeStatus2Bit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"decompose sums of powers of two to a list of the summed powers — decomposeStatus2Bit","text":"status integer represents sum powers 2","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/decomposeStatus2Bit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"decompose sums of powers of two to a list of the summed powers — decomposeStatus2Bit","text":"string powers 2 representing bit, eg 1,4","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/decomposeStatus2Bit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"decompose sums of powers of two to a list of the summed powers — decomposeStatus2Bit","text":"yiming kang https://github.com/yiming-kang/rnaseq_pipe/blob/master/tools/utils.py","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/estimateSizeFactorsByProtocol.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Size Factors within protocol groups — estimateSizeFactorsByProtocol","title":"Calculate Size Factors within protocol groups — estimateSizeFactorsByProtocol","text":"Size Factors calculated set libraryProtocol 'SolexaPrep' complement separately","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/estimateSizeFactorsByProtocol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Size Factors within protocol groups — estimateSizeFactorsByProtocol","text":"","code":"estimateSizeFactorsByProtocol(x, ...)  # S4 method for brentlabRnaSeqExperiment estimateSizeFactorsByProtocol(x)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/estimateSizeFactorsByProtocol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Size Factors within protocol groups — estimateSizeFactorsByProtocol","text":"x brentlabRnaSeqSet object ... arguments","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/estimateSizeFactorsByProtocol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Size Factors within protocol groups — estimateSizeFactorsByProtocol","text":"brentlabRnaSeqExperiment sizeFactors estimated within protocol groups (SolexaPrep SolexaPrep)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/extractColData.html","id":null,"dir":"Reference","previous_headings":"","what":"extract colData as tibble — extractColData","title":"extract colData as tibble — extractColData","text":"extract colData tibble","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/extractColData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract colData as tibble — extractColData","text":"","code":"extractColData(x, ...)  # S4 method for brentlabRnaSeqSet extractColData(x)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/extractColData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract colData as tibble — extractColData","text":"x brentlabRnaSeqSet ... arguments","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/extractColData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract colData as tibble — extractColData","text":"colData object tibble","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/extractDesignMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"extract the model.matrix using the design and colData — extractDesignMatrix","title":"extract the model.matrix using the design and colData — extractDesignMatrix","text":"extract model.matrix using design colData","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/extractDesignMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract the model.matrix using the design and colData — extractDesignMatrix","text":"","code":"extractDesignMatrix(x, ...)  # S4 method for brentlabRnaSeqSet extractDesignMatrix(x)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/extractDesignMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract the model.matrix using the design and colData — extractDesignMatrix","text":"x brentlabRnaSeqSet ... arguments","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/extractDesignMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract the model.matrix using the design and colData — extractDesignMatrix","text":"model matrix, using design coldata","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/filterWtByExperimentalLibdate_90min.html","id":null,"dir":"Reference","previous_headings":"","what":"WT filtering helper for 90minInduction sets — filterWtByExperimentalLibdate_90min","title":"WT filtering helper for 90minInduction sets — filterWtByExperimentalLibdate_90min","text":"filter WT samples libdates without perturbed samples","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/filterWtByExperimentalLibdate_90min.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WT filtering helper for 90minInduction sets — filterWtByExperimentalLibdate_90min","text":"","code":"filterWtByExperimentalLibdate_90min(blrs_90min)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/filterWtByExperimentalLibdate_90min.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WT filtering helper for 90minInduction sets — filterWtByExperimentalLibdate_90min","text":"blrs_90min brentlabRnaSeqExperiment object. function written 90minInduction sets mind.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/filterWtByExperimentalLibdate_90min.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"WT filtering helper for 90minInduction sets — filterWtByExperimentalLibdate_90min","text":"TODO: Move method select function based set_name","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/fltrLowReplicateParams.html","id":null,"dir":"Reference","previous_headings":"","what":"filter low replicate parameters from metadata — fltrLowReplicateParams","title":"filter low replicate parameters from metadata — fltrLowReplicateParams","text":"given model formula, remove samples less specified number replicates metadata","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/fltrLowReplicateParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter low replicate parameters from metadata — fltrLowReplicateParams","text":"","code":"fltrLowReplicateParams(metadata_df, design_formula, replicate_threshold = 2)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/fltrLowReplicateParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter low replicate parameters from metadata — fltrLowReplicateParams","text":"metadata_df data frame contains least model paramters interest design_formula R formula, eg ~libraryDate+treatment, parameters contained metadata_df replicate_threshold number replicates samples removed. Default 2","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/fltrLowReplicateParams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filter low replicate parameters from metadata — fltrLowReplicateParams","text":"input metadata samples replicate groups less specified thershold filtered ","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/geneGRanges.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a GenomicFeatures annotation_db and a gene_id, extract an GRanges\nobject of the cds — geneGRanges","title":"Given a GenomicFeatures annotation_db and a gene_id, extract an GRanges\nobject of the cds — geneGRanges","text":"Given GenomicFeatures annotation_db gene_id, extract GRanges object cds","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/geneGRanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a GenomicFeatures annotation_db and a gene_id, extract an GRanges\nobject of the cds — geneGRanges","text":"","code":"geneGRanges(   annote_obj_path,   gene_id,   id_col = \"ID\",   feature_col = \"type\",   feature = \"cds\" )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/geneGRanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a GenomicFeatures annotation_db and a gene_id, extract an GRanges\nobject of the cds — geneGRanges","text":"annote_obj_path path annotation file parsed rtracklayer::import gene_id ID gene db. Eg, cryptococcus CKF44_05222 id_col gene feature column. Default 'ID' feature_col feature (col 3) column annote_obj. Default 'type' feature feature select. Default 'cds'","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/geneGRanges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given a GenomicFeatures annotation_db and a gene_id, extract an GRanges\nobject of the cds — geneGRanges","text":"IRanges object given feature (eg, gene's cds features)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/geneGRanges.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Given a GenomicFeatures annotation_db and a gene_id, extract an GRanges\nobject of the cds — geneGRanges","text":"rtracklayer::import","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getGeneNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get gene names — getGeneNames","title":"Get gene names — getGeneNames","text":"Get gene names","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getGeneNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get gene names — getGeneNames","text":"","code":"getGeneNames(database_host, database_name, database_user, database_password)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getGeneNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get gene names — getGeneNames","text":"database_host connecting database hosted AWS, might something like ec2-54-83-201-96.compute-1.amazonaws.com database_name name database, eg cryptococcus kn99, database might named kn99_database. Check documentation, whoever set database, get server check directly database_user user actual database, level permissions. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info database_password password database user. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getGeneNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get gene names — getGeneNames","text":"dataframe gene_ids","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the combined metadata as a tibble from a remote database — getMetadata","title":"Get the combined metadata as a tibble from a remote database — getMetadata","text":"Join biosample, rnasample, s1sample, s2sample, library, fastqFiles qualityAssessment tables (order, left joins) return result tibble Use RPostgres package connect remote postgresql database, table joining, return joined metadata tibble. database connection closed","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the combined metadata as a tibble from a remote database — getMetadata","text":"","code":"getMetadata(database_host, database_name, database_user, database_password)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getMetadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get the combined metadata as a tibble from a remote database — getMetadata","text":"https://rpostgres.r-dbi.org/","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the combined metadata as a tibble from a remote database — getMetadata","text":"database_host connecting database hosted AWS, might something like ec2-54-83-201-96.compute-1.amazonaws.com database_name name database, eg cryptococcus kn99, database might named kn99_database. Check documentation, whoever set database, get server check directly database_user user actual database, level permissions. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info database_password password database user. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the combined metadata as a tibble from a remote database — getMetadata","text":"DBI connection remote database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getMetadata.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get the combined metadata as a tibble from a remote database — getMetadata","text":"information using R environmental files, see https://support.rstudio.com/hc/en-us/articles/360047157094-Managing-R--Rprofile-Renviron-Rprofile-site-Renviron-site-rsession-conf--repos-conf","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getRawCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get combined raw counts — getRawCounts","title":"Get combined raw counts — getRawCounts","text":"Get combined raw counts","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getRawCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get combined raw counts — getRawCounts","text":"","code":"getRawCounts(database_host, database_name, database_user, database_password)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getRawCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get combined raw counts — getRawCounts","text":"database_host connecting database hosted AWS, might something like ec2-54-83-201-96.compute-1.amazonaws.com database_name name database, eg cryptococcus kn99, database might named kn99_database. Check documentation, whoever set database, get server check directly database_user user actual database, level permissions. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info database_password password database user. need check database maintainer . suggested use .Renviron file local project (make sure completely ignored git, R, etc) store info","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getRawCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get combined raw counts — getRawCounts","text":"gene samples dataframe counts","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getRunNumberLeadingZero.html","id":null,"dir":"Reference","previous_headings":"","what":"correct run number to add leading zero where approprirate — getRunNumberLeadingZero","title":"correct run number to add leading zero where approprirate — getRunNumberLeadingZero","text":"correct run number add leading zero approprirate","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getRunNumberLeadingZero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"correct run number to add leading zero where approprirate — getRunNumberLeadingZero","text":"","code":"getRunNumberLeadingZero(run_number)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getRunNumberLeadingZero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"correct run number to add leading zero where approprirate — getRunNumberLeadingZero","text":"run_number run number, likely metadata runNumber field","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getUserAuthToken.html","id":null,"dir":"Reference","previous_headings":"","what":"get (via a http POST request) your user authentication token from the database — getUserAuthToken","title":"get (via a http POST request) your user authentication token from the database — getUserAuthToken","text":"get (via http POST request) user authentication token database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getUserAuthToken.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get (via a http POST request) your user authentication token from the database — getUserAuthToken","text":"","code":"getUserAuthToken(url, username, password)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getUserAuthToken.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get (via a http POST request) your user authentication token from the database — getUserAuthToken","text":"url check database_info variable. configured organisms, can find database_info$organism$token_auth username valid username database. one, need ask one created password password associated username","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getUserAuthToken.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get (via a http POST request) your user authentication token from the database — getUserAuthToken","text":"auth token associated username password","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/getUserAuthToken.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"get (via a http POST request) your user authentication token from the database — getUserAuthToken","text":"save auth token public repository. example, might put .Renviron make sure .Renviron .gitignore. Otherwise, save outside github tracked directory otherwise ensure pushed github","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/grant_df.html","id":null,"dir":"Reference","previous_headings":"","what":"the 2016 grant summary represented as a dataframe — grant_df","title":"the 2016 grant summary represented as a dataframe — grant_df","text":"also check google sheet","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/grant_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the 2016 grant summary represented as a dataframe — grant_df","text":"","code":"grant_df"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/grant_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"the 2016 grant summary represented as a dataframe — grant_df","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 164 rows 3 columns.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/htseq_libraryComplexity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate percentage of library accounted for by top expressed genes — htseq_libraryComplexity","title":"Calculate percentage of library accounted for by top expressed genes — htseq_libraryComplexity","text":"Calculate percentage library accounted top expressed genes","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/htseq_libraryComplexity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate percentage of library accounted for by top expressed genes — htseq_libraryComplexity","text":"","code":"htseq_libraryComplexity(htseq_filename, num_genes = 25)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/htseq_libraryComplexity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate percentage of library accounted for by top expressed genes — htseq_libraryComplexity","text":"htseq_filename path htseq output given sample num_genes used select top expressed n genes. Default 25","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/htseq_libraryComplexity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate percentage of library accounted for by top expressed genes — htseq_libraryComplexity","text":"sum(top_n_genes) / total_counted_reads, rounded 4 decimal places","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/htseq_locusLog2cpm.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the log2cpm of a given locus in the htseq output — htseq_locusLog2cpm","title":"Get the log2cpm of a given locus in the htseq output — htseq_locusLog2cpm","text":"Get log2cpm given locus htseq output","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/htseq_locusLog2cpm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the log2cpm of a given locus in the htseq output — htseq_locusLog2cpm","text":"","code":"htseq_locusLog2cpm(   htseq_filename,   gene_id,   markers = c(\"CNAG_NAT\", \"CNAG_G418\") )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/htseq_locusLog2cpm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the log2cpm of a given locus in the htseq output — htseq_locusLog2cpm","text":"htseq_filename filepath htseq output gene_id gene id return log2cpm markers markers library. Default CNAG_NAT, CNAG_G418","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/htseq_locusLog2cpm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the log2cpm of a given locus in the htseq output — htseq_locusLog2cpm","text":"log2cpm given gene","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/htseq_notAlignedTotalPercent.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract notAlignedTotalPercent from novoalign log — htseq_notAlignedTotalPercent","title":"Extract notAlignedTotalPercent from novoalign log — htseq_notAlignedTotalPercent","text":"Extract notAlignedTotalPercent novoalign log","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/htseq_notAlignedTotalPercent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract notAlignedTotalPercent from novoalign log — htseq_notAlignedTotalPercent","text":"","code":"htseq_notAlignedTotalPercent(...)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/htseq_notAlignedTotalPercent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract notAlignedTotalPercent from novoalign log — htseq_notAlignedTotalPercent","text":"... Arguments passed parseNovoalignLog novoalign_log_path path given sample's novoalign log","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/htseq_notAlignedTotalPercent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract notAlignedTotalPercent from novoalign log — htseq_notAlignedTotalPercent","text":"unaligned reads / total reads","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/htseq_proteinCodingTotal.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate KN99 protein coding total — htseq_proteinCodingTotal","title":"Calculate KN99 protein coding total — htseq_proteinCodingTotal","text":"Specifically 'old' pipeline 'old' annotations.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/htseq_proteinCodingTotal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate KN99 protein coding total — htseq_proteinCodingTotal","text":"","code":"htseq_proteinCodingTotal(htseq_filename)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/htseq_proteinCodingTotal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate KN99 protein coding total — htseq_proteinCodingTotal","text":"htseq_filename path htseq output given sample","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/htseq_proteinCodingTotal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate KN99 protein coding total — htseq_proteinCodingTotal","text":"summed total reads protein coding genes (nctr RNA)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/isNumeric.html","id":null,"dir":"Reference","previous_headings":"","what":"test if argument is numeric — isNumeric","title":"test if argument is numeric — isNumeric","text":"copied directly limma codebase","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/isNumeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test if argument is numeric — isNumeric","text":"","code":"isNumeric(x)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/isNumeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"test if argument is numeric — isNumeric","text":"x R object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/isNumeric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test if argument is numeric — isNumeric","text":"copied limma docs: function used check validity arguments numeric functions. attempt emulate behavior internal generic math functions. IsNumeric differs .numeric data.frames columns numeric accepted numeric.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/is_integer64.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if value is datatype integer64 — is_integer64","title":"Test if value is datatype integer64 — is_integer64","text":"integer64 can cause problems filtering functions, eg timePoint integer64 datatype column, timePoint %% c(0L, 1440L) timePoint == 0 | timePoint == 1440 return different subsets","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/is_integer64.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if value is datatype integer64 — is_integer64","text":"","code":"is_integer64(x)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/is_integer64.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if value is datatype integer64 — is_integer64","text":"x numeric value","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/is_integer64.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if value is datatype integer64 — is_integer64","text":"boolean truth value determined whether input integer64","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/is_integer64.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Test if value is datatype integer64 — is_integer64","text":"https://community.rstudio.com/t/--handle--integer64-type/50024","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/kn99_novo_htseq_status.html","id":null,"dir":"Reference","previous_headings":"","what":"QC status codes for the novo+htseq pipeline — kn99_novo_htseq_status","title":"QC status codes for the novo+htseq pipeline — kn99_novo_htseq_status","text":"list metrics statuses (powers 2)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/kn99_novo_htseq_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QC status codes for the novo+htseq pipeline — kn99_novo_htseq_status","text":"","code":"kn99_novo_htseq_status"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/kn99_novo_htseq_status.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"QC status codes for the novo+htseq pipeline — kn99_novo_htseq_status","text":"object class list length 8.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/kn99_novo_htseq_thresholds.html","id":null,"dir":"Reference","previous_headings":"","what":"thresholds set for the novo+htseq pipeline — kn99_novo_htseq_thresholds","title":"thresholds set for the novo+htseq pipeline — kn99_novo_htseq_thresholds","text":"list metrics thresholds","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/kn99_novo_htseq_thresholds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"thresholds set for the novo+htseq pipeline — kn99_novo_htseq_thresholds","text":"","code":"kn99_novo_htseq_thresholds"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/kn99_novo_htseq_thresholds.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"thresholds set for the novo+htseq pipeline — kn99_novo_htseq_thresholds","text":"object class list length 10.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/listTables.html","id":null,"dir":"Reference","previous_headings":"","what":"list tables in databse — listTables","title":"list tables in databse — listTables","text":"list tables databse","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/listTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"list tables in databse — listTables","text":"","code":"listTables(db)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/listTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"list tables in databse — listTables","text":"db connection database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/listTables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"list tables in databse — listTables","text":"tables database","code":""},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/localView.html","id":null,"dir":"Reference","previous_headings":"","what":"To view a data.frame / data.table in LibreOffice Calc — localView","title":"To view a data.frame / data.table in LibreOffice Calc — localView","text":"Copied https://gitlab.com/zauster/ormisc/-/blob/master/R/view.R. purpose function write dataframe tmp file print path. Use clipr package write output clipboard easy pasting terminal. See example.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/localView.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To view a data.frame / data.table in LibreOffice Calc — localView","text":"","code":"localView(df)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/localView.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To view a data.frame / data.table in LibreOffice Calc — localView","text":"df data.frame (data.table tibble)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/localView.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"To view a data.frame / data.table in LibreOffice Calc — localView","text":"https://gitlab.com/zauster/ormisc/-/blob/master/R/view.R","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/localView.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"To view a data.frame / data.table in LibreOffice Calc — localView","text":"","code":"if (FALSE) { install.packages(clipr) library(clipr) # df is some dataframe in your environment write_clip(localView(df)) # in a terminal, you can how paste in the line that the cmd above put # in your clipboard and hit enter. your computer will know what to do next # hopefully }"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/locusCoverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate coverage over a given feature — locusCoverage","title":"Calculate coverage over a given feature — locusCoverage","text":"Calculate coverage given feature","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/locusCoverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate coverage over a given feature — locusCoverage","text":"","code":"locusCoverage(   bam_path,   locus_granges,   library_strandedness,   index_suffix = \".bai\",   coverage_threshold = 0,   ... )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/locusCoverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate coverage over a given feature — locusCoverage","text":"bam_path path given samples alignment file (.bam) locus_granges granges object given gene (feature one strand) library_strandedness one c(\"reverse\", \"\", \"unstranded\") index_suffix suffix append bampath. Default .bai coverage_threshold minimum threshold consider. Default 0 ... Arguments passed strandedScanBamParam quality_threshold quality threshold reads considered. 20l default, chosen b/c default HTSeq","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/locusCoverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate coverage over a given feature — locusCoverage","text":"coverage feature","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/moveNfCoFastqFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"move fastq files from lts to scratch for nf-co/rnaseq pipeline — moveNfCoFastqFiles","title":"move fastq files from lts to scratch for nf-co/rnaseq pipeline — moveNfCoFastqFiles","text":"using samplesheet created createNfCorePipelineSampleSheet, create file move fastq files lts scratch","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/moveNfCoFastqFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"move fastq files from lts to scratch for nf-co/rnaseq pipeline — moveNfCoFastqFiles","text":"","code":"moveNfCoFastqFiles(nf_co_samplesheet, from_prefix)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/moveNfCoFastqFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"move fastq files from lts to scratch for nf-co/rnaseq pipeline — moveNfCoFastqFiles","text":"nf_co_samplesheet samplesheet created createNfCorePipelineSamplesheet() prefixes set path files moved scratch from_prefix filepath source filename file","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/moveNfCoFastqFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"move fastq files from lts to scratch for nf-co/rnaseq pipeline — moveNfCoFastqFiles","text":"dataframe two columns, source destination","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/novoalignPipelineQC.html","id":null,"dir":"Reference","previous_headings":"","what":"QC a crypto run output by the novoalign+htseq pipeline — novoalignPipelineQC","title":"QC a crypto run output by the novoalign+htseq pipeline — novoalignPipelineQC","text":"coverage log2cpm annotated CDS","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/novoalignPipelineQC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QC a crypto run output by the novoalign+htseq pipeline — novoalignPipelineQC","text":"","code":"novoalignPipelineQC(   meta_df,   pipeline_output_dirpath,   annote_obj_path,   markers = c(\"NAT\", \"G418\"),   bam_suffix = \"_sorted_aligned_reads_with_annote.bam\",   novolog_suffix = \"_novoalign.log\",   exon_counts_suffix = \"_read_count.tsv\",   cds_counts_suffix = \"_read_count_cds.tsv\",   num_nodes = 10 )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/novoalignPipelineQC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QC a crypto run output by the novoalign+htseq pipeline — novoalignPipelineQC","text":"meta_df metadata samples like QC. note must included pipeline_output_dirpath pipeline_output_dirpath path directory stores subdirectories align, count logs, eg /mnt/scratch/rnaseq_pipeline/pipeline_out/run_5500 annote_obj_path path annotation file parsed rtracklayer::import markers list markers. must counts genome annotations. default c(\"NAT\", \"G418\") bam_suffix suffix appended bam files. default \"_sorted_aligned_reads_with_annote.bam\" novolog_suffix suffix appended log files. default \"_novoalign.log\" exon_counts_suffix suffix appended exon count files. default '_read_count.tsv' cds_counts_suffix suffix appended cds count files. default '_read_count.tsv' num_nodes number cpus(slurm definition)/threads(local). argument parallel function nnodes, hence name argument. Default 10","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/novoalignPipelineQC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"QC a crypto run output by the novoalign+htseq pipeline — novoalignPipelineQC","text":"dataframe, long format, columns fastqFileNumber, perturbed locus coverage/log2cpm, marker coverage/log2cpm library quality metrics","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/parseComparatives.html","id":null,"dir":"Reference","previous_headings":"","what":"parse text comparative sentence — parseComparatives","title":"parse text comparative sentence — parseComparatives","text":"return logical sentence \"3 > 4\")","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/parseComparatives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parse text comparative sentence — parseComparatives","text":"","code":"parseComparatives(value1, comparative, value2)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/parseComparatives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parse text comparative sentence — parseComparatives","text":"value1 number represented string, eg \"3\" comparative one c(\">\", \">=\", \"<\", \"<=\", \"==\") value2 number represented string, eg \"4\"","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/parseComparatives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parse text comparative sentence — parseComparatives","text":"logical characters evaluated 3 > 4","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/parseNovoalignLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a novoalign log — parseNovoalignLog","title":"Parse a novoalign log — parseNovoalignLog","text":"Parse novoalign log","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/parseNovoalignLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a novoalign log — parseNovoalignLog","text":"","code":"parseNovoalignLog(novoalign_log_path)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/parseNovoalignLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a novoalign log — parseNovoalignLog","text":"novoalign_log_path path given sample's novoalign log","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/parseNovoalignLog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a novoalign log — parseNovoalignLog","text":"dataframe columns metric, reads, percent. Metrics include: Read Sequences, Unique Alignment, Multi Mapped, Mapping Found, Homopolymer Filter","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/passing_genes_all.html","id":null,"dir":"Reference","previous_headings":"","what":"genes considered NOT to have 'high dispersion' — passing_genes_all","title":"genes considered NOT to have 'high dispersion' — passing_genes_all","text":"union old new protocol","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/passing_genes_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"genes considered NOT to have 'high dispersion' — passing_genes_all","text":"","code":"passing_genes_all"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/passing_genes_all.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"genes considered NOT to have 'high dispersion' — passing_genes_all","text":"object class tbl_df (inherits tbl, data.frame) 6746 rows 1 columns.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/patchTable.html","id":null,"dir":"Reference","previous_headings":"","what":"PATCH entries in database table — patchTable","title":"PATCH entries in database table — patchTable","text":"using package httr, update entries certain fields given rows table","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/patchTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PATCH entries in database table — patchTable","text":"","code":"patchTable(database_table_url, auth_token, update_df, id_col)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/patchTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PATCH entries in database table — patchTable","text":"database_table_url TRAILING '/'. eg \"http://18.224.181.136/api/v1/QualityAssess\" auth_token see brentlabRnaSeqTools::getUserAuthToken() update_df dataframe, preferrably tibble, already read , subsetted. Columns must correct data type db table id_col name id column table. number appended url create uri record","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/patchTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PATCH entries in database table — patchTable","text":"list httr::response() objects","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/plotRLEhistograms.html","id":null,"dir":"Reference","previous_headings":"","what":"composite plot of all rle_stats in one plot — plotRLEhistograms","title":"composite plot of all rle_stats in one plot — plotRLEhistograms","text":"composite plot rle_stats one plot","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/plotRLEhistograms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"composite plot of all rle_stats in one plot — plotRLEhistograms","text":"","code":"plotRLEhistograms(rle_df)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/plotRLEhistograms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"composite plot of all rle_stats in one plot — plotRLEhistograms","text":"rle_df samples x rle stats df minimum columns SAMPLE_DEVIATION_MEDIAN, ABS_SAMPLE_DEVIATION_MEDIAN, INTERQUARTILE_RANGE","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/plotRLEhistograms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"composite plot of all rle_stats in one plot — plotRLEhistograms","text":"plot three horizontal panels rle stats","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/plotRLEhistograms.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"composite plot of all rle_stats in one plot — plotRLEhistograms","text":"title graphs. use names returned object title presentation","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"post counts to database — postCounts","title":"post counts to database — postCounts","text":"using package httr, post raw count .csv, compiled counts given run, database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"post counts to database — postCounts","text":"","code":"postCounts(   database_counts_url,   run_number,   auth_token,   count_df,   fastq_table,   count_file_suffix = \"_read_count.tsv\" )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"post counts to database — postCounts","text":"database_counts_url eg database_info$kn99_urls$Counts. See database_info run_number run number counts sheet -- important b/c fastqFileNames necessarily unique outside runs auth_token see getUserAuthToken count_df counts read dataframe. Make sure 'feature' 'gene_id' column. Colnames need sample identifier fastq_table recent pull database fastq table count_file_suffix suffix appended fastqFileName count file column headings. default \"_read_count.tsv\"","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"post counts to database — postCounts","text":"list httr::response() objects","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postFastqSheet.html","id":null,"dir":"Reference","previous_headings":"","what":"post new fastq sheet to database — postFastqSheet","title":"post new fastq sheet to database — postFastqSheet","text":"post new fastq sheet database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postFastqSheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"post new fastq sheet to database — postFastqSheet","text":"","code":"postFastqSheet(database_fastq_url, auth_token, new_fastq_path)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postFastqSheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"post new fastq sheet to database — postFastqSheet","text":"database_fastq_url eg database_info$kn99_urls$FastqFiles. See see database_info auth_token see getUserAuthToken new_fastq_path path new fastq sheet","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postQcSheet.html","id":null,"dir":"Reference","previous_headings":"","what":"post new qc sheet to database — postQcSheet","title":"post new qc sheet to database — postQcSheet","text":"using package httr, post new qc sheet database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postQcSheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"post new qc sheet to database — postQcSheet","text":"","code":"postQcSheet(   database_qc_url,   auth_token,   run_number,   new_qc_path,   fastq_table_path )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postQcSheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"post new qc sheet to database — postQcSheet","text":"database_qc_url eg database_info$kn99_urls$QualityAssess. see database_info. auth_token getUserAuthToken run_number run number qc sheet -- important b/c fastqFileNames necessarily unique outside runs new_qc_path path new counts csv fastq_table_path path recent pull database fastq table","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postQcSheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"post new qc sheet to database — postQcSheet","text":"list httr::response() objects","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postQcSheet.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"post new qc sheet to database — postQcSheet","text":"can problems dependencies rename function. working now, see info https://statisticsglobe.com/r-error-cant-rename-columns--dont-exist","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Post a table to the database — postTable","title":"Post a table to the database — postTable","text":"Post table database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post a table to the database — postTable","text":"","code":"postTable(database_table_url, auth_token, df)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post a table to the database — postTable","text":"database_table_url see database_info. Use one URLS url slot auth_token see getUserAuthToken df dataframe read , example read_csv vroom","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/postTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post a table to the database — postTable","text":"POST results object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/qaFilter.html","id":null,"dir":"Reference","previous_headings":"","what":"Quality filter a brentlabRnaSeqSet object — qaFilter","title":"Quality filter a brentlabRnaSeqSet object — qaFilter","text":"Filter manual passes (overrides auto fail), automatic passes (unless auto failed), optionally RLE IQR Filter manual passes (overrides auto fail), automatic passes (unless auto failed), optionally RLE IQR","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/qaFilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quality filter a brentlabRnaSeqSet object — qaFilter","text":"","code":"qaFilter(x, ...)  # S4 method for brentlabRnaSeqSet qaFilter(x)  # S4 method for brentlabRnaSeqExperiment qaFilter(x, rle_iqr_threshold = NA, iqr_colname = NA)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/qaFilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quality filter a brentlabRnaSeqSet object — qaFilter","text":"x brentlabRnaSeqSet object ... arguments rle_iqr_threshold default NA, means rle_iqr_threshold filtering. Set value filter based RLE IQR. Note: RLE stats calculated removing libraryDate effect. iqr_colname default NA, creates iqr col name set name object. Pass col name , eg \"my_set_iqr\", specify iqr column name manually","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/qaFilter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quality filter a brentlabRnaSeqSet object — qaFilter","text":"quality assessment filtered brentlabRnaSeqSet object quality assessment filtered brentlabRnaSeqExperiment object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/qaFilter.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Quality filter a brentlabRnaSeqSet object — qaFilter","text":"brentlabRnaSeqSet (opposed brentlabRnaSeqExperiment), filters manualAudit autoAudit. rle filtering less 3 replicates, RLE stats NA. returned, also. Filter returned object wish samples 3 replicates.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/readHTSeqFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse HTSeq output to tibble — readHTSeqFile","title":"Parse HTSeq output to tibble — readHTSeqFile","text":"parse htseq output tibble columns (feature, sample). code copied National Cancer Institute GenomicDataCommons","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/readHTSeqFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse HTSeq output to tibble — readHTSeqFile","text":"","code":"readHTSeqFile(htseq_filename, samplename = \"sample\")"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/readHTSeqFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse HTSeq output to tibble — readHTSeqFile","text":"htseq_filename filepath htseq output samplename legacy pipeline, fastqFileName .fastq.gz replaced _read_count.tsv","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/readHTSeqFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse HTSeq output to tibble — readHTSeqFile","text":"dataframe columns feature, 'sample'","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/readHTSeqFile.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Parse HTSeq output to tibble — readHTSeqFile","text":"GenomicDataCommons::readHTSeqFile","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/readInData.html","id":null,"dir":"Reference","previous_headings":"","what":"read in columnar data — readInData","title":"read in columnar data — readInData","text":"given csv, tsv excel sheet, use right function read data","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/readInData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read in columnar data — readInData","text":"","code":"readInData(path)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/readInData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read in columnar data — readInData","text":"path path csv, tsv xlsx","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/removeLibdateByReplicate.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove the libraryDate effects from KN99 dds objs — removeLibdateByReplicate","title":"Remove the libraryDate effects from KN99 dds objs — removeLibdateByReplicate","text":"Remove libraryDate effects KN99 dds objs","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/removeLibdateByReplicate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove the libraryDate effects from KN99 dds objs — removeLibdateByReplicate","text":"","code":"removeLibdateByReplicate(dds, replicate_colname)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/removeLibdateByReplicate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove the libraryDate effects from KN99 dds objs — removeLibdateByReplicate","text":"dds deseq data object either formula matrix design note libraryDate included design, function remove anything replicate_colname column use replicate grouping. replicates described 1 column, purpose, group create 1 column. need design slot dds","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/removeLibdateByReplicate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove the libraryDate effects from KN99 dds objs — removeLibdateByReplicate","text":"list unremoved removed effect rle summary","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/removeParameterEffects.html","id":null,"dir":"Reference","previous_headings":"","what":"remove some effects from the counts — removeParameterEffects","title":"remove some effects from the counts — removeParameterEffects","text":"subtract effect norm counts single factor coef x design. coef normalized log space. dds must created model.matrix","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/removeParameterEffects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"remove some effects from the counts — removeParameterEffects","text":"","code":"removeParameterEffects(deseq_object, col_indicies)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/removeParameterEffects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"remove some effects from the counts — removeParameterEffects","text":"deseq_object deseq data object (recall brentlabRnaSeqSet child, works, ) col_indicies numeric vector corresponding column indicies batch parameters like remove","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/removeParameterEffects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"remove some effects from the counts — removeParameterEffects","text":"log2 scale gene samples matrix desired effects removed","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/removeParameterEffects.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"remove some effects from the counts — removeParameterEffects","text":"works formula model.matrix designs dds object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/replicateByProtocolTally.html","id":null,"dir":"Reference","previous_headings":"","what":"experimental replicates by libraryProtocol tally — replicateByProtocolTally","title":"experimental replicates by libraryProtocol tally — replicateByProtocolTally","text":"tally experimental replicate columns library prep protocol","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/replicateByProtocolTally.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"experimental replicates by libraryProtocol tally — replicateByProtocolTally","text":"","code":"replicateByProtocolTally(x, ...)  # S4 method for brentlabRnaSeqExperiment replicateByProtocolTally(x)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/replicateByProtocolTally.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"experimental replicates by libraryProtocol tally — replicateByProtocolTally","text":"x brentlabRnaSeqExperiment ... arguments","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/replicateByProtocolTally_90min.html","id":null,"dir":"Reference","previous_headings":"","what":"90min replicate by protocol tally — replicateByProtocolTally_90min","title":"90min replicate by protocol tally — replicateByProtocolTally_90min","text":"tally 90min induction genotype1 replicates libraryProtocol","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/replicateByProtocolTally_90min.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"90min replicate by protocol tally — replicateByProtocolTally_90min","text":"","code":"replicateByProtocolTally_90min(metadata_df)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/replicateByProtocolTally_90min.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"90min replicate by protocol tally — replicateByProtocolTally_90min","text":"metadata_df sample metadata database colData(blrs)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleByReplicateGroup.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate RLE by replicate groups — rleByReplicateGroup","title":"calculate RLE by replicate groups — rleByReplicateGroup","text":"calculate RLE replicate groups","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleByReplicateGroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate RLE by replicate groups — rleByReplicateGroup","text":"","code":"rleByReplicateGroup(replicates_vector, gene_quants, log2_transformed_flag)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleByReplicateGroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate RLE by replicate groups — rleByReplicateGroup","text":"replicates_vector list lists sublist represents replicate group. Entries must metadata parameter, fastqFileName, corresponds columns counts. Suggestion: use something like dplyr functions create list lists group_by() %>% group_split %>% pull(fastqFileName) gene_quants gene x sample dataframe values sort gene quantification (eg normed counts, log2(norm_counts) effect removed), possibly already logged (@see already_logged_flag) log2_transformed_flag boolean TRUE means counts already log2 space","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleByReplicateGroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate RLE by replicate groups — rleByReplicateGroup","text":"list dataframes replicate group replicateS_sample_list, dimensions gene x sample. values RLE gene given sample","code":""},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"plot RLE for a given column filter — rlePlot","title":"plot RLE for a given column filter — rlePlot","text":"plot RLE given column filter","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot RLE for a given column filter — rlePlot","text":"","code":"rlePlot(deseq_object, model_matrix, column_filter, title)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot RLE for a given column filter — rlePlot","text":"deseq_object deseq object results DESeq() call model_matrix deseq_object model matrix column_filter vector fastqFileNames (whatever columns -- samples -- called) title plots","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot RLE for a given column filter — rlePlot","text":"list slots norm_count_rle effect_removed_rle","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlotCompareEffectRemoved.html","id":null,"dir":"Reference","previous_headings":"","what":"plots output of rleSummaryByReplicateGroup — rlePlotCompareEffectRemoved","title":"plots output of rleSummaryByReplicateGroup — rlePlotCompareEffectRemoved","text":"plots output rleSummaryByReplicateGroup","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlotCompareEffectRemoved.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plots output of rleSummaryByReplicateGroup — rlePlotCompareEffectRemoved","text":"","code":"rlePlotCompareEffectRemoved(   norm_counts_rle,   removed_effect_rle,   metadata_df,   title )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlotCompareEffectRemoved.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plots output of rleSummaryByReplicateGroup — rlePlotCompareEffectRemoved","text":"norm_counts_rle output calculateRLE (maybe one sublists rleByReplicateGroup()) removed_effect_rle see norm_counts_rle, removing batch effects metadata_df metadata least FASTQFILENAME LIBRARYDATE title title plot","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlotCompareEffectRemoved.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plots output of rleSummaryByReplicateGroup — rlePlotCompareEffectRemoved","text":"ggplot norm counts (transparent) removedEffect 'counts' plot","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlot_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"the actual plotting function for rlePlot — rlePlot_helper","title":"the actual plotting function for rlePlot — rlePlot_helper","text":"actual plotting function rlePlot","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlot_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the actual plotting function for rlePlot — rlePlot_helper","text":"","code":"rlePlot_helper(   count_df,   log2_transformed_flag,   title,   gene_id_path = Sys.getenv(\"GENE_ID_PATH\") )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlot_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"the actual plotting function for rlePlot — rlePlot_helper","text":"count_df counts gene x sample log2_transformed_flag boolean TRUE indicates counts log2 space title title output plot gene_id_path path gene_ids. Default set read Sys.getenv(\"GENE_ID_PATH\")","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rlePlot_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"the actual plotting function for rlePlot — rlePlot_helper","text":"ggplot","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"rleSummary calculates summary statistics of rleFullTable — rleSummary","title":"rleSummary calculates summary statistics of rleFullTable — rleSummary","text":"rleSummary calculates summary statistics rleFullTable","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rleSummary calculates summary statistics of rleFullTable — rleSummary","text":"","code":"rleSummary(rle_table)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rleSummary calculates summary statistics of rleFullTable — rleSummary","text":"rle_table output rleFullTable","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rleSummary calculates summary statistics of rleFullTable — rleSummary","text":"dataframe sample rle summary statistics","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"transform normalized counts into regularized log expression — rleTransform","title":"transform normalized counts into regularized log expression — rleTransform","text":"transform normalized counts regularized log expression","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"transform normalized counts into regularized log expression — rleTransform","text":"","code":"rleTransform(object)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"transform normalized counts into regularized log expression — rleTransform","text":"object brentlabRnaSeqSet object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/rleTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"transform normalized counts into regularized log expression — rleTransform","text":"brentlabRnaSeqSetTransform object","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/run_numbers_with_leading_zero.html","id":null,"dir":"Reference","previous_headings":"","what":"A named list containing a run number without a leading zero, eg 647, with the value being the same runnumber with\na leading 0, eg 0647. — run_numbers_with_leading_zero","title":"A named list containing a run number without a leading zero, eg 647, with the value being the same runnumber with\na leading 0, eg 0647. — run_numbers_with_leading_zero","text":"best remedied database forcing column string adding 0s","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/run_numbers_with_leading_zero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A named list containing a run number without a leading zero, eg 647, with the value being the same runnumber with\na leading 0, eg 0647. — run_numbers_with_leading_zero","text":"","code":"run_numbers_with_leading_zero"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/run_numbers_with_leading_zero.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A named list containing a run number without a leading zero, eg 647, with the value being the same runnumber with\na leading 0, eg 0647. — run_numbers_with_leading_zero","text":"object class list length 13.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/sendCountsToDatabase.html","id":null,"dir":"Reference","previous_headings":"","what":"Send Counts to Database (legacy pipeline) — sendCountsToDatabase","title":"Send Counts to Database (legacy pipeline) — sendCountsToDatabase","text":"use novoalign + htseq brentlab rnaseq pipeline.","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/sendCountsToDatabase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send Counts to Database (legacy pipeline) — sendCountsToDatabase","text":"","code":"sendCountsToDatabase(htseq_path, run_number, auth_token, fastq_table_path)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/sendCountsToDatabase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send Counts to Database (legacy pipeline) — sendCountsToDatabase","text":"htseq_path path htseq-counts output run_number run number sample originates auth_token user authentication token database. See getUserAuthToken fastq_table_path path recent fastq table reflecting current state database","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/sendCountsToDatabase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send Counts to Database (legacy pipeline) — sendCountsToDatabase","text":"http response","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/setPerturbedLociToZero.html","id":null,"dir":"Reference","previous_headings":"","what":"Zero out perturbed expression — setPerturbedLociToZero","title":"Zero out perturbed expression — setPerturbedLociToZero","text":"set expression gene genotype1 particular sample zero","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/setPerturbedLociToZero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero out perturbed expression — setPerturbedLociToZero","text":"","code":"setPerturbedLociToZero(object)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/setPerturbedLociToZero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero out perturbed expression — setPerturbedLociToZero","text":"object deseq data set column genotype1 colData (brentlabRnaSeqSet also works)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/setPerturbedLociToZero.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Zero out perturbed expression — setPerturbedLociToZero","text":"error handling good yet -- error perturbed loci rownames object (eg, filtered due low expression)","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/splitProtocolGroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a brentlabRnaSeqSet into two by protocol — splitProtocolGroups","title":"Split a brentlabRnaSeqSet into two by protocol — splitProtocolGroups","text":"split object 'SolexaPrep' 'E7420L'","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/splitProtocolGroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a brentlabRnaSeqSet into two by protocol — splitProtocolGroups","text":"","code":"splitProtocolGroups(x, ...)  # S4 method for brentlabRnaSeqSet splitProtocolGroups(x)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/splitProtocolGroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a brentlabRnaSeqSet into two by protocol — splitProtocolGroups","text":"x brentlabRnaSeqSet ... arguments","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/splitProtocolGroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a brentlabRnaSeqSet into two by protocol — splitProtocolGroups","text":"list 'SolexaPrep' 'E7420L' group. call 'SolexaPrep' \"old\"","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/strandedScanBamParam.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function to create a ScanBamParam object — strandedScanBamParam","title":"A helper function to create a ScanBamParam object — strandedScanBamParam","text":"helper function create ScanBamParam object appropriate strandedness information","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/strandedScanBamParam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function to create a ScanBamParam object — strandedScanBamParam","text":"","code":"strandedScanBamParam(   locus_granges,   library_strandedness,   quality_threshold = 20L )"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/strandedScanBamParam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function to create a ScanBamParam object — strandedScanBamParam","text":"locus_granges granges object given gene (feature one strand) library_strandedness one c(\"reverse\", \"\", \"unstranded\") quality_threshold quality threshold reads considered. 20l default, chosen b/c default HTSeq","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/strandedScanBamParam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function to create a ScanBamParam object — strandedScanBamParam","text":"ScanBamParam object certain configured options, well reasonable defaults, filter bam file reads interest based strandedness (protocol) library prep.","code":""},{"path":[]},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/testBamPath.html","id":null,"dir":"Reference","previous_headings":"","what":"test bam path — testBamPath","title":"test bam path — testBamPath","text":"test bam path","code":""},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/testBamPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test bam path — testBamPath","text":"","code":"testBamPath(metadata_df)"},{"path":"https://brentlab.github.io/brentlabRnaSeqTools/reference/testBamPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"test bam path — testBamPath","text":"metadata_df path metadata dataframe","code":""}]
